{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-\\.#:]"},"docs":[{"location":"rdoc/Nokogiri.html","text":"","title":"Module: Nokogiri"},{"location":"rdoc/Nokogiri.html#Module%253A%2BNokogiri","text":"Defined in: lib/nokogiri.rb , lib/nokogiri/css.rb, lib/nokogiri/xml.rb, lib/nokogiri/html.rb, lib/nokogiri/xslt.rb, lib/nokogiri/gumbo.rb, lib/nokogiri/html4.rb, lib/nokogiri/html5.rb, lib/nokogiri/xml/dtd.rb, lib/nokogiri/css/node.rb, lib/nokogiri/xml/attr.rb, lib/nokogiri/xml/node.rb, lib/nokogiri/xml/text.rb, lib/nokogiri/xml/cdata.rb, lib/nokogiri/xml/xpath.rb, lib/nokogiri/html5/node.rb, lib/nokogiri/xml/reader.rb, lib/nokogiri/xml/schema.rb, lib/nokogiri/xml/builder.rb, lib/nokogiri/xml/pp/node.rb, lib/nokogiri/syntax_error.rb, lib/nokogiri/version/info.rb, lib/nokogiri/xml/document.rb, lib/nokogiri/xml/node_set.rb, lib/nokogiri/xml/notation.rb, lib/nokogiri/xml/relax_ng.rb, lib/nokogiri/html4/builder.rb, lib/nokogiri/xml/namespace.rb, lib/nokogiri/html4/document.rb, lib/nokogiri/html5/document.rb, lib/nokogiri/xml/sax/parser.rb, lib/nokogiri/xml/searchable.rb, lib/nokogiri/decorators/slop.rb, lib/nokogiri/xml/entity_decl.rb, lib/nokogiri/xslt/stylesheet.rb, lib/nokogiri/css/syntax_error.rb, lib/nokogiri/html4/sax/parser.rb, lib/nokogiri/version/constant.rb, lib/nokogiri/xml/element_decl.rb, lib/nokogiri/xml/sax/document.rb, lib/nokogiri/xml/syntax_error.rb, lib/nokogiri/css/parser_extras.rb, lib/nokogiri/css/xpath_visitor.rb, lib/nokogiri/xml/parse_options.rb, lib/nokogiri/xml/xpath_context.rb, lib/nokogiri/xml/attribute_decl.rb, lib/nokogiri/xml/character_data.rb, lib/nokogiri/html4/entity_lookup.rb, lib/nokogiri/xml/element_content.rb, lib/nokogiri/xml/sax/push_parser.rb, lib/nokogiri/xml/entity_reference.rb, lib/nokogiri/html4/sax/push_parser.rb, lib/nokogiri/xml/document_fragment.rb, lib/nokogiri/xml/node/save_options.rb, lib/nokogiri/xml/pp/character_data.rb, lib/nokogiri/xml/sax/parser_context.rb, lib/nokogiri/xml/xpath/syntax_error.rb, lib/nokogiri/html4/document_fragment.rb, lib/nokogiri/html5/document_fragment.rb, lib/nokogiri/html4/sax/parser_context.rb, lib/nokogiri/html4/element_description.rb, lib/nokogiri/xml/processing_instruction.rb, lib/nokogiri/html4/element_description_defaults.rb, ext/nokogiri/nokogiri.c","title":"Module: Nokogiri"},{"location":"rdoc/Nokogiri.html#Overview","text":"Nokogiri parses and searches XML/HTML very quickly, and also has correctly implemented CSS3 selector support as well as XPath 1.0 support. Parsing a document returns either a Nokogiri::XML::Document, or a Nokogiri::HTML4::Document depending on the kind of document you parse. Here is an example: See Nokogiri::XML::Searchable#css for more information about CSS searching. See Nokogiri::XML::Searchable#xpath for more information about XPath searching.","title":"Module: Nokogiri / Overview"},{"location":"rdoc/Nokogiri.html#Defined%2BUnder%2BNamespace","text":"Modules: CSS , Decorators , Gumbo , HTML , HTML4 , HTML5 , XML , XSLT Classes: EncodingHandler , SyntaxError , VersionInfo","title":"Module: Nokogiri / Defined Under Namespace"},{"location":"rdoc/Nokogiri.html#Constant%2BSummary","text":"VERSION_INFO = More complete version information about libxml VERSION = The version of Nokogiri you are using","title":"Module: Nokogiri / Constant Summary"},{"location":"rdoc/Nokogiri.html#Class%2BMethod%2BSummary","text":". HTML (input, url = nil, encoding = nil, options = XML::ParseOptions::DEFAULT_HTML, &block) \u21d2 Object Parse HTML. . HTML4 (input, url = nil, encoding = nil, options = XML::ParseOptions::DEFAULT_HTML, &block) \u21d2 Object Parse HTML. . HTML5 (input, url = nil, encoding = nil, **options, &block) \u21d2 Object Parse an HTML5 document. . install_default_aliases \u21d2 Object . jruby? \u21d2 Boolean :nodoc:. . make (input = nil, opts = {}, &blk) \u21d2 Object Create a new Nokogiri::XML::DocumentFragment. . parse (string, url = nil, encoding = nil, options = nil) \u21d2 Object Parse an HTML or XML document. . Slop (*args, &block) \u21d2 Object Parse a document and add the Slop decorator. . uses_gumbo? \u21d2 Boolean . uses_libxml? (requirement = nil) \u21d2 Boolean :nodoc:. . XML (thing, url = nil, encoding = nil, options = XML::ParseOptions::DEFAULT_XML, &block) \u21d2 Object Parse XML. . XSLT (stylesheet, modules = {}) \u21d2 Object Create a Nokogiri::XSLT::Stylesheet with stylesheet .","title":"Module: Nokogiri / Class Method Summary"},{"location":"rdoc/Nokogiri.html#Class%2BMethod%2BDetails","text":"","title":"Module: Nokogiri / Class Method Details"},{"location":"rdoc/Nokogiri.html#HTML-class_method","text":"Parse HTML. Convenience method for Nokogiri::HTML4::Document.parse","title":"Module: Nokogiri#HTML (input, url = nil, encoding = nil, options = XML::ParseOptions::DEFAULT_HTML, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri.html#HTML4-class_method","text":"Parse HTML. Convenience method for Nokogiri::HTML4::Document.parse","title":"Module: Nokogiri#HTML4 (input, url = nil, encoding = nil, options = XML::ParseOptions::DEFAULT_HTML, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri.html#HTML5-class_method","text":"Note: HTML5 functionality is not available when running JRuby. Parse an HTML5 document. Convenience method for Nokogiri::HTML5::Document.parse Since: v1.12.0","title":"Module: Nokogiri#HTML5 (input, url = nil, encoding = nil, **options, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri.html#install_default_aliases-class_method","text":"","title":"Module: Nokogiri#install_default_aliases \u21d2 Object "},{"location":"rdoc/Nokogiri.html#jruby%3F-class_method","text":":nodoc: Returns: ( Boolean )","title":"Module: Nokogiri#jruby? \u21d2 Boolean "},{"location":"rdoc/Nokogiri.html#make-class_method","text":"Create a new Nokogiri::XML::DocumentFragment","title":"Module: Nokogiri#make (input = nil, opts = {}, &blk)  \u21d2 Object "},{"location":"rdoc/Nokogiri.html#parse-class_method","text":"Parse an HTML or XML document. string contains the document.","title":"Module: Nokogiri#parse (string, url = nil, encoding = nil, options = nil)  \u21d2 Object "},{"location":"rdoc/Nokogiri.html#Slop-class_method","text":"Parse a document and add the Slop decorator. The Slop decorator implements method_missing such that methods may be used instead of CSS or XPath. For example:","title":"Module: Nokogiri#Slop (*args, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri.html#uses_gumbo%3F-class_method","text":"Returns: ( Boolean )","title":"Module: Nokogiri#uses_gumbo? \u21d2 Boolean "},{"location":"rdoc/Nokogiri.html#uses_libxml%3F-class_method","text":":nodoc: Returns: ( Boolean )","title":"Module: Nokogiri#uses_libxml? (requirement = nil)  \u21d2 Boolean "},{"location":"rdoc/Nokogiri.html#XML-class_method","text":"Parse XML. Convenience method for Nokogiri::XML::Document.parse","title":"Module: Nokogiri#XML (thing, url = nil, encoding = nil, options = XML::ParseOptions::DEFAULT_XML, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri.html#XSLT-class_method","text":"Create a Nokogiri::XSLT::Stylesheet with stylesheet . Example: Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri#XSLT (stylesheet, modules = {})  \u21d2 Object "},{"location":"rdoc/XSD.html","text":"","title":"Module: XSD"},{"location":"rdoc/XSD.html#Module%253A%2BXSD","text":"Defined in: lib/xsd/xmlparser/nokogiri.rb","title":"Module: XSD"},{"location":"rdoc/XSD.html#Overview","text":":nodoc:","title":"Module: XSD / Overview"},{"location":"rdoc/XSD.html#Defined%2BUnder%2BNamespace","text":"Modules: XMLParser Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: XSD / Defined Under Namespace"},{"location":"rdoc/Nokogiri/CSS.html","text":"","title":"Module: Nokogiri::CSS"},{"location":"rdoc/Nokogiri/CSS.html#Module%253A%2BNokogiri%253A%253ACSS","text":"Defined in: lib/nokogiri/css.rb , lib/nokogiri/css/node.rb, lib/nokogiri/css/syntax_error.rb, lib/nokogiri/css/parser_extras.rb, lib/nokogiri/css/xpath_visitor.rb","title":"Module: Nokogiri::CSS"},{"location":"rdoc/Nokogiri/CSS.html#Defined%2BUnder%2BNamespace","text":"Classes: Node , Parser , SyntaxError , XPathVisitor , XPathVisitorAlwaysUseBuiltins , XPathVisitorOptimallyUseBuiltins","title":"Module: Nokogiri::CSS / Defined Under Namespace"},{"location":"rdoc/Nokogiri/CSS.html#Class%2BMethod%2BSummary","text":". parse (selector) \u21d2 Object Parse this CSS selector in selector . . xpath_for (selector, options = {}) \u21d2 Object Get the XPath for selector .","title":"Module: Nokogiri::CSS / Class Method Summary"},{"location":"rdoc/Nokogiri/CSS.html#Class%2BMethod%2BDetails","text":"","title":"Module: Nokogiri::CSS / Class Method Details"},{"location":"rdoc/Nokogiri/CSS.html#parse-class_method","text":"Parse this CSS selector in selector . Returns an AST.","title":"Module: Nokogiri::CSS#parse (selector)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS.html#xpath_for-class_method","text":"Get the XPath for selector . Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::CSS#xpath_for (selector, options = {})  \u21d2 Object "},{"location":"rdoc/Nokogiri/Decorators.html","text":"","title":"Module: Nokogiri::Decorators"},{"location":"rdoc/Nokogiri/Decorators.html#Module%253A%2BNokogiri%253A%253ADecorators","text":"Defined in: lib/nokogiri/decorators/slop.rb","title":"Module: Nokogiri::Decorators"},{"location":"rdoc/Nokogiri/Decorators.html#Defined%2BUnder%2BNamespace","text":"Modules: Slop Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::Decorators / Defined Under Namespace"},{"location":"rdoc/Nokogiri/EncodingHandler.html","text":"","title":"Class: Nokogiri::EncodingHandler"},{"location":"rdoc/Nokogiri/EncodingHandler.html#Class%253A%2BNokogiri%253A%253AEncodingHandler","text":"Inherits: Object Object Nokogiri::EncodingHandler show all Defined in: ext/nokogiri/xml_encoding_handler.c","title":"Class: Nokogiri::EncodingHandler"},{"location":"rdoc/Nokogiri/EncodingHandler.html#Class%2BMethod%2BSummary","text":". Nokogiri::EncodingHandler.[] (name) \u21d2 Object Get the encoding handler for name . . Nokogiri::EncodingHandler.alias (from, to) \u21d2 Object Alias encoding handler with name from to name to . . Nokogiri::EncodingHandler.clear_aliases! \u21d2 Object Remove all encoding aliases. . Nokogiri::EncodingHandler.delete (name) \u21d2 Object Delete the encoding alias named name .","title":"Class: Nokogiri::EncodingHandler / Class Method Summary"},{"location":"rdoc/Nokogiri/EncodingHandler.html#Instance%2BMethod%2BSummary","text":"# name \u21d2 Object Get the name of this EncodingHandler.","title":"Class: Nokogiri::EncodingHandler / Instance Method Summary"},{"location":"rdoc/Nokogiri/EncodingHandler.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::EncodingHandler / Class Method Details"},{"location":"rdoc/Nokogiri/EncodingHandler.html#%5B%5D-class_method","text":"Get the encoding handler for name","title":"Class: Nokogiri::EncodingHandler#Nokogiri::EncodingHandler#[] (name)  \u21d2 Object "},{"location":"rdoc/Nokogiri/EncodingHandler.html#alias-class_method","text":"Alias encoding handler with name from to name to","title":"Class: Nokogiri::EncodingHandler#Nokogiri::EncodingHandler#alias (from, to)  \u21d2 Object "},{"location":"rdoc/Nokogiri/EncodingHandler.html#clear_aliases%21-class_method","text":"Remove all encoding aliases.","title":"Class: Nokogiri::EncodingHandler#Nokogiri::EncodingHandler#clear_aliases! \u21d2 Object "},{"location":"rdoc/Nokogiri/EncodingHandler.html#delete-class_method","text":"Delete the encoding alias named name","title":"Class: Nokogiri::EncodingHandler#Nokogiri::EncodingHandler#delete (name)  \u21d2 Object "},{"location":"rdoc/Nokogiri/EncodingHandler.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::EncodingHandler / Instance Method Details"},{"location":"rdoc/Nokogiri/EncodingHandler.html#name-instance_method","text":"Get the name of this EncodingHandler Generated on Mon Sep 27 15:13:37 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::EncodingHandler#name \u21d2 Object "},{"location":"rdoc/Nokogiri/Gumbo.html","text":"","title":"Module: Nokogiri::Gumbo"},{"location":"rdoc/Nokogiri/Gumbo.html#Module%253A%2BNokogiri%253A%253AGumbo","text":"Defined in: lib/nokogiri/gumbo.rb , ext/nokogiri/nokogiri.c","title":"Module: Nokogiri::Gumbo"},{"location":"rdoc/Nokogiri/Gumbo.html#Constant%2BSummary","text":"DEFAULT_MAX_ATTRIBUTES = The default maximum number of attributes per element. DEFAULT_MAX_ERRORS = The default maximum number of errors for parsing a document or a fragment. DEFAULT_MAX_TREE_DEPTH = The default maximum depth of the DOM tree produced by parsing a document or fragment. Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::Gumbo / Constant Summary"},{"location":"rdoc/Nokogiri/HTML.html","text":"","title":"Module: Nokogiri::HTML"},{"location":"rdoc/Nokogiri/HTML.html#Module%253A%2BNokogiri%253A%253AHTML","text":"Defined in: lib/nokogiri/html.rb","title":"Module: Nokogiri::HTML"},{"location":"rdoc/Nokogiri/HTML.html#Overview","text":"Note: This module/namespace is an alias for HTML4 as of v1.12.0. Before v1.12.0, HTML4 did not exist, and this was the module/namespace for all HTML-related classes.","title":"Module: Nokogiri::HTML / Overview"},{"location":"rdoc/Nokogiri/HTML.html#Defined%2BUnder%2BNamespace","text":"Modules: SAX Classes: Builder , Document , DocumentFragment Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::HTML / Defined Under Namespace"},{"location":"rdoc/Nokogiri/HTML4.html","text":"","title":"Module: Nokogiri::HTML4"},{"location":"rdoc/Nokogiri/HTML4.html#Module%253A%2BNokogiri%253A%253AHTML4","text":"Defined in: lib/nokogiri/html4.rb , lib/nokogiri/html4/builder.rb, lib/nokogiri/html4/document.rb, lib/nokogiri/html4/sax/parser.rb, lib/nokogiri/html4/entity_lookup.rb, lib/nokogiri/html4/sax/push_parser.rb, lib/nokogiri/html4/document_fragment.rb, lib/nokogiri/html4/sax/parser_context.rb, lib/nokogiri/html4/element_description.rb, lib/nokogiri/html4/element_description_defaults.rb, ext/nokogiri/nokogiri.c","title":"Module: Nokogiri::HTML4"},{"location":"rdoc/Nokogiri/HTML4.html#Overview","text":"Note: Before v1.12.0, HTML4 did not exist, and HTML was the module/namespace for parsing HTML. Since: v1.12.0","title":"Module: Nokogiri::HTML4 / Overview"},{"location":"rdoc/Nokogiri/HTML4.html#Defined%2BUnder%2BNamespace","text":"Modules: SAX Classes: Builder , Document , DocumentFragment , ElementDescription , EntityDescription , EntityLookup","title":"Module: Nokogiri::HTML4 / Defined Under Namespace"},{"location":"rdoc/Nokogiri/HTML4.html#Constant%2BSummary","text":"NamedCharacters = Instance of Nokogiri::HTML4::EntityLookup Since: v1.12.0","title":"Module: Nokogiri::HTML4 / Constant Summary"},{"location":"rdoc/Nokogiri/HTML4.html#Class%2BMethod%2BSummary","text":". fragment (string, encoding = nil) \u21d2 Object Parse a fragment from string in to a NodeSet. . parse (input, url = nil, encoding = nil, options = XML::ParseOptions::DEFAULT_HTML, &block) \u21d2 Object Parse HTML.","title":"Module: Nokogiri::HTML4 / Class Method Summary"},{"location":"rdoc/Nokogiri/HTML4.html#Class%2BMethod%2BDetails","text":"","title":"Module: Nokogiri::HTML4 / Class Method Details"},{"location":"rdoc/Nokogiri/HTML4.html#fragment-class_method","text":"Parse a fragment from string in to a NodeSet. Since: v1.12.0","title":"Module: Nokogiri::HTML4#fragment (string, encoding = nil)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4.html#parse-class_method","text":"Parse HTML. Convenience method for Nokogiri::HTML4::Document.parse Since: v1.12.0 Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::HTML4#parse (input, url = nil, encoding = nil, options = XML::ParseOptions::DEFAULT_HTML, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5.html","text":"","title":"Module: Nokogiri::HTML5"},{"location":"rdoc/Nokogiri/HTML5.html#Module%253A%2BNokogiri%253A%253AHTML5","text":"Includes: Node Defined in: lib/nokogiri/html5.rb , lib/nokogiri/html5/node.rb, lib/nokogiri/html5/document.rb, lib/nokogiri/html5/document_fragment.rb, ext/nokogiri/nokogiri.c","title":"Module: Nokogiri::HTML5"},{"location":"rdoc/Nokogiri/HTML5.html#Overview","text":"Note: HTML5 functionality is not available when running JRuby.","title":"Module: Nokogiri::HTML5 / Overview"},{"location":"rdoc/Nokogiri/HTML5.html#label-Usage","text":"Parse an HTML5 document: Parse an HTML5 fragment:","title":"Module: Nokogiri::HTML5 / Usage"},{"location":"rdoc/Nokogiri/HTML5.html#label-Parsing%2Boptions","text":"The document and fragment parsing methods support options that are different from Nokogiri's. Nokogiri.HTML5(html, url = nil, encoding = nil, options = {}) Nokogiri::HTML5.parse(html, url = nil, encoding = nil, options = {}) Nokogiri::HTML5::Document.parse(html, url = nil, encoding = nil, options = {}) Nokogiri::HTML5.fragment(html, encoding = nil, options = {}) Nokogiri::HTML5::DocumentFragment.parse(html, encoding = nil, options = {}) The three currently supported options are :max_errors , :max_tree_depth and :max_attributes , described below.","title":"Module: Nokogiri::HTML5 / Parsing options"},{"location":"rdoc/Nokogiri/HTML5.html#label-Error%2Breporting","text":"Nokogiri contains an experimental HTML5 parse error reporting facility. By default, no parse errors are reported but this can be configured by passing the :max_errors option to HTML5.parse or HTML5.fragment . For example, this script: Emits: Using max_errors: -1 results in an unlimited number of errors being returned. The errors returned by XML::Document#errors are instances of XML::SyntaxError . The HTML standard defines a number of standard parse error codes. These error codes only cover the \u201ctokenization\u201d stage of parsing HTML. The parse errors in the \u201ctree construction\u201d stage do not have standardized error codes (yet). As a convenience to Nokogiri users, the defined error codes are available via XML::SyntaxError#str1 method. Note that the first error is generic-parser because it's an error from the tree construction stage and doesn't have a standardized error code. For the purposes of semantic versioning, the error messages, error locations, and error codes are not part of Nokogiri's public API. That is, these are subject to change without Nokogiri's major version number changing. These may be stabilized in the future.","title":"Module: Nokogiri::HTML5Error reporting"},{"location":"rdoc/Nokogiri/HTML5.html#label-Maximum%2Btree%2Bdepth","text":"The maximum depth of the DOM tree parsed by the various parsing methods is configurable by the :max_tree_depth option. If the depth of the tree would exceed this limit, then an ArgumentError is thrown. This limit (which defaults to Nokogiri::Gumbo::DEFAULT_MAX_TREE_DEPTH = 400 ) can be removed by giving the option max_tree_depth: -1 .","title":"Module: Nokogiri::HTML5Maximum tree depth"},{"location":"rdoc/Nokogiri/HTML5.html#label-Attribute%2Blimit%2Bper%2Belement","text":"The maximum number of attributes per DOM element is configurable by the :max_attributes option. If a given element would exceed this limit, then an ArgumentError is thrown. This limit (which defaults to Nokogiri::Gumbo::DEFAULT_MAX_ATTRIBUTES = 400 ) can be removed by giving the option max_attributes: -1 .","title":"Module: Nokogiri::HTML5Attribute limit per element"},{"location":"rdoc/Nokogiri/HTML5.html#label-HTML%2BSerialization","text":"After parsing HTML, it may be serialized using any of the XML::Node serialization methods. In particular, XML::Node#serialize , XML::Node#to_html , and XML::Node#to_s will serialize a given node and its children. (This is the equivalent of JavaScript's Element.outerHTML .) Similarly, XML::Node#inner_html will serialize the children of a given node. (This is the equivalent of JavaScript's Element.innerHTML .) Due to quirks in how HTML is parsed and serialized, it's possible for a DOM tree to be serialized and then re-parsed, resulting in a different DOM. Mostly, this happens with DOMs produced from invalid HTML. Unfortunately, even valid HTML may not survive serialization and re-parsing. In particular, a newline at the start of pre , listing , and textarea elements is ignored by the parser. In this case, the original HTML is semantically equivalent to the serialized version. If the pre , listing , or textarea content starts with two newlines, the first newline will be stripped on the first parse and the second newline will be stripped on the second, leading to semantically different DOMs. Passing the parameter preserve_newline: true will cause two or more newlines to be preserved. (A single leading newline will still be removed.)","title":"Module: Nokogiri::HTML5 / HTML Serialization"},{"location":"rdoc/Nokogiri/HTML5.html#label-Encodings","text":"Nokogiri always parses HTML5 using UTF-8 ; however, the encoding of the input can be explicitly selected via the optional encoding parameter. This is most useful when the input comes not from a string but from an IO object. When serializing a document or node, the encoding of the output string can be specified via the :encoding options. Characters that cannot be encoded in the selected encoding will be encoded as HTML numeric entities . (There's a bug in all current versions of Ruby that can cause the entity encoding to fail. Of the mandated supported encodings for HTML, the only encoding I'm aware of that has this bug is 'ISO-2022-JP' . We recommend avoiding this encoding.)","title":"Module: Nokogiri::HTML5 / Encodings"},{"location":"rdoc/Nokogiri/HTML5.html#label-Notes","text":"The HTML5.fragment function takes a string and parses it as a HTML5 document. The <html> , <head> , and <body> elements are removed from this document, and any children of these elements that remain are returned as a DocumentFragment . The HTML5.parse function takes a string and passes it to the gumbo_parse_with_options method, using the default options. The resulting Gumbo parse tree is then walked. Instead of uppercase element names, lowercase element names are produced. Instead of returning unknown as the element name for unknown tags, the original tag name is returned verbatim. Since: v1.12.0","title":"Module: Nokogiri::HTML5 / Notes"},{"location":"rdoc/Nokogiri/HTML5.html#Defined%2BUnder%2BNamespace","text":"Modules: Node Classes: Document , DocumentFragment","title":"Module: Nokogiri::HTML5 / Defined Under Namespace"},{"location":"rdoc/Nokogiri/HTML5.html#Constant%2BSummary","text":"HTML_NAMESPACE = HTML uses the XHTML namespace. Since: v1.12.0 MATHML_NAMESPACE = Since: v1.12.0 SVG_NAMESPACE = Since: v1.12.0 XLINK_NAMESPACE = Since: v1.12.0 XML_NAMESPACE = Since: v1.12.0 XMLNS_NAMESPACE = Since: v1.12.0","title":"Module: Nokogiri::HTML5 / Constant Summary"},{"location":"rdoc/Nokogiri/HTML5.html#Class%2BMethod%2BSummary","text":". fragment (string, encoding = nil, **options) \u21d2 Object Parse a fragment from string . . get (uri, options = {}) \u21d2 Object Fetch and parse a HTML document from the web, following redirects, handling https, and determining the character encoding using HTML5 rules. . parse (string, url = nil, encoding = nil, **options, &block) \u21d2 Object Parse an HTML 5 document.","title":"Module: Nokogiri::HTML5 / Class Method Summary"},{"location":"rdoc/Nokogiri/HTML5.html#Instance%2BMethod%2BSummary","text":"# fragment (tags) \u21d2 Object included from Node # inner_html (options = {}) \u21d2 Object included from Node # write_to (io, *options) {|config| ... } \u21d2 Object included from Node","title":"Module: Nokogiri::HTML5 / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML5.html#Class%2BMethod%2BDetails","text":"","title":"Module: Nokogiri::HTML5 / Class Method Details"},{"location":"rdoc/Nokogiri/HTML5.html#fragment-class_method","text":"Parse a fragment from string . Convenience method for Nokogiri::HTML5::DocumentFragment.parse . Since: v1.12.0","title":"Module: Nokogiri::HTML5#fragment (string, encoding = nil, **options)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5.html#get-class_method","text":"Fetch and parse a HTML document from the web, following redirects, handling https, and determining the character encoding using HTML5 rules. uri may be a String or a URI . options contains http headers and special options. Everything which is not a special option is considered a header. Special options include: Since: v1.12.0","title":"Module: Nokogiri::HTML5#get (uri, options = {})  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5.html#parse-class_method","text":"Parse an HTML 5 document. Convenience method for Nokogiri::HTML5::Document.parse Since: v1.12.0","title":"Module: Nokogiri::HTML5#parse (string, url = nil, encoding = nil, **options, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5.html#Instance%2BMethod%2BDetails","text":"","title":"Module: Nokogiri::HTML5 / Instance Method Details"},{"location":"rdoc/Nokogiri/HTML5.html#fragment-instance_method","text":"Since: v1.12.0","title":"Module: Nokogiri::HTML5#fragment (tags)  \u21d2 Object  Originally defined in module Node  "},{"location":"rdoc/Nokogiri/HTML5.html#inner_html-instance_method","text":"Since: v1.12.0","title":"Module: Nokogiri::HTML5#inner_html (options = {})  \u21d2 Object  Originally defined in module Node  "},{"location":"rdoc/Nokogiri/HTML5.html#write_to-instance_method","text":"Yields: ( config ) Since: v1.12.0 Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::HTML5#write_to (io, *options) {|config|###} \u21d2 Object  Originally defined in module Node  "},{"location":"rdoc/Nokogiri/SyntaxError.html","text":"","title":"Exception: Nokogiri::SyntaxError"},{"location":"rdoc/Nokogiri/SyntaxError.html#Exception%253A%2BNokogiri%253A%253ASyntaxError","text":"Inherits: StandardError Object StandardError Nokogiri::SyntaxError show all Defined in: lib/nokogiri/syntax_error.rb , ext/nokogiri/nokogiri.c","title":"Exception: Nokogiri::SyntaxError"},{"location":"rdoc/Nokogiri/SyntaxError.html#Direct%2BKnown%2BSubclasses","text":"CSS::SyntaxError , XML::SyntaxError Generated on Mon Sep 27 15:13:34 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Exception: Nokogiri::SyntaxError / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/VersionInfo.html","text":"","title":"Class: Nokogiri::VersionInfo"},{"location":"rdoc/Nokogiri/VersionInfo.html#Class%253A%2BNokogiri%253A%253AVersionInfo","text":"Inherits: Object Object Nokogiri::VersionInfo show all Includes: Singleton Defined in: lib/nokogiri/version/info.rb","title":"Class: Nokogiri::VersionInfo"},{"location":"rdoc/Nokogiri/VersionInfo.html#Overview","text":":nodoc:","title":"Class: Nokogiri::VersionInfo / Overview"},{"location":"rdoc/Nokogiri/VersionInfo.html#Instance%2BMethod%2BSummary","text":"# compiled_libxml_version \u21d2 Object # compiled_libxslt_version \u21d2 Object # engine \u21d2 Object # jruby? \u21d2 Boolean # libxml2? \u21d2 Boolean # libxml2_has_iconv? \u21d2 Boolean # libxml2_precompiled? \u21d2 Boolean # libxml2_using_packaged? \u21d2 Boolean # libxml2_using_system? \u21d2 Boolean # libxslt_has_datetime? \u21d2 Boolean # loaded_libxml_version \u21d2 Object # loaded_libxslt_version \u21d2 Object # ruby_minor \u21d2 Object # to_hash \u21d2 Object # to_markdown \u21d2 Object # warnings \u21d2 Object # windows? \u21d2 Boolean","title":"Class: Nokogiri::VersionInfo / Instance Method Summary"},{"location":"rdoc/Nokogiri/VersionInfo.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::VersionInfo / Instance Method Details"},{"location":"rdoc/Nokogiri/VersionInfo.html#compiled_libxml_version-instance_method","text":"","title":"Class: Nokogiri::VersionInfo#compiled_libxml_version \u21d2 Object "},{"location":"rdoc/Nokogiri/VersionInfo.html#compiled_libxslt_version-instance_method","text":"","title":"Class: Nokogiri::VersionInfo#compiled_libxslt_version \u21d2 Object "},{"location":"rdoc/Nokogiri/VersionInfo.html#engine-instance_method","text":"","title":"Class: Nokogiri::VersionInfo#engine \u21d2 Object "},{"location":"rdoc/Nokogiri/VersionInfo.html#jruby%3F-instance_method","text":"Returns: ( Boolean )","title":"Class: Nokogiri::VersionInfo#jruby? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/VersionInfo.html#libxml2%3F-instance_method","text":"Returns: ( Boolean )","title":"Class: Nokogiri::VersionInfo#libxml2? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/VersionInfo.html#libxml2_has_iconv%3F-instance_method","text":"Returns: ( Boolean )","title":"Class: Nokogiri::VersionInfo#libxml2_has_iconv? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/VersionInfo.html#libxml2_precompiled%3F-instance_method","text":"Returns: ( Boolean )","title":"Class: Nokogiri::VersionInfo#libxml2_precompiled? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/VersionInfo.html#libxml2_using_packaged%3F-instance_method","text":"Returns: ( Boolean )","title":"Class: Nokogiri::VersionInfo#libxml2_using_packaged? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/VersionInfo.html#libxml2_using_system%3F-instance_method","text":"Returns: ( Boolean )","title":"Class: Nokogiri::VersionInfo#libxml2_using_system? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/VersionInfo.html#libxslt_has_datetime%3F-instance_method","text":"Returns: ( Boolean )","title":"Class: Nokogiri::VersionInfo#libxslt_has_datetime? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/VersionInfo.html#loaded_libxml_version-instance_method","text":"","title":"Class: Nokogiri::VersionInfo#loaded_libxml_version \u21d2 Object "},{"location":"rdoc/Nokogiri/VersionInfo.html#loaded_libxslt_version-instance_method","text":"","title":"Class: Nokogiri::VersionInfo#loaded_libxslt_version \u21d2 Object "},{"location":"rdoc/Nokogiri/VersionInfo.html#ruby_minor-instance_method","text":"","title":"Class: Nokogiri::VersionInfo#ruby_minor \u21d2 Object "},{"location":"rdoc/Nokogiri/VersionInfo.html#to_hash-instance_method","text":"","title":"Class: Nokogiri::VersionInfo#to_hash \u21d2 Object "},{"location":"rdoc/Nokogiri/VersionInfo.html#to_markdown-instance_method","text":"","title":"Class: Nokogiri::VersionInfo#to_markdown \u21d2 Object "},{"location":"rdoc/Nokogiri/VersionInfo.html#warnings-instance_method","text":"","title":"Class: Nokogiri::VersionInfo#warnings \u21d2 Object "},{"location":"rdoc/Nokogiri/VersionInfo.html#windows%3F-instance_method","text":"Returns: ( Boolean ) Generated on Mon Sep 27 15:13:34 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::VersionInfo#windows? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML.html","text":"","title":"Module: Nokogiri::XML"},{"location":"rdoc/Nokogiri/XML.html#Module%253A%2BNokogiri%253A%253AXML","text":"Defined in: lib/nokogiri/xml.rb , lib/nokogiri/xml/dtd.rb, lib/nokogiri/xml/attr.rb, lib/nokogiri/xml/node.rb, lib/nokogiri/xml/text.rb, lib/nokogiri/xml/cdata.rb, lib/nokogiri/xml/xpath.rb, lib/nokogiri/xml/reader.rb, lib/nokogiri/xml/schema.rb, lib/nokogiri/xml/builder.rb, lib/nokogiri/xml/pp/node.rb, lib/nokogiri/xml/document.rb, lib/nokogiri/xml/node_set.rb, lib/nokogiri/xml/notation.rb, lib/nokogiri/xml/relax_ng.rb, lib/nokogiri/xml/namespace.rb, lib/nokogiri/xml/sax/parser.rb, lib/nokogiri/xml/searchable.rb, lib/nokogiri/xml/entity_decl.rb, lib/nokogiri/xml/element_decl.rb, lib/nokogiri/xml/sax/document.rb, lib/nokogiri/xml/syntax_error.rb, lib/nokogiri/xml/parse_options.rb, lib/nokogiri/xml/xpath_context.rb, lib/nokogiri/xml/attribute_decl.rb, lib/nokogiri/xml/character_data.rb, lib/nokogiri/xml/element_content.rb, lib/nokogiri/xml/sax/push_parser.rb, lib/nokogiri/xml/entity_reference.rb, lib/nokogiri/xml/document_fragment.rb, lib/nokogiri/xml/node/save_options.rb, lib/nokogiri/xml/pp/character_data.rb, lib/nokogiri/xml/sax/parser_context.rb, lib/nokogiri/xml/xpath/syntax_error.rb, lib/nokogiri/xml/processing_instruction.rb, ext/nokogiri/nokogiri.c","title":"Module: Nokogiri::XML"},{"location":"rdoc/Nokogiri/XML.html#Defined%2BUnder%2BNamespace","text":"Modules: PP , SAX , Searchable , XPath Classes: Attr , AttributeDecl , Builder , CDATA , CharacterData , Comment , DTD , Document , DocumentFragment , Element , ElementContent , ElementDecl , EntityDecl , EntityReference , Namespace , Node , NodeSet , Notation , ParseOptions , ProcessingInstruction , Reader , RelaxNG , Schema , SyntaxError , Text , XPathContext","title":"Module: Nokogiri::XML / Defined Under Namespace"},{"location":"rdoc/Nokogiri/XML.html#Constant%2BSummary","text":"XML_C14N_1_0 = Original C14N 1.0 spec canonicalization XML_C14N_EXCLUSIVE_1_0 = Exclusive C14N 1.0 spec canonicalization XML_C14N_1_1 = C14N 1.1 spec canonicalization","title":"Module: Nokogiri::XML / Constant Summary"},{"location":"rdoc/Nokogiri/XML.html#Class%2BMethod%2BSummary","text":". fragment (string) \u21d2 Object Parse a fragment from string in to a NodeSet. . parse (thing, url = nil, encoding = nil, options = ParseOptions::DEFAULT_XML, &block) \u21d2 Object Parse XML. . Reader (string_or_io, url = nil, encoding = nil, options = ParseOptions::STRICT) {|options| ... } \u21d2 Object Parse an XML document using the Nokogiri::XML::Reader API. . RelaxNG (string_or_io, options = ParseOptions::DEFAULT_SCHEMA) \u21d2 Object Create a new Nokogiri::XML::RelaxNG document from string_or_io . . Schema (string_or_io, options = ParseOptions::DEFAULT_SCHEMA) \u21d2 Object Create a new Nokogiri::XML::Schema object using a string_or_io object.","title":"Module: Nokogiri::XML / Class Method Summary"},{"location":"rdoc/Nokogiri/XML.html#Class%2BMethod%2BDetails","text":"","title":"Module: Nokogiri::XML / Class Method Details"},{"location":"rdoc/Nokogiri/XML.html#fragment-class_method","text":"Parse a fragment from string in to a NodeSet.","title":"Module: Nokogiri::XML#fragment (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML.html#parse-class_method","text":"Parse XML. Convenience method for Nokogiri::XML::Document.parse","title":"Module: Nokogiri::XML#parse (thing, url = nil, encoding = nil, options = ParseOptions::DEFAULT_XML, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML.html#Reader-class_method","text":"Parse an XML document using the Nokogiri::XML::Reader API. See Nokogiri::XML::Reader for mor information Yields: ( options )","title":"Module: Nokogiri::XML#Reader (string_or_io, url = nil, encoding = nil, options = ParseOptions::STRICT) {|options|###} \u21d2 Object "},{"location":"rdoc/Nokogiri/XML.html#RelaxNG-class_method","text":"Create a new Nokogiri::XML::RelaxNG document from string_or_io . See Nokogiri::XML::RelaxNG for an example.","title":"Module: Nokogiri::XML#RelaxNG (string_or_io, options = ParseOptions::DEFAULT_SCHEMA)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML.html#Schema-class_method","text":"Create a new Nokogiri::XML::Schema object using a string_or_io object. Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::XML#Schema (string_or_io, options = ParseOptions::DEFAULT_SCHEMA)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XSLT.html","text":"","title":"Module: Nokogiri::XSLT"},{"location":"rdoc/Nokogiri/XSLT.html#Module%253A%2BNokogiri%253A%253AXSLT","text":"Defined in: lib/nokogiri/xslt.rb , lib/nokogiri/xslt/stylesheet.rb, ext/nokogiri/nokogiri.c","title":"Module: Nokogiri::XSLT"},{"location":"rdoc/Nokogiri/XSLT.html#Overview","text":"See Nokogiri::XSLT::Stylesheet for creating and manipulating Stylesheet object.","title":"Module: Nokogiri::XSLT / Overview"},{"location":"rdoc/Nokogiri/XSLT.html#Defined%2BUnder%2BNamespace","text":"Classes: Stylesheet","title":"Module: Nokogiri::XSLT / Defined Under Namespace"},{"location":"rdoc/Nokogiri/XSLT.html#Class%2BMethod%2BSummary","text":". parse (string, modules = {}) \u21d2 Object Parse the stylesheet in string , register any modules . . quote_params (params) \u21d2 Object Quote parameters in params for stylesheet safety. . register (uri, custom_handler_class) \u21d2 Object Register a class that implements custom XSLT transformation functions.","title":"Module: Nokogiri::XSLT / Class Method Summary"},{"location":"rdoc/Nokogiri/XSLT.html#Class%2BMethod%2BDetails","text":"","title":"Module: Nokogiri::XSLT / Class Method Details"},{"location":"rdoc/Nokogiri/XSLT.html#parse-class_method","text":"Parse the stylesheet in string , register any modules","title":"Module: Nokogiri::XSLT#parse (string, modules = {})  \u21d2 Object "},{"location":"rdoc/Nokogiri/XSLT.html#quote_params-class_method","text":"Quote parameters in params for stylesheet safety","title":"Module: Nokogiri::XSLT#quote_params (params)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XSLT.html#register-class_method","text":"Register a class that implements custom XSLT transformation functions. Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::XSLT#register (uri, custom_handler_class)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Node.html","text":"","title":"Class: Nokogiri::CSS::Node"},{"location":"rdoc/Nokogiri/CSS/Node.html#Class%253A%2BNokogiri%253A%253ACSS%253A%253ANode","text":"Inherits: Object Object Nokogiri::CSS::Node show all Defined in: lib/nokogiri/css/node.rb","title":"Class: Nokogiri::CSS::Node"},{"location":"rdoc/Nokogiri/CSS/Node.html#Constant%2BSummary","text":"ALLOW_COMBINATOR_ON_SELF =","title":"Class: Nokogiri::CSS::Node / Constant Summary"},{"location":"rdoc/Nokogiri/CSS/Node.html#Instance%2BAttribute%2BSummary","text":"# type \u21d2 Object Get the type of this node. # value \u21d2 Object Get the value of this node.","title":"Class: Nokogiri::CSS::Node / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/CSS/Node.html#Instance%2BMethod%2BSummary","text":"# accept (visitor) \u21d2 Object Accept visitor . # find_by_type (types) \u21d2 Object Find a node by type using types . # initialize (type, value) \u21d2 Node constructor Create a new Node with type and value . # to_a \u21d2 Object Convert to array. # to_type \u21d2 Object Convert to_type. # to_xpath (prefix = '//', visitor = XPathVisitor.new) \u21d2 Object Convert this CSS node to xpath with prefix using visitor .","title":"Class: Nokogiri::CSS::Node / Instance Method Summary"},{"location":"rdoc/Nokogiri/CSS/Node.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::CSS::Node / Constructor Details"},{"location":"rdoc/Nokogiri/CSS/Node.html#initialize-instance_method","text":"Create a new Node with type and value","title":"Class: Nokogiri::CSS::Node#initialize (type, value)  \u21d2 Node "},{"location":"rdoc/Nokogiri/CSS/Node.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::CSS::Node / Instance Attribute Details"},{"location":"rdoc/Nokogiri/CSS/Node.html#type-instance_method","text":"Get the type of this node","title":"Class: Nokogiri::CSS::Node#type \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Node.html#value-instance_method","text":"Get the value of this node","title":"Class: Nokogiri::CSS::Node#value \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Node.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::CSS::Node / Instance Method Details"},{"location":"rdoc/Nokogiri/CSS/Node.html#accept-instance_method","text":"Accept visitor","title":"Class: Nokogiri::CSS::Node#accept (visitor)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Node.html#find_by_type-instance_method","text":"Find a node by type using types","title":"Class: Nokogiri::CSS::Node#find_by_type (types)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Node.html#to_a-instance_method","text":"Convert to array","title":"Class: Nokogiri::CSS::Node#to_a \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Node.html#to_type-instance_method","text":"Convert to_type","title":"Class: Nokogiri::CSS::Node#to_type \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Node.html#to_xpath-instance_method","text":"Convert this CSS node to xpath with prefix using visitor Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::CSS::Node#to_xpath (prefix = '//', visitor = XPathVisitor#new)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Parser.html","text":"","title":"Class: Nokogiri::CSS::Parser"},{"location":"rdoc/Nokogiri/CSS/Parser.html#Class%253A%2BNokogiri%253A%253ACSS%253A%253AParser","text":"Inherits: Racc::Parser Object Racc::Parser Nokogiri::CSS::Parser show all Defined in: lib/nokogiri/css/parser_extras.rb","title":"Class: Nokogiri::CSS::Parser"},{"location":"rdoc/Nokogiri/CSS/Parser.html#Constant%2BSummary","text":"CACHE_SWITCH_NAME =","title":"Class: Nokogiri::CSS::Parser / Constant Summary"},{"location":"rdoc/Nokogiri/CSS/Parser.html#Class%2BMethod%2BSummary","text":". [] (string) \u21d2 Object Get the css selector in string from the cache. . []= (string, value) \u21d2 Object Set the css selector in string in the cache to value . . cache_on? \u21d2 Boolean Return a thread-local boolean indicating whether the CSS-to-XPath cache is active. . clear_cache (create_new_object = false) \u21d2 Object Clear the cache. . set_cache (value) \u21d2 Object Set a thread-local boolean to turn cacheing on and off. . without_cache (&block) \u21d2 Object Execute block without cache.","title":"Class: Nokogiri::CSS::Parser / Class Method Summary"},{"location":"rdoc/Nokogiri/CSS/Parser.html#Instance%2BMethod%2BSummary","text":"# initialize (namespaces = {}) \u21d2 Parser constructor Create a new CSS parser with respect to namespaces . # next_token \u21d2 Object # on_error (error_token_id, error_value, value_stack) \u21d2 Object On CSS parser error, raise an exception. # parse (string) \u21d2 Object # xpath_for (string, options = {}) \u21d2 Object Get the xpath for string using options .","title":"Class: Nokogiri::CSS::Parser / Instance Method Summary"},{"location":"rdoc/Nokogiri/CSS/Parser.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::CSS::Parser / Constructor Details"},{"location":"rdoc/Nokogiri/CSS/Parser.html#initialize-instance_method","text":"Create a new CSS parser with respect to namespaces","title":"Class: Nokogiri::CSS::Parser#initialize (namespaces = {})  \u21d2 Parser "},{"location":"rdoc/Nokogiri/CSS/Parser.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::CSS::Parser / Class Method Details"},{"location":"rdoc/Nokogiri/CSS/Parser.html#%5B%5D-class_method","text":"Get the css selector in string from the cache","title":"Class: Nokogiri::CSS::Parser#[] (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Parser.html#%5B%5D%3D-class_method","text":"Set the css selector in string in the cache to value","title":"Class: Nokogiri::CSS::Parser#[]= (string, value)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Parser.html#cache_on%3F-class_method","text":"Return a thread-local boolean indicating whether the CSS-to-XPath cache is active. (Default is `true`.) Returns: ( Boolean )","title":"Class: Nokogiri::CSS::Parser#cache_on? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/CSS/Parser.html#clear_cache-class_method","text":"Clear the cache","title":"Class: Nokogiri::CSS::Parser#clear_cache (create_new_object = false)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Parser.html#set_cache-class_method","text":"Set a thread-local boolean to turn cacheing on and off. Truthy values turn the cache on, falsey values turn the cache off.","title":"Class: Nokogiri::CSS::Parser#set_cache (value)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Parser.html#without_cache-class_method","text":"Execute block without cache","title":"Class: Nokogiri::CSS::Parser#without_cache (&block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Parser.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::CSS::Parser / Instance Method Details"},{"location":"rdoc/Nokogiri/CSS/Parser.html#next_token-instance_method","text":"","title":"Class: Nokogiri::CSS::Parser#next_token \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Parser.html#on_error-instance_method","text":"On CSS parser error, raise an exception Raises: ( SyntaxError )","title":"Class: Nokogiri::CSS::Parser#on_error (error_token_id, error_value, value_stack)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Parser.html#parse-instance_method","text":"","title":"Class: Nokogiri::CSS::Parser#parse (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/Parser.html#xpath_for-instance_method","text":"Get the xpath for string using options Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::CSS::Parser#xpath_for (string, options = {})  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/SyntaxError.html","text":"","title":"Exception: Nokogiri::CSS::SyntaxError"},{"location":"rdoc/Nokogiri/CSS/SyntaxError.html#Exception%253A%2BNokogiri%253A%253ACSS%253A%253ASyntaxError","text":"Inherits: SyntaxError Object StandardError SyntaxError Nokogiri::CSS::SyntaxError show all Defined in: lib/nokogiri/css/syntax_error.rb Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Exception: Nokogiri::CSS::SyntaxError"},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html","text":"","title":"Class: Nokogiri::CSS::XPathVisitor"},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#Class%253A%2BNokogiri%253A%253ACSS%253A%253AXPathVisitor","text":"Inherits: Object Object Nokogiri::CSS::XPathVisitor show all Defined in: lib/nokogiri/css/xpath_visitor.rb","title":"Class: Nokogiri::CSS::XPathVisitor"},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#Overview","text":":nodoc:","title":"Class: Nokogiri::CSS::XPathVisitor / Overview"},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#Direct%2BKnown%2BSubclasses","text":"XPathVisitorAlwaysUseBuiltins , XPathVisitorOptimallyUseBuiltins","title":"Class: Nokogiri::CSS::XPathVisitor / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#Instance%2BMethod%2BSummary","text":"# accept (node) \u21d2 Object # visit_attribute_condition (node) \u21d2 Object # visit_class_condition (node) \u21d2 Object # visit_combinator (node) \u21d2 Object # visit_conditional_selector (node) \u21d2 Object # visit_element_name (node) \u21d2 Object # visit_function (node) \u21d2 Object # visit_id (node) \u21d2 Object # visit_not (node) \u21d2 Object # visit_pseudo_class (node) \u21d2 Object","title":"Class: Nokogiri::CSS::XPathVisitor / Instance Method Summary"},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::CSS::XPathVisitor / Instance Method Details"},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#accept-instance_method","text":"","title":"Class: Nokogiri::CSS::XPathVisitor#accept (node)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#visit_attribute_condition-instance_method","text":"","title":"Class: Nokogiri::CSS::XPathVisitor#visit_attribute_condition (node)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#visit_class_condition-instance_method","text":"","title":"Class: Nokogiri::CSS::XPathVisitor#visit_class_condition (node)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#visit_combinator-instance_method","text":"","title":"Class: Nokogiri::CSS::XPathVisitor#visit_combinator (node)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#visit_conditional_selector-instance_method","text":"","title":"Class: Nokogiri::CSS::XPathVisitor#visit_conditional_selector (node)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#visit_element_name-instance_method","text":"","title":"Class: Nokogiri::CSS::XPathVisitor#visit_element_name (node)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#visit_function-instance_method","text":"","title":"Class: Nokogiri::CSS::XPathVisitor#visit_function (node)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#visit_id-instance_method","text":"","title":"Class: Nokogiri::CSS::XPathVisitor#visit_id (node)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#visit_not-instance_method","text":"","title":"Class: Nokogiri::CSS::XPathVisitor#visit_not (node)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/XPathVisitor.html#visit_pseudo_class-instance_method","text":"Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::CSS::XPathVisitor#visit_pseudo_class (node)  \u21d2 Object "},{"location":"rdoc/Nokogiri/CSS/XPathVisitorAlwaysUseBuiltins.html","text":"","title":"Class: Nokogiri::CSS::XPathVisitorAlwaysUseBuiltins"},{"location":"rdoc/Nokogiri/CSS/XPathVisitorAlwaysUseBuiltins.html#Class%253A%2BNokogiri%253A%253ACSS%253A%253AXPathVisitorAlwaysUseBuiltins","text":"Inherits: XPathVisitor Object XPathVisitor Nokogiri::CSS::XPathVisitorAlwaysUseBuiltins show all Defined in: lib/nokogiri/css/xpath_visitor.rb","title":"Class: Nokogiri::CSS::XPathVisitorAlwaysUseBuiltins"},{"location":"rdoc/Nokogiri/CSS/XPathVisitorAlwaysUseBuiltins.html#Overview","text":":nodoc: Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::CSS::XPathVisitorAlwaysUseBuiltins / Overview"},{"location":"rdoc/Nokogiri/CSS/XPathVisitorOptimallyUseBuiltins.html","text":"","title":"Class: Nokogiri::CSS::XPathVisitorOptimallyUseBuiltins"},{"location":"rdoc/Nokogiri/CSS/XPathVisitorOptimallyUseBuiltins.html#Class%253A%2BNokogiri%253A%253ACSS%253A%253AXPathVisitorOptimallyUseBuiltins","text":"Inherits: XPathVisitor Object XPathVisitor Nokogiri::CSS::XPathVisitorOptimallyUseBuiltins show all Defined in: lib/nokogiri/css/xpath_visitor.rb","title":"Class: Nokogiri::CSS::XPathVisitorOptimallyUseBuiltins"},{"location":"rdoc/Nokogiri/CSS/XPathVisitorOptimallyUseBuiltins.html#Overview","text":":nodoc: Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::CSS::XPathVisitorOptimallyUseBuiltins / Overview"},{"location":"rdoc/Nokogiri/Decorators/Slop.html","text":"","title":"Module: Nokogiri::Decorators::Slop"},{"location":"rdoc/Nokogiri/Decorators/Slop.html#Module%253A%2BNokogiri%253A%253ADecorators%253A%253ASlop","text":"Defined in: lib/nokogiri/decorators/slop.rb","title":"Module: Nokogiri::Decorators::Slop"},{"location":"rdoc/Nokogiri/Decorators/Slop.html#Overview","text":"The Slop decorator implements method missing such that a methods may be used instead of XPath or CSS. See Nokogiri.Slop","title":"Module: Nokogiri::Decorators::Slop / Overview"},{"location":"rdoc/Nokogiri/Decorators/Slop.html#Constant%2BSummary","text":"XPATH_PREFIX = The default XPath search context for Slop","title":"Module: Nokogiri::Decorators::Slop / Constant Summary"},{"location":"rdoc/Nokogiri/Decorators/Slop.html#Instance%2BMethod%2BSummary","text":"# method_missing (name, *args, &block) \u21d2 Object look for node with name . # respond_to_missing? (name, include_private = false) \u21d2 Boolean","title":"Module: Nokogiri::Decorators::Slop / Instance Method Summary"},{"location":"rdoc/Nokogiri/Decorators/Slop.html#Dynamic%2BMethod%2BHandling","text":"This class handles dynamic methods through the method_missing method","title":"Module: Nokogiri::Decorators::Slop / Dynamic Method Handling"},{"location":"rdoc/Nokogiri/Decorators/Slop.html#method_missing-instance_method","text":"look for node with name . See Nokogiri.Slop","title":"Module: Nokogiri::Decorators::Slop#method_missing (name, *args, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/Decorators/Slop.html#Instance%2BMethod%2BDetails","text":"","title":"Module: Nokogiri::Decorators::Slop / Instance Method Details"},{"location":"rdoc/Nokogiri/Decorators/Slop.html#respond_to_missing%3F-instance_method","text":"Returns: ( Boolean ) Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::Decorators::Slop#respond_to_missing? (name, include_private = false)  \u21d2 Boolean "},{"location":"rdoc/Nokogiri/HTML/Builder.html","text":"","title":"Class: Nokogiri::HTML::Builder"},{"location":"rdoc/Nokogiri/HTML/Builder.html#Class%253A%2BNokogiri%253A%253AHTML%253A%253ABuilder","text":"Inherits: XML::Builder Object XML::Builder Nokogiri::HTML::Builder show all Defined in: lib/nokogiri/html.rb","title":"Class: Nokogiri::HTML::Builder"},{"location":"rdoc/Nokogiri/HTML/Builder.html#Overview","text":"Note: This class is an alias for Nokogiri::HTML4::Builder as of v1.12.0.","title":"Class: Nokogiri::HTML::Builder / Overview"},{"location":"rdoc/Nokogiri/HTML/Builder.html#Constructor%2BDetails","text":"This class inherits a constructor from Nokogiri::XML::Builder","title":"Class: Nokogiri::HTML::Builder / Constructor Details"},{"location":"rdoc/Nokogiri/HTML/Builder.html#Dynamic%2BMethod%2BHandling","text":"This class handles dynamic methods through the method_missing method in the class Nokogiri::XML::Builder Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML::Builder / Dynamic Method Handling"},{"location":"rdoc/Nokogiri/HTML/Document.html","text":"","title":"Class: Nokogiri::HTML::Document"},{"location":"rdoc/Nokogiri/HTML/Document.html#Class%253A%2BNokogiri%253A%253AHTML%253A%253ADocument","text":"Inherits: XML::Document Object XML::Node XML::Document Nokogiri::HTML::Document show all Defined in: lib/nokogiri/html.rb","title":"Class: Nokogiri::HTML::Document"},{"location":"rdoc/Nokogiri/HTML/Document.html#Overview","text":"Note: This class is an alias for Nokogiri::HTML4::Document as of v1.12.0.","title":"Class: Nokogiri::HTML::Document / Overview"},{"location":"rdoc/Nokogiri/HTML/Document.html#Constructor%2BDetails","text":"This class inherits a constructor from Nokogiri::XML::Document Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML::Document / Constructor Details"},{"location":"rdoc/Nokogiri/HTML/DocumentFragment.html","text":"","title":"Class: Nokogiri::HTML::DocumentFragment"},{"location":"rdoc/Nokogiri/HTML/DocumentFragment.html#Class%253A%2BNokogiri%253A%253AHTML%253A%253ADocumentFragment","text":"Inherits: XML::DocumentFragment Object XML::Node XML::DocumentFragment Nokogiri::HTML::DocumentFragment show all Defined in: lib/nokogiri/html.rb","title":"Class: Nokogiri::HTML::DocumentFragment"},{"location":"rdoc/Nokogiri/HTML/DocumentFragment.html#Overview","text":"Note: This class is an alias for Nokogiri::HTML4::DocumentFragment as of v1.12.0.","title":"Class: Nokogiri::HTML::DocumentFragment / Overview"},{"location":"rdoc/Nokogiri/HTML/DocumentFragment.html#Constructor%2BDetails","text":"This class inherits a constructor from Nokogiri::XML::DocumentFragment Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML::DocumentFragment / Constructor Details"},{"location":"rdoc/Nokogiri/HTML/SAX.html","text":"","title":"Module: Nokogiri::HTML::SAX"},{"location":"rdoc/Nokogiri/HTML/SAX.html#Module%253A%2BNokogiri%253A%253AHTML%253A%253ASAX","text":"Defined in: lib/nokogiri/html.rb","title":"Module: Nokogiri::HTML::SAX"},{"location":"rdoc/Nokogiri/HTML/SAX.html#Defined%2BUnder%2BNamespace","text":"Classes: Parser , ParserContext , PushParser Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::HTML::SAX / Defined Under Namespace"},{"location":"rdoc/Nokogiri/HTML/SAX/Parser.html","text":"","title":"Class: Nokogiri::HTML::SAX::Parser"},{"location":"rdoc/Nokogiri/HTML/SAX/Parser.html#Class%253A%2BNokogiri%253A%253AHTML%253A%253ASAX%253A%253AParser","text":"Inherits: XML::SAX::Parser Object XML::SAX::Parser Nokogiri::HTML::SAX::Parser show all Defined in: lib/nokogiri/html.rb","title":"Class: Nokogiri::HTML::SAX::Parser"},{"location":"rdoc/Nokogiri/HTML/SAX/Parser.html#Overview","text":"Note: This class is an alias for Nokogiri::HTML4::SAX::Parser as of v1.12.0.","title":"Class: Nokogiri::HTML::SAX::Parser / Overview"},{"location":"rdoc/Nokogiri/HTML/SAX/Parser.html#Constructor%2BDetails","text":"This class inherits a constructor from Nokogiri::XML::SAX::Parser Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML::SAX::Parser / Constructor Details"},{"location":"rdoc/Nokogiri/HTML/SAX/ParserContext.html","text":"","title":"Class: Nokogiri::HTML::SAX::ParserContext"},{"location":"rdoc/Nokogiri/HTML/SAX/ParserContext.html#Class%253A%2BNokogiri%253A%253AHTML%253A%253ASAX%253A%253AParserContext","text":"Inherits: XML::SAX::ParserContext Object XML::SAX::ParserContext Nokogiri::HTML::SAX::ParserContext show all Defined in: lib/nokogiri/html.rb","title":"Class: Nokogiri::HTML::SAX::ParserContext"},{"location":"rdoc/Nokogiri/HTML/SAX/ParserContext.html#Overview","text":"Note: This class is an alias for Nokogiri::HTML4::SAX::ParserContext as of v1.12.0. Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML::SAX::ParserContext / Overview"},{"location":"rdoc/Nokogiri/HTML/SAX/PushParser.html","text":"","title":"Class: Nokogiri::HTML::SAX::PushParser"},{"location":"rdoc/Nokogiri/HTML/SAX/PushParser.html#Class%253A%2BNokogiri%253A%253AHTML%253A%253ASAX%253A%253APushParser","text":"Inherits: Object Object Nokogiri::HTML::SAX::PushParser show all Defined in: lib/nokogiri/html.rb","title":"Class: Nokogiri::HTML::SAX::PushParser"},{"location":"rdoc/Nokogiri/HTML/SAX/PushParser.html#Overview","text":"Note: This class is an alias for Nokogiri::HTML4::SAX::PushParser as of v1.12.0. Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML::SAX::PushParser / Overview"},{"location":"rdoc/Nokogiri/HTML4/Builder.html","text":"","title":"Class: Nokogiri::HTML4::Builder"},{"location":"rdoc/Nokogiri/HTML4/Builder.html#Class%253A%2BNokogiri%253A%253AHTML4%253A%253ABuilder","text":"Inherits: XML::Builder Object XML::Builder Nokogiri::HTML4::Builder show all Defined in: lib/nokogiri/html4/builder.rb","title":"Class: Nokogiri::HTML4::Builder"},{"location":"rdoc/Nokogiri/HTML4/Builder.html#Overview","text":"Nokogiri HTML builder is used for building HTML documents. It is very similar to the Nokogiri::XML::Builder. In fact, you should go read the documentation for Nokogiri::XML::Builder before reading this documentation.","title":"Class: Nokogiri::HTML4::Builder / Overview"},{"location":"rdoc/Nokogiri/HTML4/Builder.html#label-Synopsis-3A","text":"Create an HTML document with a body that has an onload attribute, and a span tag with a class of \u201cbold\u201d that has content of \u201cHello world\u201d. The HTML builder inherits from the XML builder, so make sure to read the Nokogiri::XML::Builder documentation. Since: v1.12.0","title":"Class: Nokogiri::HTML4::Builder / Synopsis:"},{"location":"rdoc/Nokogiri/HTML4/Builder.html#Instance%2BMethod%2BSummary","text":"# to_html \u21d2 Object Convert the builder to HTML.","title":"Class: Nokogiri::HTML4::Builder / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML4/Builder.html#Constructor%2BDetails","text":"This class inherits a constructor from Nokogiri::XML::Builder","title":"Class: Nokogiri::HTML4::Builder / Constructor Details"},{"location":"rdoc/Nokogiri/HTML4/Builder.html#Dynamic%2BMethod%2BHandling","text":"This class handles dynamic methods through the method_missing method in the class Nokogiri::XML::Builder","title":"Class: Nokogiri::HTML4::Builder / Dynamic Method Handling"},{"location":"rdoc/Nokogiri/HTML4/Builder.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::Builder / Instance Method Details"},{"location":"rdoc/Nokogiri/HTML4/Builder.html#to_html-instance_method","text":"Convert the builder to HTML Since: v1.12.0 Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML4::Builder#to_html \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/Document.html","text":"","title":"Class: Nokogiri::HTML4::Document"},{"location":"rdoc/Nokogiri/HTML4/Document.html#Class%253A%2BNokogiri%253A%253AHTML4%253A%253ADocument","text":"Inherits: XML::Document Object XML::Node XML::Document Nokogiri::HTML4::Document show all Defined in: lib/nokogiri/html4/document.rb , ext/nokogiri/html4_document.c","title":"Class: Nokogiri::HTML4::Document"},{"location":"rdoc/Nokogiri/HTML4/Document.html#Overview","text":"Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document / Overview"},{"location":"rdoc/Nokogiri/HTML4/Document.html#Direct%2BKnown%2BSubclasses","text":"Nokogiri::HTML5::Document","title":"Class: Nokogiri::HTML4::Document / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/HTML4/Document.html#Defined%2BUnder%2BNamespace","text":"Classes: EncodingFound , EncodingReader","title":"Class: Nokogiri::HTML4::Document / Defined Under Namespace"},{"location":"rdoc/Nokogiri/HTML4/Document.html#Class%2BMethod%2BSummary","text":". new \u21d2 Object Create a new document. . parse (string_or_io, url = nil, encoding = nil, options = XML::ParseOptions::DEFAULT_HTML) {|options| ... } \u21d2 Object Parse HTML. . read_io (io, url, encoding, options) \u21d2 Object Read the HTML document from io with given url , encoding , and options . . read_memory (string, url, encoding, options) \u21d2 Object Read the HTML document contained in string with given url , encoding , and options .","title":"Class: Nokogiri::HTML4::Document / Class Method Summary"},{"location":"rdoc/Nokogiri/HTML4/Document.html#Instance%2BMethod%2BSummary","text":"# fragment (tags = nil) \u21d2 Object Create a Nokogiri::XML::DocumentFragment from tags . # meta_encoding \u21d2 Object Get the meta tag encoding for this document. # meta_encoding= (encoding) \u21d2 Object Set the meta tag encoding for this document. # serialize (options = {}) \u21d2 Object Serialize Node using options . # title \u21d2 Object Get the title string of this document. # title= (text) \u21d2 Object Set the title string of this document. # type \u21d2 Object The type for this document.","title":"Class: Nokogiri::HTML4::Document / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML4/Document.html#Constructor%2BDetails","text":"This class inherits a constructor from Nokogiri::XML::Document","title":"Class: Nokogiri::HTML4::Document / Constructor Details"},{"location":"rdoc/Nokogiri/HTML4/Document.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::Document / Class Method Details"},{"location":"rdoc/Nokogiri/HTML4/Document.html#new-class_method","text":"Create a new document Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document#new \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/Document.html#parse-class_method","text":"Parse HTML. string_or_io may be a String, or any object that responds to read and close such as an IO, or StringIO. url is resource where this document is located. encoding is the encoding that should be used when processing the document. options is a number that sets options in the parser, such as Nokogiri::XML::ParseOptions::RECOVER. See the constants in Nokogiri::XML::ParseOptions. Yields: ( options ) Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document#parse (string_or_io, url = nil, encoding = nil, options = XML::ParseOptions::DEFAULT_HTML) {|options|###} \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/Document.html#read_io-class_method","text":"Read the HTML document from io with given url , encoding , and options . See Nokogiri::HTML4.parse Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document#read_io (io, url, encoding, options)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/Document.html#read_memory-class_method","text":"Read the HTML document contained in string with given url , encoding , and options . See Nokogiri::HTML4.parse Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document#read_memory (string, url, encoding, options)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/Document.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::Document / Instance Method Details"},{"location":"rdoc/Nokogiri/HTML4/Document.html#fragment-instance_method","text":"Create a Nokogiri::XML::DocumentFragment from tags Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document#fragment (tags = nil)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/Document.html#meta_encoding-instance_method","text":"Get the meta tag encoding for this document. If there is no meta tag, then nil is returned. Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document#meta_encoding \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/Document.html#meta_encoding%3D-instance_method","text":"Set the meta tag encoding for this document. If an meta encoding tag is already present, its content is replaced with the given text. Otherwise, this method tries to create one at an appropriate place supplying head and/or html elements as necessary, which is inside a head element if any, and before any text node or content element (typically <body>) if any. The result when trying to set an encoding that is different from the document encoding is undefined. Beware in CRuby, that libxml2 automatically inserts a meta tag into a head element. Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document#meta_encoding= (encoding)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/Document.html#serialize-instance_method","text":"Serialize Node using options . Save options can also be set using a block. See SaveOptions. These two statements are equivalent: or Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document#serialize (options = {})  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/Document.html#title-instance_method","text":"Get the title string of this document. Return nil if there is no title tag. Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document#title \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/Document.html#title%3D-instance_method","text":"Set the title string of this document. If a title element is already present, its content is replaced with the given text. Otherwise, this method tries to create one at an appropriate place supplying head and/or html elements as necessary, which is inside a head element if any, right after a meta encoding/charset tag if any, and before any text node or content element (typically <body>) if any. Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document#title= (text)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/Document.html#type-instance_method","text":"The type for this document Since: v1.12.0 Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML4::Document#type \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/DocumentFragment.html","text":"","title":"Class: Nokogiri::HTML4::DocumentFragment"},{"location":"rdoc/Nokogiri/HTML4/DocumentFragment.html#Class%253A%2BNokogiri%253A%253AHTML4%253A%253ADocumentFragment","text":"Inherits: XML::DocumentFragment Object XML::Node XML::DocumentFragment Nokogiri::HTML4::DocumentFragment show all Defined in: lib/nokogiri/html4/document_fragment.rb","title":"Class: Nokogiri::HTML4::DocumentFragment"},{"location":"rdoc/Nokogiri/HTML4/DocumentFragment.html#Overview","text":"Since: v1.12.0","title":"Class: Nokogiri::HTML4::DocumentFragment / Overview"},{"location":"rdoc/Nokogiri/HTML4/DocumentFragment.html#Direct%2BKnown%2BSubclasses","text":"Nokogiri::HTML5::DocumentFragment","title":"Class: Nokogiri::HTML4::DocumentFragment / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/HTML4/DocumentFragment.html#Class%2BMethod%2BSummary","text":". parse (tags, encoding = nil) \u21d2 Object Create a Nokogiri::XML::DocumentFragment from tags , using encoding .","title":"Class: Nokogiri::HTML4::DocumentFragment / Class Method Summary"},{"location":"rdoc/Nokogiri/HTML4/DocumentFragment.html#Instance%2BMethod%2BSummary","text":"# initialize (document, tags = nil, ctx = nil) \u21d2 DocumentFragment constructor A new instance of DocumentFragment.","title":"Class: Nokogiri::HTML4::DocumentFragment / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML4/DocumentFragment.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::HTML4::DocumentFragment / Constructor Details"},{"location":"rdoc/Nokogiri/HTML4/DocumentFragment.html#initialize-instance_method","text":"Returns a new instance of DocumentFragment. Since: v1.12.0","title":"Class: Nokogiri::HTML4::DocumentFragment#initialize (document, tags = nil, ctx = nil)  \u21d2 DocumentFragment "},{"location":"rdoc/Nokogiri/HTML4/DocumentFragment.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::DocumentFragment / Class Method Details"},{"location":"rdoc/Nokogiri/HTML4/DocumentFragment.html#parse-class_method","text":"Create a Nokogiri::XML::DocumentFragment from tags , using encoding Since: v1.12.0 Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML4::DocumentFragment#parse (tags, encoding = nil)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html","text":"","title":"Class: Nokogiri::HTML4::ElementDescription"},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#Class%253A%2BNokogiri%253A%253AHTML4%253A%253AElementDescription","text":"Inherits: Object Object Nokogiri::HTML4::ElementDescription show all Defined in: lib/nokogiri/html4/element_description.rb , lib/nokogiri/html4/element_description_defaults.rb, ext/nokogiri/html4_element_description.c","title":"Class: Nokogiri::HTML4::ElementDescription"},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#Overview","text":"Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription / Overview"},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#Defined%2BUnder%2BNamespace","text":"Classes: Desc","title":"Class: Nokogiri::HTML4::ElementDescription / Defined Under Namespace"},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#Constant%2BSummary","text":"DefaultDescriptions = This is filled in down below. Since: v1.12.0 FONTSTYLE = Attributes defined and categorized Since: v1.12.0 PHRASE = Since: v1.12.0 SPECIAL = Since: v1.12.0 PCDATA = Since: v1.12.0 HEADING = Since: v1.12.0 LIST = Since: v1.12.0 FORMCTRL = Since: v1.12.0 BLOCK = Since: v1.12.0 INLINE = Since: v1.12.0 FLOW = Since: v1.12.0 MODIFIER = Since: v1.12.0 EMPTY = Since: v1.12.0 HTML_FLOW = Since: v1.12.0 HTML_INLINE = Since: v1.12.0 HTML_PCDATA = Since: v1.12.0 HTML_CDATA = Since: v1.12.0 COREATTRS = Since: v1.12.0 I18N = Since: v1.12.0 EVENTS = Since: v1.12.0 ATTRS = Since: v1.12.0 CELLHALIGN = Since: v1.12.0 CELLVALIGN = Since: v1.12.0 HTML_ATTRS = Since: v1.12.0 CORE_I18N_ATTRS = Since: v1.12.0 CORE_ATTRS = Since: v1.12.0 I18N_ATTRS = Since: v1.12.0 A_ATTRS = Since: v1.12.0 TARGET_ATTR = Since: v1.12.0 ROWS_COLS_ATTR = Since: v1.12.0 ALT_ATTR = Since: v1.12.0 SRC_ALT_ATTRS = Since: v1.12.0 HREF_ATTRS = Since: v1.12.0 CLEAR_ATTRS = Since: v1.12.0 INLINE_P = Since: v1.12.0 FLOW_PARAM = Since: v1.12.0 APPLET_ATTRS = Since: v1.12.0 AREA_ATTRS = Since: v1.12.0 BASEFONT_ATTRS = Since: v1.12.0 QUOTE_ATTRS = Since: v1.12.0 BODY_CONTENTS = Since: v1.12.0 BODY_ATTRS = Since: v1.12.0 BODY_DEPR = Since: v1.12.0 BUTTON_ATTRS = Since: v1.12.0 COL_ATTRS = Since: v1.12.0 COL_ELT = Since: v1.12.0 EDIT_ATTRS = Since: v1.12.0 COMPACT_ATTRS = Since: v1.12.0 DL_CONTENTS = Since: v1.12.0 COMPACT_ATTR = Since: v1.12.0 LABEL_ATTR = Since: v1.12.0 FIELDSET_CONTENTS = Since: v1.12.0 FONT_ATTRS = Since: v1.12.0 FORM_CONTENTS = Since: v1.12.0 FORM_ATTRS = Since: v1.12.0 FRAME_ATTRS = Since: v1.12.0 FRAMESET_ATTRS = Since: v1.12.0 FRAMESET_CONTENTS = Since: v1.12.0 HEAD_ATTRS = Since: v1.12.0 HEAD_CONTENTS = Since: v1.12.0 HR_DEPR = Since: v1.12.0 VERSION_ATTR = Since: v1.12.0 HTML_CONTENT = Since: v1.12.0 IFRAME_ATTRS = Since: v1.12.0 IMG_ATTRS = Since: v1.12.0 EMBED_ATTRS = Since: v1.12.0 INPUT_ATTRS = Since: v1.12.0 PROMPT_ATTRS = Since: v1.12.0 LABEL_ATTRS = Since: v1.12.0 LEGEND_ATTRS = Since: v1.12.0 ALIGN_ATTR = Since: v1.12.0 LINK_ATTRS = Since: v1.12.0 MAP_CONTENTS = Since: v1.12.0 NAME_ATTR = Since: v1.12.0 ACTION_ATTR = Since: v1.12.0 BLOCKLI_ELT = Since: v1.12.0 META_ATTRS = Since: v1.12.0 CONTENT_ATTR = Since: v1.12.0 TYPE_ATTR = Since: v1.12.0 NOFRAMES_CONTENT = Since: v1.12.0 OBJECT_CONTENTS = Since: v1.12.0 OBJECT_ATTRS = Since: v1.12.0 OBJECT_DEPR = Since: v1.12.0 OL_ATTRS = Since: v1.12.0 OPTION_ELT = Since: v1.12.0 OPTGROUP_ATTRS = Since: v1.12.0 OPTION_ATTRS = Since: v1.12.0 PARAM_ATTRS = Since: v1.12.0 WIDTH_ATTR = Since: v1.12.0 PRE_CONTENT = Since: v1.12.0 SCRIPT_ATTRS = Since: v1.12.0 LANGUAGE_ATTR = Since: v1.12.0 SELECT_CONTENT = Since: v1.12.0 SELECT_ATTRS = Since: v1.12.0 STYLE_ATTRS = Since: v1.12.0 TABLE_ATTRS = Since: v1.12.0 TABLE_DEPR = Since: v1.12.0 TABLE_CONTENTS = Since: v1.12.0 TR_ELT = Since: v1.12.0 TALIGN_ATTRS = Since: v1.12.0 TH_TD_DEPR = Since: v1.12.0 TH_TD_ATTR = Since: v1.12.0 TEXTAREA_ATTRS = Since: v1.12.0 TR_CONTENTS = Since: v1.12.0 BGCOLOR_ATTR = Since: v1.12.0 LI_ELT = Since: v1.12.0 UL_DEPR = Since: v1.12.0 DIR_ATTR = Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription / Constant Summary"},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#Class%2BMethod%2BSummary","text":". [] (tag_name) \u21d2 Object Get ElemementDescription for tag_name .","title":"Class: Nokogiri::HTML4::ElementDescription / Class Method Summary"},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#Instance%2BMethod%2BSummary","text":"# block? \u21d2 Boolean Is this element a block element?. # default_sub_element \u21d2 Object The default sub element for this element. # deprecated? \u21d2 Boolean Is this element deprecated?. # deprecated_attributes \u21d2 Object A list of deprecated attributes for this element. # description \u21d2 Object The description for this element. # empty? \u21d2 Boolean Is this an empty element?. # implied_end_tag? \u21d2 Boolean Can the end tag be implied for this tag?. # implied_start_tag? \u21d2 Boolean Can the start tag be implied for this tag?. # inline? \u21d2 Boolean Is this element an inline element?. # inspect \u21d2 Object Inspection information. # name \u21d2 Object Get the tag name for this ElemementDescription. # optional_attributes \u21d2 Object A list of optional attributes for this element. # required_attributes \u21d2 Object A list of required attributes for this element. # save_end_tag? \u21d2 Boolean Should the end tag be saved?. # sub_elements \u21d2 Object A list of allowed sub elements for this element. # to_s \u21d2 Object Convert this description to a string.","title":"Class: Nokogiri::HTML4::ElementDescription / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::ElementDescription / Class Method Details"},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#%5B%5D-class_method","text":"Get ElemementDescription for tag_name Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#[] (tag_name)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::ElementDescription / Instance Method Details"},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#block%3F-instance_method","text":"Is this element a block element? Returns: ( Boolean ) Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#block? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#default_sub_element-instance_method","text":"The default sub element for this element Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#default_sub_element \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#deprecated%3F-instance_method","text":"Is this element deprecated? Returns: ( Boolean ) Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#deprecated? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#deprecated_attributes-instance_method","text":"A list of deprecated attributes for this element Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#deprecated_attributes \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#description-instance_method","text":"The description for this element Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#description \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#empty%3F-instance_method","text":"Is this an empty element? Returns: ( Boolean ) Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#empty? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#implied_end_tag%3F-instance_method","text":"Can the end tag be implied for this tag? Returns: ( Boolean ) Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#implied_end_tag? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#implied_start_tag%3F-instance_method","text":"Can the start tag be implied for this tag? Returns: ( Boolean ) Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#implied_start_tag? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#inline%3F-instance_method","text":"Is this element an inline element? Returns: ( Boolean ) Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#inline? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#inspect-instance_method","text":"Inspection information Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#inspect \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#name-instance_method","text":"Get the tag name for this ElemementDescription Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#name \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#optional_attributes-instance_method","text":"A list of optional attributes for this element Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#optional_attributes \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#required_attributes-instance_method","text":"A list of required attributes for this element Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#required_attributes \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#save_end_tag%3F-instance_method","text":"Should the end tag be saved? Returns: ( Boolean ) Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#save_end_tag? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#sub_elements-instance_method","text":"A list of allowed sub elements for this element. Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription#sub_elements \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription.html#to_s-instance_method","text":"Convert this description to a string Since: v1.12.0 Generated on Mon Sep 27 15:13:37 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML4::ElementDescription#to_s \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/EntityDescription.html","text":"","title":"Class: Nokogiri::HTML4::EntityDescription"},{"location":"rdoc/Nokogiri/HTML4/EntityDescription.html#Class%253A%2BNokogiri%253A%253AHTML4%253A%253AEntityDescription","text":"Inherits: Struct Object Struct Nokogiri::HTML4::EntityDescription show all Defined in: lib/nokogiri/html4/entity_lookup.rb","title":"Class: Nokogiri::HTML4::EntityDescription"},{"location":"rdoc/Nokogiri/HTML4/EntityDescription.html#Overview","text":"Since: v1.12.0","title":"Class: Nokogiri::HTML4::EntityDescription / Overview"},{"location":"rdoc/Nokogiri/HTML4/EntityDescription.html#Instance%2BAttribute%2BSummary","text":"# description \u21d2 Object Returns the value of attribute description. # name \u21d2 Object Returns the value of attribute name. # value \u21d2 Object Returns the value of attribute value.","title":"Class: Nokogiri::HTML4::EntityDescription / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/HTML4/EntityDescription.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::HTML4::EntityDescription / Instance Attribute Details"},{"location":"rdoc/Nokogiri/HTML4/EntityDescription.html#description-instance_method","text":"Returns the value of attribute description Returns: ( Object ) \u2014 the current value of description","title":"Class: Nokogiri::HTML4::EntityDescription#description \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/EntityDescription.html#name-instance_method","text":"Returns the value of attribute name Returns: ( Object ) \u2014 the current value of name","title":"Class: Nokogiri::HTML4::EntityDescription#name \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/EntityDescription.html#value-instance_method","text":"Returns the value of attribute value Returns: ( Object ) \u2014 the current value of value Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML4::EntityDescription#value \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/EntityLookup.html","text":"","title":"Class: Nokogiri::HTML4::EntityLookup"},{"location":"rdoc/Nokogiri/HTML4/EntityLookup.html#Class%253A%2BNokogiri%253A%253AHTML4%253A%253AEntityLookup","text":"Inherits: Object Object Nokogiri::HTML4::EntityLookup show all Defined in: lib/nokogiri/html4/entity_lookup.rb , ext/nokogiri/html4_entity_lookup.c","title":"Class: Nokogiri::HTML4::EntityLookup"},{"location":"rdoc/Nokogiri/HTML4/EntityLookup.html#Overview","text":"Since: v1.12.0","title":"Class: Nokogiri::HTML4::EntityLookup / Overview"},{"location":"rdoc/Nokogiri/HTML4/EntityLookup.html#Instance%2BMethod%2BSummary","text":"# [] (name) \u21d2 Object Look up entity with name . # get (key) \u21d2 Object Get the HTML4::EntityDescription for key .","title":"Class: Nokogiri::HTML4::EntityLookup / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML4/EntityLookup.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::EntityLookup / Instance Method Details"},{"location":"rdoc/Nokogiri/HTML4/EntityLookup.html#%5B%5D-instance_method","text":"Look up entity with name Since: v1.12.0","title":"Class: Nokogiri::HTML4::EntityLookup#[] (name)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/EntityLookup.html#get-instance_method","text":"Get the HTML4::EntityDescription for key Since: v1.12.0 Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML4::EntityLookup#get (key)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/SAX.html","text":"","title":"Module: Nokogiri::HTML4::SAX"},{"location":"rdoc/Nokogiri/HTML4/SAX.html#Module%253A%2BNokogiri%253A%253AHTML4%253A%253ASAX","text":"Defined in: lib/nokogiri/html4/sax/parser.rb , lib/nokogiri/html4/sax/push_parser.rb, lib/nokogiri/html4/sax/parser_context.rb, ext/nokogiri/nokogiri.c","title":"Module: Nokogiri::HTML4::SAX"},{"location":"rdoc/Nokogiri/HTML4/SAX.html#Overview","text":"Nokogiri lets you write a SAX parser to process HTML but get HTML correction features. See Nokogiri::HTML4::SAX::Parser for a basic example of using a SAX parser with HTML. For more information on SAX parsers, see Nokogiri::XML::SAX Since: v1.12.0","title":"Module: Nokogiri::HTML4::SAX / Overview"},{"location":"rdoc/Nokogiri/HTML4/SAX.html#Defined%2BUnder%2BNamespace","text":"Classes: Parser , ParserContext , PushParser Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::HTML4::SAX / Defined Under Namespace"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingFound.html","text":"","title":"Exception: Nokogiri::HTML4::Document::EncodingFound"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingFound.html#Exception%253A%2BNokogiri%253A%253AHTML4%253A%253ADocument%253A%253AEncodingFound","text":"Inherits: StandardError Object StandardError Nokogiri::HTML4::Document::EncodingFound show all Defined in: lib/nokogiri/html4/document.rb","title":"Exception: Nokogiri::HTML4::Document::EncodingFound"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingFound.html#Overview","text":":nodoc: Since: v1.12.0","title":"Exception: Nokogiri::HTML4::Document::EncodingFound / Overview"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingFound.html#Instance%2BAttribute%2BSummary","text":"# found_encoding \u21d2 Object readonly","title":"Exception: Nokogiri::HTML4::Document::EncodingFound / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingFound.html#Instance%2BMethod%2BSummary","text":"# initialize (encoding) \u21d2 EncodingFound constructor A new instance of EncodingFound.","title":"Exception: Nokogiri::HTML4::Document::EncodingFound / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingFound.html#Constructor%2BDetails","text":"","title":"Exception: Nokogiri::HTML4::Document::EncodingFound / Constructor Details"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingFound.html#initialize-instance_method","text":"Returns a new instance of EncodingFound. Since: v1.12.0","title":"Exception: Nokogiri::HTML4::Document::EncodingFound#initialize (encoding)  \u21d2 EncodingFound "},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingFound.html#Instance%2BAttribute%2BDetails","text":"","title":"Exception: Nokogiri::HTML4::Document::EncodingFound / Instance Attribute Details"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingFound.html#found_encoding-instance_method","text":"Since: v1.12.0 Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Exception: Nokogiri::HTML4::Document::EncodingFound#found_encoding \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html","text":"","title":"Class: Nokogiri::HTML4::Document::EncodingReader"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html#Class%253A%2BNokogiri%253A%253AHTML4%253A%253ADocument%253A%253AEncodingReader","text":"Inherits: Object Object Nokogiri::HTML4::Document::EncodingReader show all Defined in: lib/nokogiri/html4/document.rb","title":"Class: Nokogiri::HTML4::Document::EncodingReader"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html#Overview","text":":nodoc: Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document::EncodingReader / Overview"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html#Defined%2BUnder%2BNamespace","text":"Classes: JumpSAXHandler , SAXHandler","title":"Class: Nokogiri::HTML4::Document::EncodingReader / Defined Under Namespace"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html#Instance%2BAttribute%2BSummary","text":"# encoding_found \u21d2 Object readonly This method is used by the C extension so that Nokogiri::HTML4::Document#read_io() does not leak memory when EncodingFound is raised.","title":"Class: Nokogiri::HTML4::Document::EncodingReader / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html#Class%2BMethod%2BSummary","text":". detect_encoding (chunk) \u21d2 Object","title":"Class: Nokogiri::HTML4::Document::EncodingReader / Class Method Summary"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html#Instance%2BMethod%2BSummary","text":"# initialize (io) \u21d2 EncodingReader constructor A new instance of EncodingReader. # read (len) \u21d2 Object","title":"Class: Nokogiri::HTML4::Document::EncodingReader / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::HTML4::Document::EncodingReader / Constructor Details"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html#initialize-instance_method","text":"Returns a new instance of EncodingReader. Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document::EncodingReader#initialize (io)  \u21d2 EncodingReader "},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::HTML4::Document::EncodingReader / Instance Attribute Details"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html#encoding_found-instance_method","text":"This method is used by the C extension so that Nokogiri::HTML4::Document#read_io() does not leak memory when EncodingFound is raised. Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document::EncodingReader#encoding_found \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::Document::EncodingReader / Class Method Details"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html#detect_encoding-class_method","text":"Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document::EncodingReader#detect_encoding (chunk)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::Document::EncodingReader / Instance Method Details"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader.html#read-instance_method","text":"Since: v1.12.0 Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML4::Document::EncodingReader#read (len)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/JumpSAXHandler.html","text":"","title":"Class: Nokogiri::HTML4::Document::EncodingReader::JumpSAXHandler"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/JumpSAXHandler.html#Class%253A%2BNokogiri%253A%253AHTML4%253A%253ADocument%253A%253AEncodingReader%253A%253AJumpSAXHandler","text":"Inherits: SAXHandler Object XML::SAX::Document SAXHandler Nokogiri::HTML4::Document::EncodingReader::JumpSAXHandler show all Defined in: lib/nokogiri/html4/document.rb","title":"Class: Nokogiri::HTML4::Document::EncodingReader::JumpSAXHandler"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/JumpSAXHandler.html#Overview","text":"Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document::EncodingReader::JumpSAXHandler / Overview"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/JumpSAXHandler.html#Instance%2BMethod%2BSummary","text":"# initialize (jumptag) \u21d2 JumpSAXHandler constructor A new instance of JumpSAXHandler. # start_element (name, attrs = []) \u21d2 Object","title":"Class: Nokogiri::HTML4::Document::EncodingReader::JumpSAXHandler / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/JumpSAXHandler.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::HTML4::Document::EncodingReader::JumpSAXHandler / Constructor Details"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/JumpSAXHandler.html#initialize-instance_method","text":"Returns a new instance of JumpSAXHandler. Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document::EncodingReader::JumpSAXHandler#initialize (jumptag)  \u21d2 JumpSAXHandler "},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/JumpSAXHandler.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::Document::EncodingReader::JumpSAXHandler / Instance Method Details"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/JumpSAXHandler.html#start_element-instance_method","text":"Since: v1.12.0 Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML4::Document::EncodingReader::JumpSAXHandler#start_element (name, attrs = [])  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/SAXHandler.html","text":"","title":"Class: Nokogiri::HTML4::Document::EncodingReader::SAXHandler"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/SAXHandler.html#Class%253A%2BNokogiri%253A%253AHTML4%253A%253ADocument%253A%253AEncodingReader%253A%253ASAXHandler","text":"Inherits: XML::SAX::Document Object XML::SAX::Document Nokogiri::HTML4::Document::EncodingReader::SAXHandler show all Defined in: lib/nokogiri/html4/document.rb","title":"Class: Nokogiri::HTML4::Document::EncodingReader::SAXHandler"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/SAXHandler.html#Overview","text":":nodoc: Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document::EncodingReader::SAXHandler / Overview"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/SAXHandler.html#Direct%2BKnown%2BSubclasses","text":"JumpSAXHandler","title":"Class: Nokogiri::HTML4::Document::EncodingReader::SAXHandler / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/SAXHandler.html#Instance%2BAttribute%2BSummary","text":"# encoding \u21d2 Object readonly","title":"Class: Nokogiri::HTML4::Document::EncodingReader::SAXHandler / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/SAXHandler.html#Instance%2BMethod%2BSummary","text":"# initialize \u21d2 SAXHandler constructor A new instance of SAXHandler. # start_element (name, attrs = []) \u21d2 Object","title":"Class: Nokogiri::HTML4::Document::EncodingReader::SAXHandler / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/SAXHandler.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::HTML4::Document::EncodingReader::SAXHandler / Constructor Details"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/SAXHandler.html#initialize-instance_method","text":"Returns a new instance of SAXHandler. Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document::EncodingReader::SAXHandler#initialize \u21d2 SAXHandler "},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/SAXHandler.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::HTML4::Document::EncodingReader::SAXHandler / Instance Attribute Details"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/SAXHandler.html#encoding-instance_method","text":"Since: v1.12.0","title":"Class: Nokogiri::HTML4::Document::EncodingReader::SAXHandler#encoding \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/SAXHandler.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::Document::EncodingReader::SAXHandler / Instance Method Details"},{"location":"rdoc/Nokogiri/HTML4/Document/EncodingReader/SAXHandler.html#start_element-instance_method","text":"Since: v1.12.0 Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML4::Document::EncodingReader::SAXHandler#start_element (name, attrs = [])  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html","text":"","title":"Class: Nokogiri::HTML4::ElementDescription::Desc"},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#Class%253A%2BNokogiri%253A%253AHTML4%253A%253AElementDescription%253A%253ADesc","text":"Inherits: Struct Object Struct Nokogiri::HTML4::ElementDescription::Desc show all Defined in: lib/nokogiri/html4/element_description_defaults.rb","title":"Class: Nokogiri::HTML4::ElementDescription::Desc"},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#Overview","text":"Methods are defined protected by method_defined? because at this point the C-library or Java library is already loaded, and we don't want to clobber any methods that have been defined there. Since: v1.12.0","title":"Class: Nokogiri::HTML4::ElementDescription::Desc / Overview"},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#Instance%2BAttribute%2BSummary","text":"# attrs_depr \u21d2 Object Returns the value of attribute attrs_depr. # attrs_opt \u21d2 Object Returns the value of attribute attrs_opt. # attrs_req \u21d2 Object Returns the value of attribute attrs_req. # defaultsubelt \u21d2 Object Returns the value of attribute defaultsubelt. # depr \u21d2 Object Returns the value of attribute depr. # desc \u21d2 Object Returns the value of attribute desc. # dtd \u21d2 Object Returns the value of attribute dtd. # empty \u21d2 Object Returns the value of attribute empty. # endTag \u21d2 Object Returns the value of attribute endTag. # isinline \u21d2 Object Returns the value of attribute isinline. # name \u21d2 Object Returns the value of attribute name. # saveEndTag \u21d2 Object Returns the value of attribute saveEndTag. # startTag \u21d2 Object Returns the value of attribute startTag. # subelts \u21d2 Object Returns the value of attribute subelts.","title":"Class: Nokogiri::HTML4::ElementDescription::Desc / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::HTML4::ElementDescription::Desc / Instance Attribute Details"},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#attrs_depr-instance_method","text":"Returns the value of attribute attrs_depr Returns: ( Object ) \u2014 the current value of attrs_depr","title":"Class: Nokogiri::HTML4::ElementDescription::Desc#attrs_depr \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#attrs_opt-instance_method","text":"Returns the value of attribute attrs_opt Returns: ( Object ) \u2014 the current value of attrs_opt","title":"Class: Nokogiri::HTML4::ElementDescription::Desc#attrs_opt \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#attrs_req-instance_method","text":"Returns the value of attribute attrs_req Returns: ( Object ) \u2014 the current value of attrs_req","title":"Class: Nokogiri::HTML4::ElementDescription::Desc#attrs_req \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#defaultsubelt-instance_method","text":"Returns the value of attribute defaultsubelt Returns: ( Object ) \u2014 the current value of defaultsubelt","title":"Class: Nokogiri::HTML4::ElementDescription::Desc#defaultsubelt \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#depr-instance_method","text":"Returns the value of attribute depr Returns: ( Object ) \u2014 the current value of depr","title":"Class: Nokogiri::HTML4::ElementDescription::Desc#depr \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#desc-instance_method","text":"Returns the value of attribute desc Returns: ( Object ) \u2014 the current value of desc","title":"Class: Nokogiri::HTML4::ElementDescription::Desc#desc \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#dtd-instance_method","text":"Returns the value of attribute dtd Returns: ( Object ) \u2014 the current value of dtd","title":"Class: Nokogiri::HTML4::ElementDescription::Desc#dtd \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#empty-instance_method","text":"Returns the value of attribute empty Returns: ( Object ) \u2014 the current value of empty","title":"Class: Nokogiri::HTML4::ElementDescription::Desc#empty \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#endTag-instance_method","text":"Returns the value of attribute endTag Returns: ( Object ) \u2014 the current value of endTag","title":"Class: Nokogiri::HTML4::ElementDescription::Desc#endTag \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#isinline-instance_method","text":"Returns the value of attribute isinline Returns: ( Object ) \u2014 the current value of isinline","title":"Class: Nokogiri::HTML4::ElementDescription::Desc#isinline \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#name-instance_method","text":"Returns the value of attribute name Returns: ( Object ) \u2014 the current value of name","title":"Class: Nokogiri::HTML4::ElementDescription::Desc#name \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#saveEndTag-instance_method","text":"Returns the value of attribute saveEndTag Returns: ( Object ) \u2014 the current value of saveEndTag","title":"Class: Nokogiri::HTML4::ElementDescription::Desc#saveEndTag \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#startTag-instance_method","text":"Returns the value of attribute startTag Returns: ( Object ) \u2014 the current value of startTag","title":"Class: Nokogiri::HTML4::ElementDescription::Desc#startTag \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/ElementDescription/Desc.html#subelts-instance_method","text":"Returns the value of attribute subelts Returns: ( Object ) \u2014 the current value of subelts Generated on Mon Sep 27 15:13:37 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML4::ElementDescription::Desc#subelts \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/SAX/Parser.html","text":"","title":"Class: Nokogiri::HTML4::SAX::Parser"},{"location":"rdoc/Nokogiri/HTML4/SAX/Parser.html#Class%253A%2BNokogiri%253A%253AHTML4%253A%253ASAX%253A%253AParser","text":"Inherits: XML::SAX::Parser Object XML::SAX::Parser Nokogiri::HTML4::SAX::Parser show all Defined in: lib/nokogiri/html4/sax/parser.rb","title":"Class: Nokogiri::HTML4::SAX::Parser"},{"location":"rdoc/Nokogiri/HTML4/SAX/Parser.html#Overview","text":"This class lets you perform SAX style parsing on HTML with HTML error correction. Here is a basic usage example: For more information on SAX parsers, see Nokogiri::XML::SAX Since: v1.12.0","title":"Class: Nokogiri::HTML4::SAX::Parser / Overview"},{"location":"rdoc/Nokogiri/HTML4/SAX/Parser.html#Instance%2BMethod%2BSummary","text":"# parse_file (filename, encoding = \"UTF-8\") {|ctx| ... } \u21d2 Object Parse a file with filename . # parse_io (io, encoding = \"UTF-8\") {|ctx| ... } \u21d2 Object Parse given io . # parse_memory (data, encoding = \"UTF-8\") {|ctx| ... } \u21d2 Object Parse html stored in data using encoding .","title":"Class: Nokogiri::HTML4::SAX::Parser / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML4/SAX/Parser.html#Constructor%2BDetails","text":"This class inherits a constructor from Nokogiri::XML::SAX::Parser","title":"Class: Nokogiri::HTML4::SAX::Parser / Constructor Details"},{"location":"rdoc/Nokogiri/HTML4/SAX/Parser.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::SAX::Parser / Instance Method Details"},{"location":"rdoc/Nokogiri/HTML4/SAX/Parser.html#parse_file-instance_method","text":"Parse a file with filename Yields: ( ctx ) Raises: ( ArgumentError ) Since: v1.12.0","title":"Class: Nokogiri::HTML4::SAX::Parser#parse_file (filename, encoding = \"UTF-8\") {|ctx|###} \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/SAX/Parser.html#parse_io-instance_method","text":"Parse given io Yields: ( ctx ) Since: v1.12.0","title":"Class: Nokogiri::HTML4::SAX::Parser#parse_io (io, encoding = \"UTF-8\") {|ctx|###} \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/SAX/Parser.html#parse_memory-instance_method","text":"Parse html stored in data using encoding Yields: ( ctx ) Raises: ( ArgumentError ) Since: v1.12.0 Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML4::SAX::Parser#parse_memory (data, encoding = \"UTF-8\") {|ctx|###} \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/SAX/ParserContext.html","text":"","title":"Class: Nokogiri::HTML4::SAX::ParserContext"},{"location":"rdoc/Nokogiri/HTML4/SAX/ParserContext.html#Class%253A%2BNokogiri%253A%253AHTML4%253A%253ASAX%253A%253AParserContext","text":"Inherits: XML::SAX::ParserContext Object XML::SAX::ParserContext Nokogiri::HTML4::SAX::ParserContext show all Defined in: lib/nokogiri/html4/sax/parser_context.rb , ext/nokogiri/html4_sax_parser_context.c","title":"Class: Nokogiri::HTML4::SAX::ParserContext"},{"location":"rdoc/Nokogiri/HTML4/SAX/ParserContext.html#Overview","text":"Context for HTML SAX parsers. This class is usually not instantiated by the user. Instead, you should be looking at Nokogiri::HTML4::SAX::Parser Since: v1.12.0","title":"Class: Nokogiri::HTML4::SAX::ParserContext / Overview"},{"location":"rdoc/Nokogiri/HTML4/SAX/ParserContext.html#Class%2BMethod%2BSummary","text":". file (filename, encoding) \u21d2 Object . memory (data, encoding) \u21d2 Object . new (thing, encoding = \"UTF-8\") \u21d2 Object","title":"Class: Nokogiri::HTML4::SAX::ParserContext / Class Method Summary"},{"location":"rdoc/Nokogiri/HTML4/SAX/ParserContext.html#Instance%2BMethod%2BSummary","text":"# parse_with (sax_handler) \u21d2 Object","title":"Class: Nokogiri::HTML4::SAX::ParserContext / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML4/SAX/ParserContext.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::SAX::ParserContext / Class Method Details"},{"location":"rdoc/Nokogiri/HTML4/SAX/ParserContext.html#file-class_method","text":"","title":"Class: Nokogiri::HTML4::SAX::ParserContext#file (filename, encoding)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/SAX/ParserContext.html#memory-class_method","text":"","title":"Class: Nokogiri::HTML4::SAX::ParserContext#memory (data, encoding)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/SAX/ParserContext.html#new-class_method","text":"Since: v1.12.0","title":"Class: Nokogiri::HTML4::SAX::ParserContext#new (thing, encoding = \"UTF-8\")  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/SAX/ParserContext.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::SAX::ParserContext / Instance Method Details"},{"location":"rdoc/Nokogiri/HTML4/SAX/ParserContext.html#parse_with-instance_method","text":"Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML4::SAX::ParserContext#parse_with (sax_handler)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/SAX/PushParser.html","text":"","title":"Class: Nokogiri::HTML4::SAX::PushParser"},{"location":"rdoc/Nokogiri/HTML4/SAX/PushParser.html#Class%253A%2BNokogiri%253A%253AHTML4%253A%253ASAX%253A%253APushParser","text":"Inherits: XML::SAX::PushParser Object XML::SAX::PushParser Nokogiri::HTML4::SAX::PushParser show all Defined in: lib/nokogiri/html4/sax/push_parser.rb , ext/nokogiri/html4_sax_push_parser.c","title":"Class: Nokogiri::HTML4::SAX::PushParser"},{"location":"rdoc/Nokogiri/HTML4/SAX/PushParser.html#Overview","text":"Since: v1.12.0","title":"Class: Nokogiri::HTML4::SAX::PushParser / Overview"},{"location":"rdoc/Nokogiri/HTML4/SAX/PushParser.html#Instance%2BAttribute%2BSummary","text":"# document \u21d2 Object The Nokogiri::HTML4::SAX::Document on which the PushParser will be operating.","title":"Class: Nokogiri::HTML4::SAX::PushParser / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/HTML4/SAX/PushParser.html#Instance%2BMethod%2BSummary","text":"# finish \u21d2 Object Finish the parsing. # initialize (doc = HTML4::SAX::Document.new, file_name = nil, encoding = 'UTF-8') \u21d2 PushParser constructor A new instance of PushParser. # write (chunk, last_chunk = false) \u21d2 Object (also: #<<) Write a chunk of HTML to the PushParser.","title":"Class: Nokogiri::HTML4::SAX::PushParser / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML4/SAX/PushParser.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::HTML4::SAX::PushParser / Constructor Details"},{"location":"rdoc/Nokogiri/HTML4/SAX/PushParser.html#initialize-instance_method","text":"Returns a new instance of PushParser. Since: v1.12.0","title":"Class: Nokogiri::HTML4::SAX::PushParser#initialize (doc = HTML4::SAX::Document#new, file_name = nil, encoding = 'UTF-8')  \u21d2 PushParser "},{"location":"rdoc/Nokogiri/HTML4/SAX/PushParser.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::HTML4::SAX::PushParser / Instance Attribute Details"},{"location":"rdoc/Nokogiri/HTML4/SAX/PushParser.html#document-instance_method","text":"The Nokogiri::HTML4::SAX::Document on which the PushParser will be operating Since: v1.12.0","title":"Class: Nokogiri::HTML4::SAX::PushParser#document \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/SAX/PushParser.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML4::SAX::PushParser / Instance Method Details"},{"location":"rdoc/Nokogiri/HTML4/SAX/PushParser.html#finish-instance_method","text":"Finish the parsing. This method is only necessary for Nokogiri::HTML4::SAX::Document#end_document to be called. Since: v1.12.0","title":"Class: Nokogiri::HTML4::SAX::PushParser#finish \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML4/SAX/PushParser.html#write-instance_method","text":"Write a chunk of HTML to the PushParser. Any callback methods that can be called will be called immediately. Since: v1.12.0 Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML4::SAX::PushParser#write (chunk, last_chunk = false)  \u21d2 Object  Also known as: <<  "},{"location":"rdoc/Nokogiri/HTML5/Document.html","text":"","title":"Class: Nokogiri::HTML5::Document"},{"location":"rdoc/Nokogiri/HTML5/Document.html#Class%253A%2BNokogiri%253A%253AHTML5%253A%253ADocument","text":"Inherits: Nokogiri::HTML4::Document Object XML::Node XML::Document Nokogiri::HTML4::Document Nokogiri::HTML5::Document show all Defined in: lib/nokogiri/html5/document.rb , ext/nokogiri/gumbo.c","title":"Class: Nokogiri::HTML5::Document"},{"location":"rdoc/Nokogiri/HTML5/Document.html#Overview","text":"Note: HTML5 functionality is not available when running JRuby. Since: v1.12.0","title":"Class: Nokogiri::HTML5::Document / Overview"},{"location":"rdoc/Nokogiri/HTML5/Document.html#Class%2BMethod%2BSummary","text":". parse (string_or_io, url = nil, encoding = nil, **options) {|options| ... } \u21d2 Object . read_io (io, url = nil, encoding = nil, **options) \u21d2 Object . read_memory (string, url = nil, encoding = nil, **options) \u21d2 Object","title":"Class: Nokogiri::HTML5::Document / Class Method Summary"},{"location":"rdoc/Nokogiri/HTML5/Document.html#Instance%2BMethod%2BSummary","text":"# fragment (tags = nil) \u21d2 Object # to_xml (options = {}, &block) \u21d2 Object","title":"Class: Nokogiri::HTML5::Document / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML5/Document.html#Constructor%2BDetails","text":"This class inherits a constructor from Nokogiri::XML::Document","title":"Class: Nokogiri::HTML5::Document / Constructor Details"},{"location":"rdoc/Nokogiri/HTML5/Document.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML5::Document / Class Method Details"},{"location":"rdoc/Nokogiri/HTML5/Document.html#parse-class_method","text":"Yields: ( options ) Since: v1.12.0","title":"Class: Nokogiri::HTML5::Document#parse (string_or_io, url = nil, encoding = nil, **options) {|options|###} \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5/Document.html#read_io-class_method","text":"Raises: ( ArgumentError ) Since: v1.12.0","title":"Class: Nokogiri::HTML5::Document#read_io (io, url = nil, encoding = nil, **options)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5/Document.html#read_memory-class_method","text":"Raises: ( ArgumentError ) Since: v1.12.0","title":"Class: Nokogiri::HTML5::Document#read_memory (string, url = nil, encoding = nil, **options)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5/Document.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML5::Document / Instance Method Details"},{"location":"rdoc/Nokogiri/HTML5/Document.html#fragment-instance_method","text":"Since: v1.12.0","title":"Class: Nokogiri::HTML5::Document#fragment (tags = nil)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5/Document.html#to_xml-instance_method","text":"Since: v1.12.0 Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML5::Document#to_xml (options = {}, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html","text":"","title":"Class: Nokogiri::HTML5::DocumentFragment"},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#Class%253A%2BNokogiri%253A%253AHTML5%253A%253ADocumentFragment","text":"Inherits: Nokogiri::HTML4::DocumentFragment Object XML::Node XML::DocumentFragment Nokogiri::HTML4::DocumentFragment Nokogiri::HTML5::DocumentFragment show all Defined in: lib/nokogiri/html5/document_fragment.rb","title":"Class: Nokogiri::HTML5::DocumentFragment"},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#Overview","text":"Note: HTML5 functionality is not available when running JRuby. Since: v1.12.0","title":"Class: Nokogiri::HTML5::DocumentFragment / Overview"},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#Instance%2BAttribute%2BSummary","text":"# document \u21d2 Object # errors \u21d2 Object","title":"Class: Nokogiri::HTML5::DocumentFragment / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#Class%2BMethod%2BSummary","text":". parse (tags, encoding = nil, options = {}) \u21d2 Object Parse a document fragment from tags , returning a Nodeset.","title":"Class: Nokogiri::HTML5::DocumentFragment / Class Method Summary"},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#Instance%2BMethod%2BSummary","text":"# extract_params (params) \u21d2 Object :nodoc:. # initialize (doc, tags = nil, ctx = nil, options = {}) \u21d2 DocumentFragment constructor Create a document fragment. # serialize (options = {}, &block) \u21d2 Object","title":"Class: Nokogiri::HTML5::DocumentFragment / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::HTML5::DocumentFragment / Constructor Details"},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#initialize-instance_method","text":"Create a document fragment. Since: v1.12.0","title":"Class: Nokogiri::HTML5::DocumentFragment#initialize (doc, tags = nil, ctx = nil, options = {})  \u21d2 DocumentFragment "},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::HTML5::DocumentFragment / Instance Attribute Details"},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#document-instance_method","text":"Since: v1.12.0","title":"Class: Nokogiri::HTML5::DocumentFragment#document \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#errors-instance_method","text":"Since: v1.12.0","title":"Class: Nokogiri::HTML5::DocumentFragment#errors \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML5::DocumentFragment / Class Method Details"},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#parse-class_method","text":"Parse a document fragment from tags , returning a Nodeset. Since: v1.12.0","title":"Class: Nokogiri::HTML5::DocumentFragment#parse (tags, encoding = nil, options = {})  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::HTML5::DocumentFragment / Instance Method Details"},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#extract_params-instance_method","text":":nodoc: Since: v1.12.0","title":"Class: Nokogiri::HTML5::DocumentFragment#extract_params (params)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5/DocumentFragment.html#serialize-instance_method","text":"Since: v1.12.0 Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::HTML5::DocumentFragment#serialize (options = {}, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5/Node.html","text":"","title":"Module: Nokogiri::HTML5::Node"},{"location":"rdoc/Nokogiri/HTML5/Node.html#Module%253A%2BNokogiri%253A%253AHTML5%253A%253ANode","text":"Included in: Nokogiri::HTML5 Defined in: lib/nokogiri/html5/node.rb","title":"Module: Nokogiri::HTML5::Node"},{"location":"rdoc/Nokogiri/HTML5/Node.html#Overview","text":"Note: HTML5 functionality is not available when running JRuby. Since: v1.12.0","title":"Module: Nokogiri::HTML5::Node / Overview"},{"location":"rdoc/Nokogiri/HTML5/Node.html#Instance%2BMethod%2BSummary","text":"# fragment (tags) \u21d2 Object # inner_html (options = {}) \u21d2 Object # write_to (io, *options) {|config| ... } \u21d2 Object","title":"Module: Nokogiri::HTML5::Node / Instance Method Summary"},{"location":"rdoc/Nokogiri/HTML5/Node.html#Instance%2BMethod%2BDetails","text":"","title":"Module: Nokogiri::HTML5::Node / Instance Method Details"},{"location":"rdoc/Nokogiri/HTML5/Node.html#fragment-instance_method","text":"Since: v1.12.0","title":"Module: Nokogiri::HTML5::Node#fragment (tags)  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5/Node.html#inner_html-instance_method","text":"Since: v1.12.0","title":"Module: Nokogiri::HTML5::Node#inner_html (options = {})  \u21d2 Object "},{"location":"rdoc/Nokogiri/HTML5/Node.html#write_to-instance_method","text":"Yields: ( config ) Since: v1.12.0 Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::HTML5::Node#write_to (io, *options) {|config|###} \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Attr.html","text":"","title":"Class: Nokogiri::XML::Attr"},{"location":"rdoc/Nokogiri/XML/Attr.html#Class%253A%2BNokogiri%253A%253AXML%253A%253AAttr","text":"Inherits: NokogiriXmlNode Object NokogiriXmlNode Nokogiri::XML::Attr show all Defined in: lib/nokogiri/xml/attr.rb , ext/nokogiri/xml_attr.c","title":"Class: Nokogiri::XML::Attr"},{"location":"rdoc/Nokogiri/XML/Attr.html#Class%2BMethod%2BSummary","text":". new (document, name) \u21d2 Object Create a new Attr element on the document with name .","title":"Class: Nokogiri::XML::Attr / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/Attr.html#Instance%2BMethod%2BSummary","text":"# value= (content) \u21d2 Object (also: #content=) Set the value for this Attr to content .","title":"Class: Nokogiri::XML::Attr / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/Attr.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Attr / Class Method Details"},{"location":"rdoc/Nokogiri/XML/Attr.html#new-class_method","text":"Create a new Attr element on the document with name","title":"Class: Nokogiri::XML::Attr#new (document, name)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Attr.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Attr / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/Attr.html#value%3D-instance_method","text":"Set the value for this Attr to content . Use `nil` to remove the value (e.g., a HTML boolean attribute). Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::Attr#value= (content)  \u21d2 Object  Also known as: content=  "},{"location":"rdoc/Nokogiri/XML/AttributeDecl.html","text":"","title":"Class: Nokogiri::XML::AttributeDecl"},{"location":"rdoc/Nokogiri/XML/AttributeDecl.html#Class%253A%2BNokogiri%253A%253AXML%253A%253AAttributeDecl","text":"Inherits: Node Object Node Nokogiri::XML::AttributeDecl show all Defined in: lib/nokogiri/xml/attribute_decl.rb , ext/nokogiri/xml_attribute_decl.c","title":"Class: Nokogiri::XML::AttributeDecl"},{"location":"rdoc/Nokogiri/XML/AttributeDecl.html#Overview","text":"Represents an attribute declaration in a DTD","title":"Class: Nokogiri::XML::AttributeDecl / Overview"},{"location":"rdoc/Nokogiri/XML/AttributeDecl.html#Instance%2BMethod%2BSummary","text":"# attribute_type \u21d2 Object The attribute_type for this AttributeDecl. # default \u21d2 Object The default value. # enumeration \u21d2 Object An enumeration of possible values. # inspect \u21d2 Object","title":"Class: Nokogiri::XML::AttributeDecl / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/AttributeDecl.html#Constructor%2BDetails","text":"This class inherits a constructor from Nokogiri::XML::Node","title":"Class: Nokogiri::XML::AttributeDecl / Constructor Details"},{"location":"rdoc/Nokogiri/XML/AttributeDecl.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::AttributeDecl / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/AttributeDecl.html#attribute_type-instance_method","text":"The attribute_type for this AttributeDecl","title":"Class: Nokogiri::XML::AttributeDecl#attribute_type \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/AttributeDecl.html#default-instance_method","text":"The default value","title":"Class: Nokogiri::XML::AttributeDecl#default \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/AttributeDecl.html#enumeration-instance_method","text":"An enumeration of possible values","title":"Class: Nokogiri::XML::AttributeDecl#enumeration \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/AttributeDecl.html#inspect-instance_method","text":"Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::AttributeDecl#inspect \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder.html","text":"","title":"Class: Nokogiri::XML::Builder"},{"location":"rdoc/Nokogiri/XML/Builder.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ABuilder","text":"Inherits: Object Object Nokogiri::XML::Builder show all Defined in: lib/nokogiri/xml/builder.rb","title":"Class: Nokogiri::XML::Builder"},{"location":"rdoc/Nokogiri/XML/Builder.html#Overview","text":"Nokogiri builder can be used for building XML and HTML documents.","title":"Class: Nokogiri::XML::Builder / Overview"},{"location":"rdoc/Nokogiri/XML/Builder.html#label-Synopsis-3A","text":"Will output:","title":"Class: Nokogiri::XML::Builder / Synopsis:"},{"location":"rdoc/Nokogiri/XML/Builder.html#label-Builder%2Bscope","text":"The builder allows two forms. When the builder is supplied with a block that has a parameter, the outside scope is maintained. This means you can access variables that are outside your builder. If you don't need outside scope, you can use the builder without the \u201cxml\u201d prefix like this:","title":"Class: Nokogiri::XML::BuilderBuilder scope"},{"location":"rdoc/Nokogiri/XML/Builder.html#label-Special%2BTags","text":"The builder works by taking advantage of method_missing. Unfortunately some methods are defined in ruby that are difficult or dangerous to remove. You may want to create tags with the name \u201ctype\u201d, \u201cclass\u201d, and \u201cid\u201d for example. In that case, you can use an underscore to disambiguate your tag name from the method call. Here is an example of using the underscore to disambiguate tag names from ruby methods: The underscore may be used with any tag name, and the last underscore will just be removed. This code will output the following XML:","title":"Class: Nokogiri::XML::Builder / Special Tags"},{"location":"rdoc/Nokogiri/XML/Builder.html#label-Tag%2BAttributes","text":"Tag attributes may be supplied as method arguments. Here is our previous example, but using attributes rather than tags:","title":"Class: Nokogiri::XML::Builder / Tag Attributes"},{"location":"rdoc/Nokogiri/XML/Builder.html#label-Tag%2BAttribute%2BShort%2BCuts","text":"A couple attribute short cuts are available when building tags. The short cuts are available by special method calls when building a tag. This example builds an \u201cobject\u201d tag with the class attribute \u201cclassy\u201d and the id of \u201cthing\u201d: Which will output: All other options are still supported with this syntax, including blocks and extra tag attributes.","title":"Class: Nokogiri::XML::BuilderTag Attribute Short Cuts"},{"location":"rdoc/Nokogiri/XML/Builder.html#label-Namespaces","text":"Namespaces are added similarly to attributes. Nokogiri::XML::Builder assumes that when an attribute starts with \u201cxmlns\u201d, it is meant to be a namespace: Will output XML like this:","title":"Class: Nokogiri::XML::Builder / Namespaces"},{"location":"rdoc/Nokogiri/XML/Builder.html#label-Referencing%2Bdeclared%2Bnamespaces","text":"Tags that reference non-default namespaces (i.e. a tag \u201cfoo:bar\u201d) can be built by using the Nokogiri::XML::Builder#[] method. For example: Will output this XML: Note the \u201cfoo:object\u201d tag.","title":"Class: Nokogiri::XML::BuilderReferencing declared namespaces"},{"location":"rdoc/Nokogiri/XML/Builder.html#label-Namespace%2Binheritance","text":"In the Builder context, children will inherit their parent's namespace. This is the same behavior as if the underlying Document set namespace_inheritance to true : Users may turn this behavior off by passing a keyword argument namespace_inheritance:false to the initializer: For more information on namespace inheritance, please see Document#namespace_inheritance","title":"Class: Nokogiri::XML::BuilderNamespace inheritance"},{"location":"rdoc/Nokogiri/XML/Builder.html#label-Document%2BTypes","text":"To create a document type (DTD), access use the Builder#doc method to get the current context document. Then call Node#create_internal_subset to create the DTD node. For example, this Ruby: Will output this xml:","title":"Class: Nokogiri::XML::Builder / Document Types"},{"location":"rdoc/Nokogiri/XML/Builder.html#Direct%2BKnown%2BSubclasses","text":"HTML4::Builder , HTML::Builder","title":"Class: Nokogiri::XML::Builder / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/XML/Builder.html#Defined%2BUnder%2BNamespace","text":"Classes: NodeBuilder","title":"Class: Nokogiri::XML::Builder / Defined Under Namespace"},{"location":"rdoc/Nokogiri/XML/Builder.html#Constant%2BSummary","text":"DEFAULT_DOCUMENT_OPTIONS =","title":"Class: Nokogiri::XML::Builder / Constant Summary"},{"location":"rdoc/Nokogiri/XML/Builder.html#Instance%2BAttribute%2BSummary","text":"# arity \u21d2 Object :nodoc:. # context \u21d2 Object A context object for use when the block has no arguments. # doc \u21d2 Object The current Document object being built. # parent \u21d2 Object The parent of the current node being built.","title":"Class: Nokogiri::XML::Builder / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/XML/Builder.html#Class%2BMethod%2BSummary","text":". with (root, &block) \u21d2 Object Create a builder with an existing root object.","title":"Class: Nokogiri::XML::Builder / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/Builder.html#Instance%2BMethod%2BSummary","text":"# << (string) \u21d2 Object Append the given raw XML string to the document. # [] (ns) \u21d2 Object Build a tag that is associated with namespace ns . # cdata (string) \u21d2 Object Create a CDATA Node with content of string . # comment (string) \u21d2 Object Create a Comment Node with content of string . # initialize (options = {}, root = nil, &block) \u21d2 Builder constructor Create a new Builder object. # method_missing (method, *args, &block) \u21d2 Object :nodoc:. # text (string) \u21d2 Object Create a Text Node with content of string . # to_xml (*args) \u21d2 Object Convert this Builder object to XML.","title":"Class: Nokogiri::XML::Builder / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/Builder.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::XML::Builder / Constructor Details"},{"location":"rdoc/Nokogiri/XML/Builder.html#initialize-instance_method","text":"Create a new Builder object. options are sent to the top level Document that is being built. Building a document with a particular encoding for example:","title":"Class: Nokogiri::XML::Builder#initialize (options = {}, root = nil, &block)  \u21d2 Builder "},{"location":"rdoc/Nokogiri/XML/Builder.html#Dynamic%2BMethod%2BHandling","text":"This class handles dynamic methods through the method_missing method","title":"Class: Nokogiri::XML::Builder / Dynamic Method Handling"},{"location":"rdoc/Nokogiri/XML/Builder.html#method_missing-instance_method","text":":nodoc:","title":"Class: Nokogiri::XML::Builder#method_missing (method, *args, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::XML::Builder / Instance Attribute Details"},{"location":"rdoc/Nokogiri/XML/Builder.html#arity-instance_method","text":":nodoc:","title":"Class: Nokogiri::XML::Builder#arity \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder.html#context-instance_method","text":"A context object for use when the block has no arguments","title":"Class: Nokogiri::XML::Builder#context \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder.html#doc-instance_method","text":"The current Document object being built","title":"Class: Nokogiri::XML::Builder#doc \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder.html#parent-instance_method","text":"The parent of the current node being built","title":"Class: Nokogiri::XML::Builder#parent \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Builder / Class Method Details"},{"location":"rdoc/Nokogiri/XML/Builder.html#with-class_method","text":"Create a builder with an existing root object. This is for use when you have an existing document that you would like to augment with builder methods. The builder context created will start with the given root node. For example:","title":"Class: Nokogiri::XML::Builder#with (root, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Builder / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/Builder.html#%3C%3C-instance_method","text":"Append the given raw XML string to the document","title":"Class: Nokogiri::XML::Builder#<< (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder.html#%5B%5D-instance_method","text":"Build a tag that is associated with namespace ns . Raises an ArgumentError if ns has not been defined higher in the tree.","title":"Class: Nokogiri::XML::Builder#[] (ns)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder.html#cdata-instance_method","text":"Create a CDATA Node with content of string","title":"Class: Nokogiri::XML::Builder#cdata (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder.html#comment-instance_method","text":"Create a Comment Node with content of string","title":"Class: Nokogiri::XML::Builder#comment (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder.html#text-instance_method","text":"Create a Text Node with content of string","title":"Class: Nokogiri::XML::Builder#text (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder.html#to_xml-instance_method","text":"Convert this Builder object to XML Generated on Mon Sep 27 15:13:34 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::Builder#to_xml (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/CDATA.html","text":"","title":"Class: Nokogiri::XML::CDATA"},{"location":"rdoc/Nokogiri/XML/CDATA.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ACDATA","text":"Inherits: Text Object NokogiriXmlNode CharacterData Text Nokogiri::XML::CDATA show all Defined in: lib/nokogiri/xml/cdata.rb , ext/nokogiri/xml_cdata.c","title":"Class: Nokogiri::XML::CDATA"},{"location":"rdoc/Nokogiri/XML/CDATA.html#Class%2BMethod%2BSummary","text":". new (document, content) \u21d2 Object Create a new CDATA element on the document with content .","title":"Class: Nokogiri::XML::CDATA / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/CDATA.html#Instance%2BMethod%2BSummary","text":"# name \u21d2 Object Get the name of this CDATA node.","title":"Class: Nokogiri::XML::CDATA / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/CDATA.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::CDATA / Class Method Details"},{"location":"rdoc/Nokogiri/XML/CDATA.html#new-class_method","text":"Create a new CDATA element on the document with content If content cannot be implicitly converted to a string, this method will raise a TypeError exception.","title":"Class: Nokogiri::XML::CDATA#new (document, content)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/CDATA.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::CDATA / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/CDATA.html#name-instance_method","text":"Get the name of this CDATA node Generated on Mon Sep 27 15:13:34 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::CDATA#name \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/CharacterData.html","text":"","title":"Class: Nokogiri::XML::CharacterData"},{"location":"rdoc/Nokogiri/XML/CharacterData.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ACharacterData","text":"Inherits: NokogiriXmlNode Object NokogiriXmlNode Nokogiri::XML::CharacterData show all Includes: PP::CharacterData Defined in: lib/nokogiri/xml/character_data.rb , ext/nokogiri/nokogiri.c","title":"Class: Nokogiri::XML::CharacterData"},{"location":"rdoc/Nokogiri/XML/CharacterData.html#Direct%2BKnown%2BSubclasses","text":"Comment , Text","title":"Class: Nokogiri::XML::CharacterData / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/XML/CharacterData.html#Instance%2BMethod%2BSummary","text":"# inspect \u21d2 Object included from PP::CharacterData :nodoc:. # pretty_print (pp) \u21d2 Object included from PP::CharacterData :nodoc:.","title":"Class: Nokogiri::XML::CharacterData / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/CharacterData.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::CharacterData / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/CharacterData.html#inspect-instance_method","text":":nodoc:","title":"Class: Nokogiri::XML::CharacterData#inspect \u21d2 Object  Originally defined in module PP::CharacterData  "},{"location":"rdoc/Nokogiri/XML/CharacterData.html#pretty_print-instance_method","text":":nodoc: Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::CharacterData#pretty_print (pp)  \u21d2 Object  Originally defined in module PP::CharacterData  "},{"location":"rdoc/Nokogiri/XML/Comment.html","text":"","title":"Class: Nokogiri::XML::Comment"},{"location":"rdoc/Nokogiri/XML/Comment.html#Class%253A%2BNokogiri%253A%253AXML%253A%253AComment","text":"Inherits: CharacterData Object NokogiriXmlNode CharacterData Nokogiri::XML::Comment show all Defined in: ext/nokogiri/xml_comment.c","title":"Class: Nokogiri::XML::Comment"},{"location":"rdoc/Nokogiri/XML/Comment.html#Class%2BMethod%2BSummary","text":". new (document_or_node, content) \u21d2 Object Create a new Comment element on the document with content .","title":"Class: Nokogiri::XML::Comment / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/Comment.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Comment / Class Method Details"},{"location":"rdoc/Nokogiri/XML/Comment.html#new-class_method","text":"Create a new Comment element on the document with content . Alternatively, if a node is passed, the node 's document is used. Generated on Mon Sep 27 15:13:37 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::Comment#new (document_or_node, content)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DTD.html","text":"","title":"Class: Nokogiri::XML::DTD"},{"location":"rdoc/Nokogiri/XML/DTD.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ADTD","text":"Inherits: Node Object Node Nokogiri::XML::DTD show all Defined in: lib/nokogiri/xml/dtd.rb , ext/nokogiri/xml_dtd.c","title":"Class: Nokogiri::XML::DTD"},{"location":"rdoc/Nokogiri/XML/DTD.html#Instance%2BMethod%2BSummary","text":"# attributes \u21d2 Object Get a hash of the attributes for this DTD. # each \u21d2 Object # elements \u21d2 Object Get a hash of the elements for this DTD. # entities \u21d2 Object Get a hash of the elements for this DTD. # external_id \u21d2 Object Get the external identifier for PUBLIC. # html5_dtd? \u21d2 Boolean # html_dtd? \u21d2 Boolean # keys \u21d2 Object # notations \u21d2 Object Get a hash of the notations for this DTD. # system_id \u21d2 Object Get the URI for a SYSTEM or PUBLIC Entity. # validate (document) \u21d2 Object Validate document returning a list of errors.","title":"Class: Nokogiri::XML::DTD / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/DTD.html#Constructor%2BDetails","text":"This class inherits a constructor from Nokogiri::XML::Node","title":"Class: Nokogiri::XML::DTD / Constructor Details"},{"location":"rdoc/Nokogiri/XML/DTD.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::DTD / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/DTD.html#attributes-instance_method","text":"Get a hash of the attributes for this DTD.","title":"Class: Nokogiri::XML::DTD#attributes \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DTD.html#each-instance_method","text":"","title":"Class: Nokogiri::XML::DTD#each \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DTD.html#elements-instance_method","text":"Get a hash of the elements for this DTD.","title":"Class: Nokogiri::XML::DTD#elements \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DTD.html#entities-instance_method","text":"Get a hash of the elements for this DTD.","title":"Class: Nokogiri::XML::DTD#entities \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DTD.html#external_id-instance_method","text":"Get the external identifier for PUBLIC","title":"Class: Nokogiri::XML::DTD#external_id \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DTD.html#html5_dtd%3F-instance_method","text":"Returns: ( Boolean )","title":"Class: Nokogiri::XML::DTD#html5_dtd? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/DTD.html#html_dtd%3F-instance_method","text":"Returns: ( Boolean )","title":"Class: Nokogiri::XML::DTD#html_dtd? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/DTD.html#keys-instance_method","text":"","title":"Class: Nokogiri::XML::DTD#keys \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DTD.html#notations-instance_method","text":"Get a hash of the notations for this DTD.","title":"Class: Nokogiri::XML::DTD#notations \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DTD.html#system_id-instance_method","text":"Get the URI for a SYSTEM or PUBLIC Entity","title":"Class: Nokogiri::XML::DTD#system_id \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DTD.html#validate-instance_method","text":"Validate document returning a list of errors Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::DTD#validate (document)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html","text":"","title":"Class: Nokogiri::XML::Document"},{"location":"rdoc/Nokogiri/XML/Document.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ADocument","text":"Inherits: Node Object Node Nokogiri::XML::Document show all Defined in: lib/nokogiri/xml/document.rb , ext/nokogiri/xml_document.c","title":"Class: Nokogiri::XML::Document"},{"location":"rdoc/Nokogiri/XML/Document.html#Overview","text":"Nokogiri::XML::Document is the main entry point for dealing with XML documents. The Document is created by parsing an XML document. See Nokogiri::XML::Document.parse() for more information on parsing. For searching a Document, see Nokogiri::XML::Searchable#css and Nokogiri::XML::Searchable#xpath","title":"Class: Nokogiri::XML::Document / Overview"},{"location":"rdoc/Nokogiri/XML/Document.html#Direct%2BKnown%2BSubclasses","text":"HTML4::Document , HTML::Document","title":"Class: Nokogiri::XML::Document / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/XML/Document.html#Constant%2BSummary","text":"NCNAME_START_CHAR = See www.w3.org/TR/REC-xml-names/#ns-decl for more details. Note that we're not attempting to handle unicode characters partly because libxml2 doesn't handle unicode characters in NCNAMEs. NCNAME_CHAR = NCNAME_RE =","title":"Class: Nokogiri::XML::Document / Constant Summary"},{"location":"rdoc/Nokogiri/XML/Document.html#Instance%2BAttribute%2BSummary","text":"# errors \u21d2 Object A list of Nokogiri::XML::SyntaxError found when parsing a document. # namespace_inheritance \u21d2 Boolean When true, reparented elements without a namespace will inherit their new parent's namespace (if one exists).","title":"Class: Nokogiri::XML::Document / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/XML/Document.html#Class%2BMethod%2BSummary","text":". new (version = default) \u21d2 Object Create a new document with version (defaults to \u201c1.0\u201d). . parse (string_or_io, url = nil, encoding = nil, options = ParseOptions::DEFAULT_XML) {|options| ... } \u21d2 Object Parse an XML file. . read_io (io, url, encoding, options) \u21d2 Object Create a new document from an IO object. . read_memory (string, url, encoding, options) \u21d2 Object Create a new document from a String. . wrap (java_document) \u21d2 Nokogiri::XML::Document Create a Document using an existing Java DOM document object.","title":"Class: Nokogiri::XML::Document / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/Document.html#Instance%2BMethod%2BSummary","text":"# add_child (node_or_tags) \u21d2 Object (also: #<<) # canonicalize (*args) \u21d2 Object Canonicalize a document and return the results. # collect_namespaces \u21d2 Object Recursively get all namespaces from this node and its subtree and return them as a hash. # create_cdata (string, &block) \u21d2 Object Create a CDATA Node containing string . # create_comment (string, &block) \u21d2 Object Create a Comment Node containing string . # create_element (name, *contents_or_attrs) {|node| ... } \u21d2 Nokogiri::XML::Element Create a new Element with name sharing GC lifecycle with the document, optionally setting contents or attributes. # create_entity (name, type, external_id, system_id, content) \u21d2 Object Create a new entity named name . # create_text_node (string, &block) \u21d2 Object Create a Text Node with string . # decorate (node) \u21d2 Object Apply any decorators to node . # decorators (key) \u21d2 Object Get the list of decorators given key . # document \u21d2 Object A reference to self . # dup \u21d2 Object (also: #clone) Copy this Document. # encoding \u21d2 Object Get the encoding for this Document. # encoding= (encoding) \u21d2 Object Set the encoding string for this Document. # fragment (tags = nil) \u21d2 Object Create a Nokogiri::XML::DocumentFragment from tags Returns an empty fragment if tags is nil. # initialize (*args) \u21d2 Document constructor :nodoc:. # name \u21d2 Object The name of this document. # namespaces \u21d2 Object Get the hash of namespaces on the root Nokogiri::XML::Node. # remove_namespaces! \u21d2 Object Remove all namespaces from all nodes in the document. # root \u21d2 Object Get the root node for this document. # root= \u21d2 Object Set the root element on this document. # slop! \u21d2 Object Explore a document with shortcut methods. # to_java \u21d2 Java::OrgW3cDom::Document Returns the underlying Java DOM document object for the Document . # url \u21d2 Object Get the url name for this document. # validate \u21d2 Object Validate this Document against it's DTD. # version \u21d2 Object Get the XML version for this Document.","title":"Class: Nokogiri::XML::Document / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/Document.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::XML::Document / Constructor Details"},{"location":"rdoc/Nokogiri/XML/Document.html#initialize-instance_method","text":":nodoc:","title":"Class: Nokogiri::XML::Document#initialize (*args)  \u21d2 Document "},{"location":"rdoc/Nokogiri/XML/Document.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::XML::Document / Instance Attribute Details"},{"location":"rdoc/Nokogiri/XML/Document.html#errors-instance_method","text":"A list of Nokogiri::XML::SyntaxError found when parsing a document","title":"Class: Nokogiri::XML::Document#errors \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#namespace_inheritance-instance_method","text":"When true, reparented elements without a namespace will inherit their new parent's namespace (if one exists). Defaults to false . Examples: Default behavior of namespace inheritance Setting namespace inheritance to true Returns: ( Boolean ) Since: v1.12.4","title":"Class: Nokogiri::XML::Document#namespace_inheritance \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Document.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Document / Class Method Details"},{"location":"rdoc/Nokogiri/XML/Document.html#new-class_method","text":"Create a new document with version (defaults to \u201c1.0\u201d)","title":"Class: Nokogiri::XML::Document#new (version = default)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#parse-class_method","text":"Parse an XML file. string_or_io may be a String, or any object that responds to read and close such as an IO, or StringIO. url (optional) is the URI where this document is located. encoding (optional) is the encoding that should be used when processing the document. options (optional) is a configuration object that sets options during parsing, such as Nokogiri::XML::ParseOptions::RECOVER. See the Nokogiri::XML::ParseOptions for more information. block (optional) is passed a configuration object on which parse options may be set. By default, Nokogiri treats documents as untrusted, and so does not attempt to load DTDs or access the network. See Nokogiri::XML::ParseOptions for a complete list of options; and that module's DEFAULT_XML constant for what's set (and not set) by default. Nokogiri.XML() is a convenience method which will call this method. Yields: ( options )","title":"Class: Nokogiri::XML::Document#parse (string_or_io, url = nil, encoding = nil, options = ParseOptions::DEFAULT_XML) {|options|###} \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#read_io-class_method","text":"Create a new document from an IO object","title":"Class: Nokogiri::XML::Document#read_io (io, url, encoding, options)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#read_memory-class_method","text":"Create a new document from a String","title":"Class: Nokogiri::XML::Document#read_memory (string, url, encoding, options)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#wrap-class_method","text":"Note: This method is only available when running JRuby. Note: The class Java::OrgW3cDom::Document is also accessible as org.w3c.dom.Document . Create a Nokogiri::XML::Document using an existing Java DOM document object. The returned Nokogiri::XML::Document shares the same underlying data structure as the Java object, so changes in one are reflected in the other. Parameters: java_document ( Java::OrgW3cDom::Document ) Returns: ( Nokogiri::XML::Document ) See Also: #to_java","title":"Class: Nokogiri::XML::Document#wrap (java_document)  \u21d2 Nokogiri::XML::Document "},{"location":"rdoc/Nokogiri/XML/Document.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Document / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/Document.html#add_child-instance_method","text":"","title":"Class: Nokogiri::XML::Document#add_child (node_or_tags)  \u21d2 Object  Also known as: <<  "},{"location":"rdoc/Nokogiri/XML/Document.html#canonicalize-instance_method","text":"Canonicalize a document and return the results. Takes an optional block that takes two parameters: the obj and that node's parent . The obj will be either a Nokogiri::XML::Node, or a Nokogiri::XML::Namespace The block must return a non-nil, non-false value if the obj passed in should be included in the canonicalized document. Overloads: # canonicalize {|obj, parent| ... } \u21d2 Object Yields: ( obj , parent )","title":"Class: Nokogiri::XML::Document#canonicalize (mode = XML_C14N_1_0, inclusive_namespaces = nil, with_comments = false)  \u21d2 Object#canonicalize {|obj, parent|###} \u21d2 Object  "},{"location":"rdoc/Nokogiri/XML/Document.html#collect_namespaces-instance_method","text":"Recursively get all namespaces from this node and its subtree and return them as a hash. For example, given this document: This method will return: WARNING: this method will clobber duplicate names in the keys. For example, given this document: The hash returned will look like this: { 'xmlns:foo' => 'bar' } Non-prefixed default namespaces (as in \u201cxmlns=\u201d) are not included in the hash. Note that this method does an xpath lookup for nodes with namespaces, and as a result the order may be dependent on the implementation of the underlying XML library.","title":"Class: Nokogiri::XML::Document#collect_namespaces \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#create_cdata-instance_method","text":"Create a CDATA Node containing string","title":"Class: Nokogiri::XML::Document#create_cdata (string, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#create_comment-instance_method","text":"Create a Comment Node containing string","title":"Class: Nokogiri::XML::Document#create_comment (string, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#create_element-instance_method","text":"Create a new Element with name sharing GC lifecycle with the document, optionally setting contents or attributes. Arguments may be passed to initialize the element: a Hash argument will be used to set attributes a non-Hash object that responds to #to_s will be used to set the new node's contents A block may be passed to mutate the node. Examples: An empty element without attributes An element with contents An element with attributes An element with contents and attributes Passing a block to mutate the element Parameters: name ( String ) contents_or_attrs ( # to_s , Hash ) Yield Parameters: node ( Nokogiri::XML::Element ) Returns: ( Nokogiri::XML::Element )","title":"Class: Nokogiri::XML::Document#create_element (name, *contents_or_attrs) {|node|###} \u21d2 Nokogiri::XML::Element "},{"location":"rdoc/Nokogiri/XML/Document.html#create_entity-instance_method","text":"Create a new entity named name . type is an integer representing the type of entity to be created, and it defaults to Nokogiri::XML::EntityDecl::INTERNAL_GENERAL. See the constants on Nokogiri::XML::EntityDecl for more information. external_id , system_id , and content set the External ID, System ID, and content respectively. All of these parameters are optional.","title":"Class: Nokogiri::XML::Document#create_entity (name, type, external_id, system_id, content)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#create_text_node-instance_method","text":"Create a Text Node with string","title":"Class: Nokogiri::XML::Document#create_text_node (string, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#decorate-instance_method","text":"Apply any decorators to node","title":"Class: Nokogiri::XML::Document#decorate (node)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#decorators-instance_method","text":"Get the list of decorators given key","title":"Class: Nokogiri::XML::Document#decorators (key)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#document-instance_method","text":"A reference to self","title":"Class: Nokogiri::XML::Document#document \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#dup-instance_method","text":"Copy this Document. An optional depth may be passed in, but it defaults to a deep copy. 0 is a shallow copy, 1 is a deep copy.","title":"Class: Nokogiri::XML::Document#dup \u21d2 Object  Also known as: clone  "},{"location":"rdoc/Nokogiri/XML/Document.html#encoding-instance_method","text":"Get the encoding for this Document","title":"Class: Nokogiri::XML::Document#encoding \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#encoding%3D-instance_method","text":"Set the encoding string for this Document","title":"Class: Nokogiri::XML::Document#encoding= (encoding)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#fragment-instance_method","text":"Create a Nokogiri::XML::DocumentFragment from tags Returns an empty fragment if tags is nil.","title":"Class: Nokogiri::XML::Document#fragment (tags = nil)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#name-instance_method","text":"The name of this document. Always returns \u201cdocument\u201d","title":"Class: Nokogiri::XML::Document#name \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#namespaces-instance_method","text":"Get the hash of namespaces on the root Nokogiri::XML::Node","title":"Class: Nokogiri::XML::Document#namespaces \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#remove_namespaces%21-instance_method","text":"Remove all namespaces from all nodes in the document. This could be useful for developers who either don't understand namespaces or don't care about them. The following example shows a use case, and you can decide for yourself whether this is a good thing or not: For more information on why this probably is not a good thing in general, please direct your browser to tenderlovemaking.com/2009/04/23/namespaces-in-xml.html","title":"Class: Nokogiri::XML::Document#remove_namespaces! \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#root-instance_method","text":"Get the root node for this document.","title":"Class: Nokogiri::XML::Document#root \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#root%3D-instance_method","text":"Set the root element on this document","title":"Class: Nokogiri::XML::Document#root= \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#slop%21-instance_method","text":"Explore a document with shortcut methods. See Nokogiri::Slop for details. Note that any nodes that have been instantiated before #slop! is called will not be decorated with sloppy behavior. So, if you're in irb, the preferred idiom is: and not","title":"Class: Nokogiri::XML::Document#slop! \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#to_java-instance_method","text":"Note: This method is only available when running JRuby. Note: The class Java::OrgW3cDom::Document is also accessible as org.w3c.dom.Document . Returns the underlying Java DOM document object for the Nokogiri::XML::Document . The returned Java object shares the same underlying data structure as the Nokogiri::XML::Document , so changes in one are reflected in the other. Returns: ( Java::OrgW3cDom::Document ) See Also: wrap","title":"Class: Nokogiri::XML::Document#to_java \u21d2 Java::OrgW3cDom::Document "},{"location":"rdoc/Nokogiri/XML/Document.html#url-instance_method","text":"Get the url name for this document.","title":"Class: Nokogiri::XML::Document#url \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#validate-instance_method","text":"Validate this Document against it's DTD. Returns a list of errors on the document or nil when there is no DTD.","title":"Class: Nokogiri::XML::Document#validate \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Document.html#version-instance_method","text":"Get the XML version for this Document Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::Document#version \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html","text":"","title":"Class: Nokogiri::XML::DocumentFragment"},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ADocumentFragment","text":"Inherits: Node Object Node Nokogiri::XML::DocumentFragment show all Defined in: lib/nokogiri/xml/document_fragment.rb , ext/nokogiri/xml_document_fragment.c","title":"Class: Nokogiri::XML::DocumentFragment"},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#Direct%2BKnown%2BSubclasses","text":"HTML4::DocumentFragment , HTML::DocumentFragment","title":"Class: Nokogiri::XML::DocumentFragment / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#Class%2BMethod%2BSummary","text":". new (document) \u21d2 Object Create a new DocumentFragment element on the document . . parse (tags) \u21d2 Object Create a Nokogiri::XML::DocumentFragment from tags .","title":"Class: Nokogiri::XML::DocumentFragment / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#Instance%2BMethod%2BSummary","text":"# css (*args) \u21d2 Object call-seq: css *rules, [namespace-bindings, custom-pseudo-class]. # dup \u21d2 Object # errors \u21d2 Object A list of Nokogiri::XML::SyntaxError found when parsing a document. # errors= (things) \u21d2 Object :nodoc:. # fragment (data) \u21d2 Object # initialize (document, tags = nil, ctx = nil) \u21d2 DocumentFragment constructor Create a new DocumentFragment from tags . # name \u21d2 Object return the name for DocumentFragment. # search (*rules) \u21d2 Object call-seq: search *paths, [namespace-bindings, xpath-variable-bindings, custom-handler-class]. # to_html (*args) \u21d2 Object Convert this DocumentFragment to html See Nokogiri::XML::NodeSet#to_html. # to_s \u21d2 Object (also: #serialize) Convert this DocumentFragment to a string. # to_xhtml (*args) \u21d2 Object Convert this DocumentFragment to xhtml See Nokogiri::XML::NodeSet#to_xhtml. # to_xml (*args) \u21d2 Object Convert this DocumentFragment to xml See Nokogiri::XML::NodeSet#to_xml.","title":"Class: Nokogiri::XML::DocumentFragment / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::XML::DocumentFragment / Constructor Details"},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#initialize-instance_method","text":"Create a new DocumentFragment from tags .","title":"Class: Nokogiri::XML::DocumentFragment#initialize (document, tags = nil, ctx = nil)  \u21d2 DocumentFragment "},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::DocumentFragment / Class Method Details"},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#new-class_method","text":"Create a new DocumentFragment element on the document","title":"Class: Nokogiri::XML::DocumentFragment#new (document)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#parse-class_method","text":"Create a Nokogiri::XML::DocumentFragment from tags","title":"Class: Nokogiri::XML::DocumentFragment#parse (tags)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::DocumentFragment / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#css-instance_method","text":"call-seq: css *rules, [namespace-bindings, custom-pseudo-class] Search this fragment for CSS rules . rules must be one or more CSS selectors. For example: For more information see Nokogiri::XML::Searchable#css","title":"Class: Nokogiri::XML::DocumentFragment#css (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#dup-instance_method","text":"","title":"Class: Nokogiri::XML::DocumentFragment#dup \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#errors-instance_method","text":"A list of Nokogiri::XML::SyntaxError found when parsing a document","title":"Class: Nokogiri::XML::DocumentFragment#errors \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#errors%3D-instance_method","text":":nodoc:","title":"Class: Nokogiri::XML::DocumentFragment#errors= (things)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#fragment-instance_method","text":"","title":"Class: Nokogiri::XML::DocumentFragment#fragment (data)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#name-instance_method","text":"return the name for DocumentFragment","title":"Class: Nokogiri::XML::DocumentFragment#name \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#search-instance_method","text":"call-seq: search *paths, [namespace-bindings, xpath-variable-bindings, custom-handler-class] Search this fragment for paths . paths must be one or more XPath or CSS queries. For more information see Nokogiri::XML::Searchable#search","title":"Class: Nokogiri::XML::DocumentFragment#search (*rules)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#to_html-instance_method","text":"Convert this DocumentFragment to html See Nokogiri::XML::NodeSet#to_html","title":"Class: Nokogiri::XML::DocumentFragment#to_html (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#to_s-instance_method","text":"Convert this DocumentFragment to a string","title":"Class: Nokogiri::XML::DocumentFragment#to_s \u21d2 Object  Also known as: serialize  "},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#to_xhtml-instance_method","text":"Convert this DocumentFragment to xhtml See Nokogiri::XML::NodeSet#to_xhtml","title":"Class: Nokogiri::XML::DocumentFragment#to_xhtml (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/DocumentFragment.html#to_xml-instance_method","text":"Convert this DocumentFragment to xml See Nokogiri::XML::NodeSet#to_xml Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::DocumentFragment#to_xml (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Element.html","text":"","title":"Class: Nokogiri::XML::Element"},{"location":"rdoc/Nokogiri/XML/Element.html#Class%253A%2BNokogiri%253A%253AXML%253A%253AElement","text":"Inherits: NokogiriXmlNode Object NokogiriXmlNode Nokogiri::XML::Element show all Defined in: ext/nokogiri/nokogiri.c Generated on Mon Sep 27 15:13:37 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::Element"},{"location":"rdoc/Nokogiri/XML/ElementContent.html","text":"","title":"Class: Nokogiri::XML::ElementContent"},{"location":"rdoc/Nokogiri/XML/ElementContent.html#Class%253A%2BNokogiri%253A%253AXML%253A%253AElementContent","text":"Inherits: Object Object Nokogiri::XML::ElementContent show all Defined in: lib/nokogiri/xml/element_content.rb , ext/nokogiri/xml_element_content.c","title":"Class: Nokogiri::XML::ElementContent"},{"location":"rdoc/Nokogiri/XML/ElementContent.html#Overview","text":"Represents the allowed content in an Element Declaration inside a DTD: ElementContent represents the tree inside the <!ELEMENT> tag shown above that lists the possible content for the div1 tag.","title":"Class: Nokogiri::XML::ElementContent / Overview"},{"location":"rdoc/Nokogiri/XML/ElementContent.html#Constant%2BSummary","text":"PCDATA = Possible definitions of type ELEMENT = SEQ = OR = ONCE = Possible content occurrences OPT = MULT = PLUS =","title":"Class: Nokogiri::XML::ElementContent / Constant Summary"},{"location":"rdoc/Nokogiri/XML/ElementContent.html#Instance%2BAttribute%2BSummary","text":"# document \u21d2 Object readonly Returns the value of attribute document.","title":"Class: Nokogiri::XML::ElementContent / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/XML/ElementContent.html#Instance%2BMethod%2BSummary","text":"# children \u21d2 Object Get the children of this ElementContent node. # name \u21d2 Object Get the require element name . # occur \u21d2 Object Get the element content occur flag. # prefix \u21d2 Object Get the element content namespace prefix . # type \u21d2 Object Get the element content type .","title":"Class: Nokogiri::XML::ElementContent / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/ElementContent.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::XML::ElementContent / Instance Attribute Details"},{"location":"rdoc/Nokogiri/XML/ElementContent.html#document-instance_method","text":"Returns the value of attribute document.","title":"Class: Nokogiri::XML::ElementContent#document \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/XML/ElementContent.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::ElementContent / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/ElementContent.html#children-instance_method","text":"Get the children of this ElementContent node","title":"Class: Nokogiri::XML::ElementContent#children \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/ElementContent.html#name-instance_method","text":"Get the require element name","title":"Class: Nokogiri::XML::ElementContent#name \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/ElementContent.html#occur-instance_method","text":"Get the element content occur flag. Possible values are ONCE, OPT, MULT or PLUS.","title":"Class: Nokogiri::XML::ElementContent#occur \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/ElementContent.html#prefix-instance_method","text":"Get the element content namespace prefix .","title":"Class: Nokogiri::XML::ElementContent#prefix \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/ElementContent.html#type-instance_method","text":"Get the element content type . Possible values are PCDATA, ELEMENT, SEQ, or OR. Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::ElementContent#type \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/ElementDecl.html","text":"","title":"Class: Nokogiri::XML::ElementDecl"},{"location":"rdoc/Nokogiri/XML/ElementDecl.html#Class%253A%2BNokogiri%253A%253AXML%253A%253AElementDecl","text":"Inherits: Node Object Node Nokogiri::XML::ElementDecl show all Defined in: lib/nokogiri/xml/element_decl.rb , ext/nokogiri/xml_element_decl.c","title":"Class: Nokogiri::XML::ElementDecl"},{"location":"rdoc/Nokogiri/XML/ElementDecl.html#Instance%2BMethod%2BSummary","text":"# content \u21d2 Object The allowed content for this ElementDecl. # element_type \u21d2 Object The element_type. # inspect \u21d2 Object # prefix \u21d2 Object The namespace prefix for this ElementDecl.","title":"Class: Nokogiri::XML::ElementDecl / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/ElementDecl.html#Constructor%2BDetails","text":"This class inherits a constructor from Nokogiri::XML::Node","title":"Class: Nokogiri::XML::ElementDecl / Constructor Details"},{"location":"rdoc/Nokogiri/XML/ElementDecl.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::ElementDecl / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/ElementDecl.html#content-instance_method","text":"The allowed content for this ElementDecl","title":"Class: Nokogiri::XML::ElementDecl#content \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/ElementDecl.html#element_type-instance_method","text":"The element_type","title":"Class: Nokogiri::XML::ElementDecl#element_type \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/ElementDecl.html#inspect-instance_method","text":"","title":"Class: Nokogiri::XML::ElementDecl#inspect \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/ElementDecl.html#prefix-instance_method","text":"The namespace prefix for this ElementDecl Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::ElementDecl#prefix \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/EntityDecl.html","text":"","title":"Class: Nokogiri::XML::EntityDecl"},{"location":"rdoc/Nokogiri/XML/EntityDecl.html#Class%253A%2BNokogiri%253A%253AXML%253A%253AEntityDecl","text":"Inherits: Node Object Node Nokogiri::XML::EntityDecl show all Defined in: lib/nokogiri/xml/entity_decl.rb , ext/nokogiri/xml_entity_decl.c","title":"Class: Nokogiri::XML::EntityDecl"},{"location":"rdoc/Nokogiri/XML/EntityDecl.html#Class%2BMethod%2BSummary","text":". new (name, doc, *args) \u21d2 Object","title":"Class: Nokogiri::XML::EntityDecl / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/EntityDecl.html#Instance%2BMethod%2BSummary","text":"# content \u21d2 Object Get the content. # entity_type \u21d2 Object Get the entity type. # external_id \u21d2 Object Get the external identifier for PUBLIC. # inspect \u21d2 Object # original_content \u21d2 Object Get the original_content before ref substitution. # system_id \u21d2 Object Get the URI for a SYSTEM or PUBLIC Entity.","title":"Class: Nokogiri::XML::EntityDecl / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/EntityDecl.html#Constructor%2BDetails","text":"This class inherits a constructor from Nokogiri::XML::Node","title":"Class: Nokogiri::XML::EntityDecl / Constructor Details"},{"location":"rdoc/Nokogiri/XML/EntityDecl.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::EntityDecl / Class Method Details"},{"location":"rdoc/Nokogiri/XML/EntityDecl.html#new-class_method","text":"","title":"Class: Nokogiri::XML::EntityDecl#new (name, doc, *args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/EntityDecl.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::EntityDecl / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/EntityDecl.html#content-instance_method","text":"Get the content","title":"Class: Nokogiri::XML::EntityDecl#content \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/EntityDecl.html#entity_type-instance_method","text":"Get the entity type","title":"Class: Nokogiri::XML::EntityDecl#entity_type \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/EntityDecl.html#external_id-instance_method","text":"Get the external identifier for PUBLIC","title":"Class: Nokogiri::XML::EntityDecl#external_id \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/EntityDecl.html#inspect-instance_method","text":"","title":"Class: Nokogiri::XML::EntityDecl#inspect \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/EntityDecl.html#original_content-instance_method","text":"Get the original_content before ref substitution","title":"Class: Nokogiri::XML::EntityDecl#original_content \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/EntityDecl.html#system_id-instance_method","text":"Get the URI for a SYSTEM or PUBLIC Entity Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::EntityDecl#system_id \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/EntityReference.html","text":"","title":"Class: Nokogiri::XML::EntityReference"},{"location":"rdoc/Nokogiri/XML/EntityReference.html#Class%253A%2BNokogiri%253A%253AXML%253A%253AEntityReference","text":"Inherits: Node Object Node Nokogiri::XML::EntityReference show all Defined in: lib/nokogiri/xml/entity_reference.rb , ext/nokogiri/xml_entity_reference.c","title":"Class: Nokogiri::XML::EntityReference"},{"location":"rdoc/Nokogiri/XML/EntityReference.html#Class%2BMethod%2BSummary","text":". new (document, content) \u21d2 Object Create a new EntityReference element on the document with name .","title":"Class: Nokogiri::XML::EntityReference / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/EntityReference.html#Instance%2BMethod%2BSummary","text":"# children \u21d2 Object # inspect_attributes \u21d2 Object","title":"Class: Nokogiri::XML::EntityReference / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/EntityReference.html#Constructor%2BDetails","text":"This class inherits a constructor from Nokogiri::XML::Node","title":"Class: Nokogiri::XML::EntityReference / Constructor Details"},{"location":"rdoc/Nokogiri/XML/EntityReference.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::EntityReference / Class Method Details"},{"location":"rdoc/Nokogiri/XML/EntityReference.html#new-class_method","text":"Create a new EntityReference element on the document with name","title":"Class: Nokogiri::XML::EntityReference#new (document, content)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/EntityReference.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::EntityReference / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/EntityReference.html#children-instance_method","text":"","title":"Class: Nokogiri::XML::EntityReference#children \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/EntityReference.html#inspect_attributes-instance_method","text":"Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::EntityReference#inspect_attributes \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Namespace.html","text":"","title":"Class: Nokogiri::XML::Namespace"},{"location":"rdoc/Nokogiri/XML/Namespace.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ANamespace","text":"Inherits: Object Object Nokogiri::XML::Namespace show all Includes: PP::Node Defined in: lib/nokogiri/xml/namespace.rb , ext/nokogiri/xml_namespace.c","title":"Class: Nokogiri::XML::Namespace"},{"location":"rdoc/Nokogiri/XML/Namespace.html#Instance%2BAttribute%2BSummary","text":"# document \u21d2 Object readonly Returns the value of attribute document.","title":"Class: Nokogiri::XML::Namespace / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/XML/Namespace.html#Instance%2BMethod%2BSummary","text":"# href \u21d2 Object Get the href for this namespace. # inspect \u21d2 Object included from PP::Node :nodoc:. # prefix \u21d2 Object Get the prefix for this namespace. # pretty_print (pp) \u21d2 Object included from PP::Node :nodoc:.","title":"Class: Nokogiri::XML::Namespace / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/Namespace.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::XML::Namespace / Instance Attribute Details"},{"location":"rdoc/Nokogiri/XML/Namespace.html#document-instance_method","text":"Returns the value of attribute document.","title":"Class: Nokogiri::XML::Namespace#document \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/XML/Namespace.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Namespace / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/Namespace.html#href-instance_method","text":"Get the href for this namespace","title":"Class: Nokogiri::XML::Namespace#href \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Namespace.html#inspect-instance_method","text":":nodoc:","title":"Class: Nokogiri::XML::Namespace#inspect \u21d2 Object  Originally defined in module PP::Node  "},{"location":"rdoc/Nokogiri/XML/Namespace.html#prefix-instance_method","text":"Get the prefix for this namespace. Returns nil if there is no prefix.","title":"Class: Nokogiri::XML::Namespace#prefix \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Namespace.html#pretty_print-instance_method","text":":nodoc: Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::Namespace#pretty_print (pp)  \u21d2 Object  Originally defined in module PP::Node  "},{"location":"rdoc/Nokogiri/XML/Node.html","text":"","title":"Class: Nokogiri::XML::Node"},{"location":"rdoc/Nokogiri/XML/Node.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ANode","text":"Inherits: Object Object Nokogiri::XML::Node show all Includes: Enumerable, PP::Node , Searchable Defined in: lib/nokogiri/xml/node.rb , lib/nokogiri/xml/node/save_options.rb, ext/nokogiri/xml_node.c","title":"Class: Nokogiri::XML::Node"},{"location":"rdoc/Nokogiri/XML/Node.html#Overview","text":"Node is your window to the fun filled world of dealing with XML and HTML tags. A Node may be treated similarly to a hash with regard to attributes. For example: See the method group entitled \u201cWorking With Node Attributes\u201d for the full set of methods. Node also has methods that let you move around your tree. For navigating your tree, see: #parent #children #next #previous When printing or otherwise emitting a document or a node (and its subtree), there are a few methods you might want to use: #content , #text , #inner_text , #to_str : These methods will all emit plaintext , meaning that entities will be replaced (e.g., \u201c&lt;\u201d will be replaced with \u201c<\u201d), meaning that any sanitizing will likely be un-done in the output. #to_s , #to_xml , #to_html , #inner_html : These methods will all emit properly-escaped markup , meaning that it's suitable for consumption by browsers, parsers, etc. You may search this node's subtree using Searchable#xpath and Searchable#css","title":"Class: Nokogiri::XML::Node / Overview"},{"location":"rdoc/Nokogiri/XML/Node.html#Direct%2BKnown%2BSubclasses","text":"AttributeDecl , DTD , Document , DocumentFragment , ElementDecl , EntityDecl , EntityReference , ProcessingInstruction","title":"Class: Nokogiri::XML::Node / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/XML/Node.html#Defined%2BUnder%2BNamespace","text":"Classes: SaveOptions","title":"Class: Nokogiri::XML::Node / Defined Under Namespace"},{"location":"rdoc/Nokogiri/XML/Node.html#Constant%2BSummary","text":"ELEMENT_NODE = Element node type, see #element? ATTRIBUTE_NODE = Attribute node type TEXT_NODE = Text node type, see #text? CDATA_SECTION_NODE = CDATA node type, see #cdata? ENTITY_REF_NODE = Entity reference node type ENTITY_NODE = Entity node type PI_NODE = PI node type COMMENT_NODE = Comment node type, see #comment? DOCUMENT_NODE = Document node type, see #xml? DOCUMENT_TYPE_NODE = Document type node type DOCUMENT_FRAG_NODE = Document fragment node type NOTATION_NODE = Notation node type HTML_DOCUMENT_NODE = HTML document node type, see #html? DTD_NODE = DTD node type ELEMENT_DECL = Element declaration type ATTRIBUTE_DECL = Attribute declaration type ENTITY_DECL = Entity declaration type NAMESPACE_DECL = Namespace declaration type XINCLUDE_START = XInclude start type XINCLUDE_END = XInclude end type DOCB_DOCUMENT_NODE = DOCB document node type","title":"Class: Nokogiri::XML::Node / Constant Summary"},{"location":"rdoc/Nokogiri/XML/Node.html#Searching%2Bvia%2BXPath%2Bor%2BCSS%2BQueries","text":"# > (selector) \u21d2 Object Search this node's immediate children using CSS selector selector . # at (*args) \u21d2 Object (also: #%) included from Searchable call-seq: search *paths, [namespace-bindings, xpath-variable-bindings, custom-handler-class]. # at_css (*args) \u21d2 Object included from Searchable call-seq: css *rules, [namespace-bindings, custom-pseudo-class]. # at_xpath (*args) \u21d2 Object included from Searchable call-seq: xpath *paths, [namespace-bindings, variable-bindings, custom-handler-class]. # css (*args) \u21d2 Object included from Searchable call-seq: css *rules, [namespace-bindings, custom-pseudo-class]. # search (*args) \u21d2 Object (also: #/) included from Searchable call-seq: search *paths, [namespace-bindings, xpath-variable-bindings, custom-handler-class]. # xpath (*args) \u21d2 Object included from Searchable call-seq: xpath *paths, [namespace-bindings, variable-bindings, custom-handler-class].","title":"Class: Nokogiri::XML::Node / Searching via XPath or CSS Queries"},{"location":"rdoc/Nokogiri/XML/Node.html#Manipulating%2BDocument%2BStructure","text":"# << (node_or_tags) \u21d2 Object Add node_or_tags as a child of this Node. # add_child (node_or_tags) \u21d2 Object Add node_or_tags as a child of this Node. # add_next_sibling (node_or_tags) \u21d2 Object (also: #next=) Insert node_or_tags after this Node (as a sibling). # add_previous_sibling (node_or_tags) \u21d2 Object (also: #previous=) Insert node_or_tags before this Node (as a sibling). # after (node_or_tags) \u21d2 Object Insert node_or_tags after this node (as a sibling). # before (node_or_tags) \u21d2 Object Insert node_or_tags before this node (as a sibling). # children= (node_or_tags) \u21d2 Object Set the inner html for this Node node_or_tags node_or_tags can be a Nokogiri::XML::Node, a Nokogiri::XML::DocumentFragment, or a string containing markup. # content= (string) \u21d2 Object Set the Node's content to a Text node containing string . # default_namespace= (url) \u21d2 Object Adds a default namespace supplied as a string url href, to self. # do_xinclude (options = XML::ParseOptions::DEFAULT_XML) {|options| ... } \u21d2 Object Do xinclude substitution on the subtree below node. # inner_html= (node_or_tags) \u21d2 Object Set the inner html for this Node to node_or_tags node_or_tags can be a Nokogiri::XML::Node, a Nokogiri::XML::DocumentFragment, or a string containing markup. # namespace= (ns) \u21d2 Object Set the default namespace on this node (as would be defined with an \u201cxmlns=\u201d attribute in XML source), as a Namespace object ns . # parent= (parent_node) \u21d2 Object Set the parent Node for this Node. # prepend_child (node_or_tags) \u21d2 Object Add node_or_tags as the first child of this Node. # replace (node_or_tags) \u21d2 Object Replace this Node with node_or_tags . # swap (node_or_tags) \u21d2 Object Swap this Node for node_or_tags node_or_tags can be a Nokogiri::XML::Node, a ::DocumentFragment, a ::NodeSet, or a string containing markup. # wrap (html) \u21d2 Object Add html around this node.","title":"Class: Nokogiri::XML::Node / Manipulating Document Structure"},{"location":"rdoc/Nokogiri/XML/Node.html#Working%2BWith%2BNode%2BAttributes","text":"# [] (name) \u21d2 Object (also: #get_attribute, #attr) Get the attribute value for the attribute name . # []= (name, value) \u21d2 Object (also: #set_attribute) Set the attribute value for the attribute name to value . # add_class (names) \u21d2 Node Ensure HTML CSS classes are present on a Node . # append_class (names) \u21d2 Node Add HTML CSS classes to a Node , regardless of duplication. # attributes \u21d2 Object Returns a hash containing the node's attributes. # classes \u21d2 Array<String> Get the CSS class names of a Node. # each \u21d2 Object Iterate over each attribute name and value pair for this Node. # keys \u21d2 Object Get the attribute names for this Node. # kwattr_add (attribute_name, keywords) \u21d2 Node Ensure that values are present in a keyword attribute. # kwattr_append (attribute_name, keywords) \u21d2 Node Add keywords to a Node's keyword attribute, regardless of duplication. # kwattr_remove (attribute_name, keywords) \u21d2 Node Remove keywords from a keyword attribute. # kwattr_values (attribute_name) \u21d2 Array<String> Retrieve values from a keyword attribute of a Node. # remove_attribute (name) \u21d2 Object (also: #delete) Remove the attribute named name . # remove_class (names = nil) \u21d2 Node Remove HTML CSS classes from a Node . # value? (value) \u21d2 Boolean Does this Node's attributes include <value>. # values \u21d2 Object Get the attribute values for this Node.","title":"Class: Nokogiri::XML::Node / Working With Node Attributes"},{"location":"rdoc/Nokogiri/XML/Node.html#Serialization%2Band%2BGenerating%2BOutput","text":"# canonicalize (mode = XML::XML_C14N_1_0, inclusive_namespaces = nil, with_comments = false) \u21d2 Object # serialize (*args, &block) \u21d2 Object Serialize Node using options . # to_html (options = {}) \u21d2 Object Serialize this Node to HTML. # to_xhtml (options = {}) \u21d2 Object Serialize this Node to XHTML using options . # to_xml (options = {}) \u21d2 Object Serialize this Node to XML using options . # write_html_to (io, options = {}) \u21d2 Object Write Node as HTML to io with options . # write_to (io, *options) {|config| ... } \u21d2 Object Write Node to io with options . # write_xhtml_to (io, options = {}) \u21d2 Object Write Node as XHTML to io with options . # write_xml_to (io, options = {}) \u21d2 Object Write Node as XML to io with options .","title":"Class: Nokogiri::XML::Node / Serialization and Generating Output"},{"location":"rdoc/Nokogiri/XML/Node.html#Class%2BMethod%2BSummary","text":". new (name, document) {|node| ... } \u21d2 Nokogiri::XML::Node Create a new node with name sharing GC lifecycle with document .","title":"Class: Nokogiri::XML::Node / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/Node.html#Instance%2BMethod%2BSummary","text":"# <=> (other) \u21d2 Object Compare two Node objects with respect to their Document. # == (other) \u21d2 Object Test to see if this Node is equal to other . # accept (visitor) \u21d2 Object Accept a visitor. # add_namespace_definition (prefix, href) \u21d2 Object (also: #add_namespace) Adds a namespace definition with prefix using href value. # ancestors (selector = nil) \u21d2 Object Get a list of ancestor Node for this Node. # attribute (name) \u21d2 Object Get the attribute node with name . # attribute_nodes \u21d2 Array<Nokogiri::XML::Attr> Get the attributes for a Node. # attribute_with_ns (name, namespace) \u21d2 Object Get the attribute node with name and namespace . # blank? \u21d2 Boolean Is this node blank?. # cdata? \u21d2 Boolean Returns true if this is a CDATA. # child \u21d2 Object Returns the child node. # children \u21d2 Object Get the list of children for this node as a NodeSet. # comment? \u21d2 Boolean Returns true if this is a Comment. # content \u21d2 Object (also: #text, #inner_text) Returns the plaintext content for this Node. # create_external_subset (name, external_id, system_id) \u21d2 Object Create an external subset. # create_internal_subset (name, external_id, system_id) \u21d2 Object Create the internal subset of a document. # css_path \u21d2 Object Get the path to this node as a CSS expression. # decorate! \u21d2 Object Decorate this node with the decorators set up in this node's Document. # description \u21d2 Object Fetch the Nokogiri::HTML4::ElementDescription for this node. # document \u21d2 Object Get the document for this Node. # document? \u21d2 Boolean Returns true if this is a Document. # dup (*args) \u21d2 Object (also: #clone) Copy this node. # element? \u21d2 Boolean (also: #elem?) Returns true if this is an Element node. # element_children \u21d2 Object (also: #elements) Get the list of children for this node as a NodeSet. # encode_special_chars (string) \u21d2 Object Encode any special characters in string . # external_subset \u21d2 Object Get the external subset. # first_element_child \u21d2 Object Returns the first child node of this node that is an element. # fragment (tags) \u21d2 Object Create a DocumentFragment containing tags that is relative to this context node. # fragment? \u21d2 Boolean Returns true if this is a DocumentFragment. # html? \u21d2 Boolean Returns true if this is an HTML4::Document node. # initialize (name, document) {|node| ... } \u21d2 Nokogiri::XML::Node constructor Create a new node with name sharing GC lifecycle with document . # inner_html (*args) \u21d2 Object Get the inner_html for this node's Node#children. # inspect \u21d2 Object included from PP::Node :nodoc:. # internal_subset \u21d2 Object Get the internal subset. # key? (attribute) \u21d2 Boolean (also: #has_attribute?) Returns true if attribute is set. # lang \u21d2 Object Searches the language of a node, i.e. # lang= \u21d2 Object Set the language of a node, i.e. # last_element_child \u21d2 Object Returns the last child node of this node that is an element. # line \u21d2 Object Returns the line for this Node. # line= (num) \u21d2 Object Sets the line for this Node. # matches? (selector) \u21d2 Boolean Returns true if this Node matches selector . # namespace \u21d2 Object returns the namespace of the element or attribute node as a Namespace object, or nil if there is no namespace for the element or attribute. # namespace_definitions \u21d2 Object returns namespaces defined on self element directly, as an array of Namespace objects. # namespace_scopes \u21d2 Object returns namespaces in scope for self \u2013 those defined on self element directly or any ancestor node \u2013 as an array of Namespace objects. # namespaced_key? (attribute, namespace) \u21d2 Boolean Returns true if attribute is set with namespace . # namespaces \u21d2 Object Returns a Hash of {prefix => value} for all namespaces on this node and its ancestors. # content= \u21d2 Object Set the content for this Node. # next_element \u21d2 Object Returns the next Nokogiri::XML::Element type sibling node. # next_sibling \u21d2 Object (also: #next) Returns the next sibling node. # name \u21d2 Object (also: #name) Returns the name for this Node. # name= (new_name) \u21d2 Object (also: #name=) Set the name for this Node. # node_type \u21d2 Object (also: #type) Get the type for this Node. # parent \u21d2 Object Get the parent Node for this Node. # parse (string_or_io, options = nil) {|options| ... } \u21d2 Object Parse string_or_io as a document fragment within the context of this node. # path \u21d2 Object Returns the path associated with this Node. # pointer_id \u21d2 Object Get the internal pointer number. # pretty_print (pp) \u21d2 Object included from PP::Node :nodoc:. # previous_element \u21d2 Object Returns the previous Nokogiri::XML::Element type sibling node. # previous_sibling \u21d2 Object (also: #previous) Returns the previous sibling node. # processing_instruction? \u21d2 Boolean Returns true if this is a ProcessingInstruction node. # read_only? \u21d2 Boolean Is this a read only node?. # text? \u21d2 Boolean Returns true if this is a Text node. # to_s \u21d2 Object Turn this node in to a string. # traverse (&block) \u21d2 Object Yields self and all children to block recursively. # unlink \u21d2 Object (also: #remove) Unlink this node from its current context. # xml? \u21d2 Boolean Returns true if this is an XML::Document node.","title":"Class: Nokogiri::XML::Node / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/Node.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::XML::Node / Constructor Details"},{"location":"rdoc/Nokogiri/XML/Node.html#initialize-instance_method","text":"Create a new node with name sharing GC lifecycle with document . Parameters: name ( String ) document ( Nokogiri::XML::Document ) Yield Parameters: node ( Nokogiri::XML::Node ) See Also: new","title":"Class: Nokogiri::XML::Node#initialize (name, document) {|node|###} \u21d2 Nokogiri::XML::Node "},{"location":"rdoc/Nokogiri/XML/Node.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Node / Class Method Details"},{"location":"rdoc/Nokogiri/XML/Node.html#new-class_method","text":"Create a new node with name sharing GC lifecycle with document . Parameters: name ( String ) document ( Nokogiri::XML::Document ) Yield Parameters: node ( Nokogiri::XML::Node ) Returns: ( Nokogiri::XML::Node ) See Also: #initialize","title":"Class: Nokogiri::XML::Node#new (name, document) {|node|###} \u21d2 Nokogiri::XML::Node "},{"location":"rdoc/Nokogiri/XML/Node.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Node / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/Node.html#%3C%3C-instance_method","text":"Add node_or_tags as a child of this Node. node_or_tags can be a Nokogiri::XML::Node, a ::DocumentFragment, a ::NodeSet, or a string containing markup. Returns self, to support chaining of calls (e.g., root << child1 << child2) Also see related method add_child .","title":"Class: Nokogiri::XML::Node#<< (node_or_tags)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#%3C%3D%3E-instance_method","text":"Compare two Node objects with respect to their Document. Nodes from different documents cannot be compared.","title":"Class: Nokogiri::XML::Node#<=> (other)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#%3D%3D-instance_method","text":"Test to see if this Node is equal to other","title":"Class: Nokogiri::XML::Node#== (other)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#%3E-instance_method","text":"Search this node's immediate children using CSS selector selector","title":"Class: Nokogiri::XML::Node#> (selector)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#%5B%5D-instance_method","text":"Get the attribute value for the attribute name","title":"Class: Nokogiri::XML::Node#[] (name)  \u21d2 Object  Also known as: get_attribute , attr  "},{"location":"rdoc/Nokogiri/XML/Node.html#%5B%5D%3D-instance_method","text":"Set the attribute value for the attribute name to value","title":"Class: Nokogiri::XML::Node#[]= (name, value)  \u21d2 Object  Also known as: set_attribute  "},{"location":"rdoc/Nokogiri/XML/Node.html#accept-instance_method","text":"Accept a visitor. This method calls \u201cvisit\u201d on visitor with self.","title":"Class: Nokogiri::XML::Node#accept (visitor)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#add_child-instance_method","text":"Add node_or_tags as a child of this Node. node_or_tags can be a Nokogiri::XML::Node, a ::DocumentFragment, a ::NodeSet, or a string containing markup. Returns the reparented node (if node_or_tags is a Node), or NodeSet (if node_or_tags is a DocumentFragment, NodeSet, or string). Also see related method << .","title":"Class: Nokogiri::XML::Node#add_child (node_or_tags)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#add_class-instance_method","text":"Ensure HTML CSS classes are present on a Node . Any CSS classes in names that already exist in the Node 's class attribute are not added. Note that any existing duplicates in the class attribute are not removed. Compare with #append_class . This is a convenience function and is equivalent to: Examples: Ensure that a Node has CSS class \u201csection\u201d Ensure that a Node has CSS classes \u201csection\u201d and \u201cheader\u201d, via a String argument. Ensure that a Node has CSS classes \u201csection\u201d and \u201cheader\u201d, via an Array argument. Parameters: names ( String , Array<String> ) \u2014 CSS class names to be added to the Node's class attribute. May be a string containing whitespace-delimited names, or an Array of String names. Any class names already present will not be added. Any class names not present will be added. If no class attribute exists, one is created. Returns: ( Node ) \u2014 Returns self for ease of chaining method calls. See Also: #kwattr_add #classes #append_class #remove_class","title":"Class: Nokogiri::XML::Node#add_class (names)  \u21d2 Node "},{"location":"rdoc/Nokogiri/XML/Node.html#add_namespace_definition-instance_method","text":"Adds a namespace definition with prefix using href value. The result is as if parsed XML for this node had included an attribute 'xmlns:prefix=value'. A default namespace for this node (\u201cxmlns=\u201d) can be added by passing 'nil' for prefix. Namespaces added this way will not show up in #attributes, but they will be included as an xmlns attribute when the node is serialized to XML.","title":"Class: Nokogiri::XML::Node#add_namespace_definition (prefix, href)  \u21d2 Object  Also known as: add_namespace  "},{"location":"rdoc/Nokogiri/XML/Node.html#add_next_sibling-instance_method","text":"Insert node_or_tags after this Node (as a sibling). node_or_tags can be a Nokogiri::XML::Node, a ::DocumentFragment, a ::NodeSet, or a string containing markup. Returns the reparented node (if node_or_tags is a Node), or NodeSet (if node_or_tags is a DocumentFragment, NodeSet, or string). Also see related method after . Raises: ( ArgumentError )","title":"Class: Nokogiri::XML::Node#add_next_sibling (node_or_tags)  \u21d2 Object  Also known as: next=  "},{"location":"rdoc/Nokogiri/XML/Node.html#add_previous_sibling-instance_method","text":"Insert node_or_tags before this Node (as a sibling). node_or_tags can be a Nokogiri::XML::Node, a ::DocumentFragment, a ::NodeSet, or a string containing markup. Returns the reparented node (if node_or_tags is a Node), or NodeSet (if node_or_tags is a DocumentFragment, NodeSet, or string). Also see related method before . Raises: ( ArgumentError )","title":"Class: Nokogiri::XML::Node#add_previous_sibling (node_or_tags)  \u21d2 Object  Also known as: previous=  "},{"location":"rdoc/Nokogiri/XML/Node.html#after-instance_method","text":"Insert node_or_tags after this node (as a sibling). node_or_tags can be a Nokogiri::XML::Node, a Nokogiri::XML::DocumentFragment, or a string containing markup. Returns self, to support chaining of calls. Also see related method add_next_sibling .","title":"Class: Nokogiri::XML::Node#after (node_or_tags)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#ancestors-instance_method","text":"Get a list of ancestor Node for this Node. If selector is given, the ancestors must match selector","title":"Class: Nokogiri::XML::Node#ancestors (selector = nil)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#append_class-instance_method","text":"Add HTML CSS classes to a Node , regardless of duplication. Compare with #add_class . This is a convenience function and is equivalent to: Examples: Append \u201csection\u201d to a Node 's CSS class attriubute Append \u201csection\u201d and \u201cheader\u201d to a Node 's CSS class attribute, via a String argument. Append \u201csection\u201d and \u201cheader\u201d to a Node 's CSS class attribute, via an Array argument. Parameters: names ( String , Array<String> ) \u2014 CSS class names to be appended to the Node's class attribute. May be a string containing whitespace-delimited names, or an Array of String names. All class names passed in will be appended to the class attribute even if they are already present in the attribute value. If no class attribute exists, one is created. Returns: ( Node ) \u2014 Returns self for ease of chaining method calls. See Also: #kwattr_append #classes #add_class #remove_class","title":"Class: Nokogiri::XML::Node#append_class (names)  \u21d2 Node "},{"location":"rdoc/Nokogiri/XML/Node.html#at-instance_method","text":"call-seq: search *paths, [namespace-bindings, xpath-variable-bindings, custom-handler-class] Search this object for paths , and return only the first result. paths must be one or more XPath or CSS queries. See Searchable#search for more information.","title":"Class: Nokogiri::XML::Node#at (*args)  \u21d2 Object  Also known as: %   Originally defined in module Searchable  "},{"location":"rdoc/Nokogiri/XML/Node.html#at_css-instance_method","text":"call-seq: css *rules, [namespace-bindings, custom-pseudo-class] Search this object for CSS rules , and return only the first match. rules must be one or more CSS selectors. See Searchable#css for more information.","title":"Class: Nokogiri::XML::Node#at_css (*args)  \u21d2 Object  Originally defined in module Searchable  "},{"location":"rdoc/Nokogiri/XML/Node.html#at_xpath-instance_method","text":"call-seq: xpath *paths, [namespace-bindings, variable-bindings, custom-handler-class] Search this node for XPath paths , and return only the first match. paths must be one or more XPath queries. See Searchable#xpath for more information.","title":"Class: Nokogiri::XML::Node#at_xpath (*args)  \u21d2 Object  Originally defined in module Searchable  "},{"location":"rdoc/Nokogiri/XML/Node.html#attribute-instance_method","text":"Get the attribute node with name","title":"Class: Nokogiri::XML::Node#attribute (name)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#attribute_nodes-instance_method","text":"Get the attributes for a Node Returns: ( Array< Nokogiri::XML::Attr > ) \u2014 containing the Node's attributes.","title":"Class: Nokogiri::XML::Node#attribute_nodes \u21d2 Array< Nokogiri::XML::Attr > "},{"location":"rdoc/Nokogiri/XML/Node.html#attribute_with_ns-instance_method","text":"Get the attribute node with name and namespace","title":"Class: Nokogiri::XML::Node#attribute_with_ns (name, namespace)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#attributes-instance_method","text":"Returns a hash containing the node's attributes. The key is the attribute name without any namespace, the value is a Nokogiri::XML::Attr representing the attribute. If you need to distinguish attributes with the same name, with different namespaces use #attribute_nodes instead.","title":"Class: Nokogiri::XML::Node#attributes \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#before-instance_method","text":"Insert node_or_tags before this node (as a sibling). node_or_tags can be a Nokogiri::XML::Node, a ::DocumentFragment, a ::NodeSet, or a string containing markup. Returns self, to support chaining of calls. Also see related method add_previous_sibling .","title":"Class: Nokogiri::XML::Node#before (node_or_tags)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#blank%3F-instance_method","text":"Is this node blank? Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#blank? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Node.html#canonicalize-instance_method","text":"","title":"Class: Nokogiri::XML::Node#canonicalize (mode = XML::XML_C14N_1_0, inclusive_namespaces = nil, with_comments = false)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#cdata%3F-instance_method","text":"Returns true if this is a CDATA Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#cdata? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Node.html#child-instance_method","text":"Returns the child node","title":"Class: Nokogiri::XML::Node#child \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#children-instance_method","text":"Get the list of children for this node as a NodeSet","title":"Class: Nokogiri::XML::Node#children \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#children%3D-instance_method","text":"Set the inner html for this Node node_or_tags node_or_tags can be a Nokogiri::XML::Node, a Nokogiri::XML::DocumentFragment, or a string containing markup. Returns the reparented node (if node_or_tags is a Node), or NodeSet (if node_or_tags is a DocumentFragment, NodeSet, or string). Also see related method inner_html=","title":"Class: Nokogiri::XML::Node#children= (node_or_tags)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#classes-instance_method","text":"Get the CSS class names of a Node. This is a convenience function and is equivalent to: Examples: Returns: ( Array<String> ) \u2014 The CSS classes present in the Node's class attribute. If the attribute is empty or non-existent, the return value is an empty array. See Also: #kwattr_values #add_class #append_class #remove_class","title":"Class: Nokogiri::XML::Node#classes \u21d2 Array<String> "},{"location":"rdoc/Nokogiri/XML/Node.html#comment%3F-instance_method","text":"Returns true if this is a Comment Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#comment? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Node.html#content-instance_method","text":"Returns the plaintext content for this Node. Note that entities will always be expanded in the returned string.","title":"Class: Nokogiri::XML::Node#content \u21d2 Object  Also known as: text , inner_text  "},{"location":"rdoc/Nokogiri/XML/Node.html#content%3D-instance_method","text":"Set the Node's content to a Text node containing string . The string gets XML escaped, not interpreted as markup.","title":"Class: Nokogiri::XML::Node#content= (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#create_external_subset-instance_method","text":"Create an external subset","title":"Class: Nokogiri::XML::Node#create_external_subset (name, external_id, system_id)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#create_internal_subset-instance_method","text":"Create the internal subset of a document.","title":"Class: Nokogiri::XML::Node#create_internal_subset (name, external_id, system_id)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#css-instance_method","text":"call-seq: css *rules, [namespace-bindings, custom-pseudo-class] Search this object for CSS rules . rules must be one or more CSS selectors. For example: A hash of namespace bindings may be appended. For example: Custom CSS pseudo classes may also be defined. To define custom pseudo classes, create a class and implement the custom pseudo class you want defined. The first argument to the method will be the current matching NodeSet. Any other arguments are ones that you pass in. For example: Note that the CSS query string is case-sensitive with regards to your document type. That is, if you're looking for \u201cH1\u201d in an HTML document, you'll never find anything, since HTML tags will match only lowercase CSS queries. However, \u201cH1\u201d might be found in an XML document, where tags names are case-sensitive (e.g., \u201cH1\u201d is distinct from \u201ch1\u201d).","title":"Class: Nokogiri::XML::Node#css (*args)  \u21d2 Object  Originally defined in module Searchable  "},{"location":"rdoc/Nokogiri/XML/Node.html#css_path-instance_method","text":"Get the path to this node as a CSS expression","title":"Class: Nokogiri::XML::Node#css_path \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#decorate%21-instance_method","text":"Decorate this node with the decorators set up in this node's Document","title":"Class: Nokogiri::XML::Node#decorate! \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#default_namespace%3D-instance_method","text":"Adds a default namespace supplied as a string url href, to self. The consequence is as an xmlns attribute with supplied argument were present in parsed XML. A default namespace set with this method will now show up in #attributes, but when this node is serialized to XML an \u201cxmlns\u201d attribute will appear. See also #namespace and #namespace=","title":"Class: Nokogiri::XML::Node#default_namespace= (url)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#description-instance_method","text":"Fetch the Nokogiri::HTML4::ElementDescription for this node. Returns nil on XML documents and on unknown tags.","title":"Class: Nokogiri::XML::Node#description \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#do_xinclude-instance_method","text":"Do xinclude substitution on the subtree below node. If given a block, a Nokogiri::XML::ParseOptions object initialized from options , will be passed to it, allowing more convenient modification of the parser options. Yields: ( options )","title":"Class: Nokogiri::XML::Node#do_xinclude (options = XML::ParseOptions::DEFAULT_XML) {|options|###} \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#document-instance_method","text":"Get the document for this Node","title":"Class: Nokogiri::XML::Node#document \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#document%3F-instance_method","text":"Returns true if this is a Document Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#document? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Node.html#dup-instance_method","text":"Copy this node. An optional depth may be passed in. 0 is a shallow copy, 1 (the default) is a deep copy. An optional new_parent_doc may also be passed in, which will be the new node's parent document. Defaults to the current node's document. current document.","title":"Class: Nokogiri::XML::Node#dup \u21d2 Object#dup (depth)  \u21d2 Object#dup (depth, new_parent_doc)  \u21d2 Object   Also known as: clone  "},{"location":"rdoc/Nokogiri/XML/Node.html#each-instance_method","text":"Iterate over each attribute name and value pair for this Node.","title":"Class: Nokogiri::XML::Node#each \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#element%3F-instance_method","text":"Returns true if this is an Element node Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#element? \u21d2 Boolean  Also known as: elem?  "},{"location":"rdoc/Nokogiri/XML/Node.html#element_children-instance_method","text":"Get the list of children for this node as a NodeSet. All nodes will be element nodes. Example:","title":"Class: Nokogiri::XML::Node#element_children \u21d2 Object  Also known as: elements  "},{"location":"rdoc/Nokogiri/XML/Node.html#encode_special_chars-instance_method","text":"Encode any special characters in string","title":"Class: Nokogiri::XML::Node#encode_special_chars (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#external_subset-instance_method","text":"Get the external subset","title":"Class: Nokogiri::XML::Node#external_subset \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#first_element_child-instance_method","text":"Returns the first child node of this node that is an element. Example:","title":"Class: Nokogiri::XML::Node#first_element_child \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#fragment-instance_method","text":"Create a DocumentFragment containing tags that is relative to this context node.","title":"Class: Nokogiri::XML::Node#fragment (tags)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#fragment%3F-instance_method","text":"Returns true if this is a DocumentFragment Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#fragment? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Node.html#html%3F-instance_method","text":"Returns true if this is an HTML4::Document node Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#html? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Node.html#inner_html-instance_method","text":"Get the inner_html for this node's Node#children","title":"Class: Nokogiri::XML::Node#inner_html (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#inner_html%3D-instance_method","text":"Set the inner html for this Node to node_or_tags node_or_tags can be a Nokogiri::XML::Node, a Nokogiri::XML::DocumentFragment, or a string containing markup. Returns self. Also see related method children=","title":"Class: Nokogiri::XML::Node#inner_html= (node_or_tags)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#inspect-instance_method","text":":nodoc:","title":"Class: Nokogiri::XML::Node#inspect \u21d2 Object  Originally defined in module PP::Node  "},{"location":"rdoc/Nokogiri/XML/Node.html#internal_subset-instance_method","text":"Get the internal subset","title":"Class: Nokogiri::XML::Node#internal_subset \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#key%3F-instance_method","text":"Returns true if attribute is set Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#key? (attribute)  \u21d2 Boolean  Also known as: has_attribute?  "},{"location":"rdoc/Nokogiri/XML/Node.html#keys-instance_method","text":"Get the attribute names for this Node.","title":"Class: Nokogiri::XML::Node#keys \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#kwattr_add-instance_method","text":"Ensure that values are present in a keyword attribute. Any values in keywords that already exist in the Node 's attribute values are not added. Note that any existing duplicates in the attribute values are not removed. Compare with #kwattr_append . A \u201ckeyword attribute\u201d is a node attribute that contains a set of space-delimited values. Perhaps the most familiar example of this is the HTML class attribute used to contain CSS classes. But other keyword attributes exist, for instance [`rel`]( developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel ). Examples: Ensure that a Node has \u201cnofollow\u201d in its rel attribute. Ensure that a Node has \u201cnofollow\u201d and \u201cnoreferrer\u201d in its rel attribute, via a String argument. Ensure that a Node has \u201cnofollow\u201d and \u201cnoreferrer\u201d in its rel attribute, via an Array argument. Parameters: attribute_name ( String ) \u2014 The name of the keyword attribute to be modified. keywords ( String , Array<String> ) \u2014 Keywords to be added to the attribute named attribute_name . May be a string containing whitespace-delimited values, or an Array of String values. Any values already present will not be added. Any values not present will be added. If the named attribute does not exist, it is created. Returns: ( Node ) \u2014 Returns self for ease of chaining method calls. See Also: #add_class #kwattr_values #kwattr_append #kwattr_remove Since: v1.11.0","title":"Class: Nokogiri::XML::Node#kwattr_add (attribute_name, keywords)  \u21d2 Node "},{"location":"rdoc/Nokogiri/XML/Node.html#kwattr_append-instance_method","text":"Add keywords to a Node's keyword attribute, regardless of duplication. Compare with #kwattr_add . A \u201ckeyword attribute\u201d is a node attribute that contains a set of space-delimited values. Perhaps the most familiar example of this is the HTML class attribute used to contain CSS classes. But other keyword attributes exist, for instance [`rel`]( developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel ). Examples: Append \u201cnofollow\u201d to the rel attribute. Append \u201cnofollow\u201d and \u201cnoreferrer\u201d to the rel attribute, via a String argument. Append \u201cnofollow\u201d and \u201cnoreferrer\u201d to the rel attribute, via an Array argument. Parameters: attribute_name ( String ) \u2014 The name of the keyword attribute to be modified. keywords ( String , Array<String> ) \u2014 Keywords to be added to the attribute named attribute_name . May be a string containing whitespace-delimited values, or an Array of String values. All values passed in will be appended to the named attribute even if they are already present in the attribute. If the named attribute does not exist, it is created. Returns: ( Node ) \u2014 Returns self for ease of chaining method calls. See Also: #append_class #kwattr_values #kwattr_add #kwattr_remove Since: v1.11.0","title":"Class: Nokogiri::XML::Node#kwattr_append (attribute_name, keywords)  \u21d2 Node "},{"location":"rdoc/Nokogiri/XML/Node.html#kwattr_remove-instance_method","text":"Remove keywords from a keyword attribute. Any matching keywords that exist in the named attribute are removed, including any multiple entries. If no keywords remain after this operation, or if keywords is nil , the attribute is deleted from the node. A \u201ckeyword attribute\u201d is a node attribute that contains a set of space-delimited values. Perhaps the most familiar example of this is the HTML class attribute used to contain CSS classes. But other keyword attributes exist, for instance [`rel`]( developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel ). Examples: Parameters: attribute_name ( String ) \u2014 The name of the keyword attribute to be modified. keywords ( String , Array<String> ) \u2014 Keywords to be removed from the attribute named attribute_name . May be a string containing whitespace-delimited values, or an Array of String values. Any keywords present in the named attribute will be removed. If no keywords remain, or if keywords is nil, the attribute is deleted. Returns: ( Node ) \u2014 Returns self for ease of chaining method calls. See Also: #remove_class #kwattr_values #kwattr_add #kwattr_append Since: v1.11.0","title":"Class: Nokogiri::XML::Node#kwattr_remove (attribute_name, keywords)  \u21d2 Node "},{"location":"rdoc/Nokogiri/XML/Node.html#kwattr_values-instance_method","text":"Retrieve values from a keyword attribute of a Node. A \u201ckeyword attribute\u201d is a node attribute that contains a set of space-delimited values. Perhaps the most familiar example of this is the HTML class attribute used to contain CSS classes. But other keyword attributes exist, for instance [`rel`]( developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel ). Examples: Parameters: attribute_name ( String ) \u2014 The name of the keyword attribute to be inspected. Returns: ( Array<String> ) \u2014 The values present in the Node's attribute_name attribute. If the attribute is empty or non-existent, the return value is an empty array. See Also: #classes #kwattr_add #kwattr_append #kwattr_remove Since: v1.11.0","title":"Class: Nokogiri::XML::Node#kwattr_values (attribute_name)  \u21d2 Array<String> "},{"location":"rdoc/Nokogiri/XML/Node.html#lang-instance_method","text":"Searches the language of a node, i.e. the values of the xml:lang attribute or the one carried by the nearest ancestor.","title":"Class: Nokogiri::XML::Node#lang \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#lang%3D-instance_method","text":"Set the language of a node, i.e. the values of the xml:lang attribute.","title":"Class: Nokogiri::XML::Node#lang= \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#last_element_child-instance_method","text":"Returns the last child node of this node that is an element. Example:","title":"Class: Nokogiri::XML::Node#last_element_child \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#line-instance_method","text":"Returns the line for this Node","title":"Class: Nokogiri::XML::Node#line \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#line%3D-instance_method","text":"Sets the line for this Node. num must be less than 65535.","title":"Class: Nokogiri::XML::Node#line= (num)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#matches%3F-instance_method","text":"Returns true if this Node matches selector Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#matches? (selector)  \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Node.html#namespace-instance_method","text":"returns the namespace of the element or attribute node as a Namespace object, or nil if there is no namespace for the element or attribute.","title":"Class: Nokogiri::XML::Node#namespace \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#namespace%3D-instance_method","text":"Set the default namespace on this node (as would be defined with an \u201cxmlns=\u201d attribute in XML source), as a Namespace object ns . Note that a Namespace added this way will NOT be serialized as an xmlns attribute for this node. You probably want #default_namespace= instead, or perhaps #add_namespace_definition with a nil prefix argument.","title":"Class: Nokogiri::XML::Node#namespace= (ns)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#namespace_definitions-instance_method","text":"returns namespaces defined on self element directly, as an array of Namespace objects. Includes both a default namespace (as in\u201cxmlns=\u201d), and prefixed namespaces (as in \u201cxmlns:prefix=\u201d).","title":"Class: Nokogiri::XML::Node#namespace_definitions \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#namespace_scopes-instance_method","text":"returns namespaces in scope for self \u2013 those defined on self element directly or any ancestor node \u2013 as an array of Namespace objects. Default namespaces (\u201cxmlns=\u201d style) for self are included in this array; Default namespaces for ancestors, however, are not. See also #namespaces","title":"Class: Nokogiri::XML::Node#namespace_scopes \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#namespaced_key%3F-instance_method","text":"Returns true if attribute is set with namespace Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#namespaced_key? (attribute, namespace)  \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Node.html#namespaces-instance_method","text":"Returns a Hash of {prefix => value} for all namespaces on this node and its ancestors. This method returns the same namespaces as #namespace_scopes. Returns namespaces in scope for self \u2013 those defined on self element directly or any ancestor node \u2013 as a Hash of attribute-name/value pairs. Note that the keys in this hash XML attributes that would be used to define this namespace, such as \u201cxmlns:prefix\u201d, not just the prefix. Default namespace set on self will be included with key \u201cxmlns\u201d. However, default namespaces set on ancestor will NOT be, even if self has no explicit default namespace.","title":"Class: Nokogiri::XML::Node#namespaces \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#native_content%3D-instance_method","text":"Set the content for this Node","title":"Class: Nokogiri::XML::Node#content= \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#next_element-instance_method","text":"Returns the next Nokogiri::XML::Element type sibling node.","title":"Class: Nokogiri::XML::Node#next_element \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#next_sibling-instance_method","text":"Returns the next sibling node","title":"Class: Nokogiri::XML::Node#next_sibling \u21d2 Object  Also known as: next  "},{"location":"rdoc/Nokogiri/XML/Node.html#node_name-instance_method","text":"Returns the name for this Node","title":"Class: Nokogiri::XML::Node#name \u21d2 Object  Also known as: name  "},{"location":"rdoc/Nokogiri/XML/Node.html#node_name%3D-instance_method","text":"Set the name for this Node","title":"Class: Nokogiri::XML::Node#name= (new_name)  \u21d2 Object  Also known as: name=  "},{"location":"rdoc/Nokogiri/XML/Node.html#node_type-instance_method","text":"Get the type for this Node","title":"Class: Nokogiri::XML::Node#node_type \u21d2 Object  Also known as: type  "},{"location":"rdoc/Nokogiri/XML/Node.html#parent-instance_method","text":"Get the parent Node for this Node","title":"Class: Nokogiri::XML::Node#parent \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#parent%3D-instance_method","text":"Set the parent Node for this Node","title":"Class: Nokogiri::XML::Node#parent= (parent_node)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#parse-instance_method","text":"Parse string_or_io as a document fragment within the context of this node. Returns a XML::NodeSet containing the nodes parsed from string_or_io . Yields: ( options )","title":"Class: Nokogiri::XML::Node#parse (string_or_io, options = nil) {|options|###} \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#path-instance_method","text":"Returns the path associated with this Node","title":"Class: Nokogiri::XML::Node#path \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#pointer_id-instance_method","text":"Get the internal pointer number","title":"Class: Nokogiri::XML::Node#pointer_id \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#prepend_child-instance_method","text":"Add node_or_tags as the first child of this Node. node_or_tags can be a Nokogiri::XML::Node, a ::DocumentFragment, a ::NodeSet, or a string containing markup. Returns the reparented node (if node_or_tags is a Node), or NodeSet (if node_or_tags is a DocumentFragment, NodeSet, or string). Also see related method add_child .","title":"Class: Nokogiri::XML::Node#prepend_child (node_or_tags)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#pretty_print-instance_method","text":":nodoc:","title":"Class: Nokogiri::XML::Node#pretty_print (pp)  \u21d2 Object  Originally defined in module PP::Node  "},{"location":"rdoc/Nokogiri/XML/Node.html#previous_element-instance_method","text":"Returns the previous Nokogiri::XML::Element type sibling node.","title":"Class: Nokogiri::XML::Node#previous_element \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#previous_sibling-instance_method","text":"Returns the previous sibling node","title":"Class: Nokogiri::XML::Node#previous_sibling \u21d2 Object  Also known as: previous  "},{"location":"rdoc/Nokogiri/XML/Node.html#processing_instruction%3F-instance_method","text":"Returns true if this is a ProcessingInstruction node Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#processing_instruction? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Node.html#read_only%3F-instance_method","text":"Is this a read only node? Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#read_only? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Node.html#remove_attribute-instance_method","text":"Remove the attribute named name","title":"Class: Nokogiri::XML::Node#remove_attribute (name)  \u21d2 Object  Also known as: delete  "},{"location":"rdoc/Nokogiri/XML/Node.html#remove_class-instance_method","text":"Remove HTML CSS classes from a Node . Any CSS classes in names that exist in the Node 's class attribute are removed, including any multiple entries. If no CSS classes remain after this operation, or if names is nil , the class attribute is deleted from the node. This is a convenience function and is equivalent to: Examples: Parameters: names ( String , Array<String> ) (defaults to: nil ) \u2014 CSS class names to be removed from the Node's class attribute. May be a string containing whitespace-delimited names, or an Array of String names. Any class names already present will be removed. If no CSS classes remain, the class attribute is deleted. Returns: ( Node ) \u2014 Returns self for ease of chaining method calls. See Also: #kwattr_remove #classes #add_class #append_class","title":"Class: Nokogiri::XML::Node#remove_class (names = nil)  \u21d2 Node "},{"location":"rdoc/Nokogiri/XML/Node.html#replace-instance_method","text":"Replace this Node with node_or_tags . node_or_tags can be a Nokogiri::XML::Node, a ::DocumentFragment, a ::NodeSet, or a string containing markup. Returns the reparented node (if node_or_tags is a Node), or NodeSet (if node_or_tags is a DocumentFragment, NodeSet, or string). Also see related method swap .","title":"Class: Nokogiri::XML::Node#replace (node_or_tags)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#search-instance_method","text":"call-seq: search *paths, [namespace-bindings, xpath-variable-bindings, custom-handler-class] Search this object for paths . paths must be one or more XPath or CSS queries: A hash of namespace bindings may be appended: For XPath queries, a hash of variable bindings may also be appended to the namespace bindings. For example: Custom XPath functions and CSS pseudo-selectors may also be defined. To define custom functions create a class and implement the function you want to define. The first argument to the method will be the current matching NodeSet. Any other arguments are ones that you pass in. Note that this class may appear anywhere in the argument list. For example: See Searchable#xpath and Searchable#css for further usage help.","title":"Class: Nokogiri::XML::Node#search (*args)  \u21d2 Object  Also known as: /   Originally defined in module Searchable  "},{"location":"rdoc/Nokogiri/XML/Node.html#serialize-instance_method","text":"Serialize Node using options . Save options can also be set using a block. See SaveOptions. These two statements are equivalent: or","title":"Class: Nokogiri::XML::Node#serialize (*args, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#swap-instance_method","text":"Swap this Node for node_or_tags node_or_tags can be a Nokogiri::XML::Node, a ::DocumentFragment, a ::NodeSet, or a string containing markup. Returns self, to support chaining of calls. Also see related method replace .","title":"Class: Nokogiri::XML::Node#swap (node_or_tags)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#text%3F-instance_method","text":"Returns true if this is a Text node Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#text? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Node.html#to_html-instance_method","text":"Serialize this Node to HTML See Node#write_to for a list of options . For formatted output, use Node#to_xhtml instead.","title":"Class: Nokogiri::XML::Node#to_html (options = {})  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#to_s-instance_method","text":"Turn this node in to a string. If the document is HTML, this method returns html. If the document is XML, this method returns XML.","title":"Class: Nokogiri::XML::Node#to_s \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#to_xhtml-instance_method","text":"Serialize this Node to XHTML using options See Node#write_to for a list of options","title":"Class: Nokogiri::XML::Node#to_xhtml (options = {})  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#to_xml-instance_method","text":"Serialize this Node to XML using options See Node#write_to for a list of options","title":"Class: Nokogiri::XML::Node#to_xml (options = {})  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#traverse-instance_method","text":"Yields self and all children to block recursively.","title":"Class: Nokogiri::XML::Node#traverse (&block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#unlink-instance_method","text":"Unlink this node from its current context.","title":"Class: Nokogiri::XML::Node#unlink \u21d2 Object  Also known as: remove  "},{"location":"rdoc/Nokogiri/XML/Node.html#value%3F-instance_method","text":"Does this Node's attributes include <value> Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#value? (value)  \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Node.html#values-instance_method","text":"Get the attribute values for this Node.","title":"Class: Nokogiri::XML::Node#values \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#wrap-instance_method","text":"Add html around this node Returns self","title":"Class: Nokogiri::XML::Node#wrap (html)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#write_html_to-instance_method","text":"Write Node as HTML to io with options See Node#write_to for a list of options","title":"Class: Nokogiri::XML::Node#write_html_to (io, options = {})  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#write_to-instance_method","text":"Write Node to io with options . options modify the output of this method. Valid options are: :encoding for changing the encoding :indent_text the indentation text, defaults to one space :indent the number of :indent_text to use, defaults to 2 :save_with a combination of SaveOptions constants. To save with UTF-8 indented twice: To save indented with two dashes: Yields: ( config )","title":"Class: Nokogiri::XML::Node#write_to (io, *options) {|config|###} \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#write_xhtml_to-instance_method","text":"Write Node as XHTML to io with options See Node#write_to for a list of options","title":"Class: Nokogiri::XML::Node#write_xhtml_to (io, options = {})  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#write_xml_to-instance_method","text":"Write Node as XML to io with options See Node#write_to for a list of options","title":"Class: Nokogiri::XML::Node#write_xml_to (io, options = {})  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node.html#xml%3F-instance_method","text":"Returns true if this is an XML::Document node Returns: ( Boolean )","title":"Class: Nokogiri::XML::Node#xml? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Node.html#xpath-instance_method","text":"call-seq: xpath *paths, [namespace-bindings, variable-bindings, custom-handler-class] Search this node for XPath paths . paths must be one or more XPath queries. A hash of namespace bindings may be appended. For example: A hash of variable bindings may also be appended to the namespace bindings. For example: Custom XPath functions may also be defined. To define custom functions create a class and implement the function you want to define. The first argument to the method will be the current matching NodeSet. Any other arguments are ones that you pass in. Note that this class may appear anywhere in the argument list. For example: Generated on Mon Sep 27 15:13:34 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::Node#xpath (*args)  \u21d2 Object  Originally defined in module Searchable  "},{"location":"rdoc/Nokogiri/XML/NodeSet.html","text":"","title":"Class: Nokogiri::XML::NodeSet"},{"location":"rdoc/Nokogiri/XML/NodeSet.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ANodeSet","text":"Inherits: Object Object Nokogiri::XML::NodeSet show all Includes: Enumerable, Searchable Defined in: lib/nokogiri/xml/node_set.rb , ext/nokogiri/xml_node_set.c","title":"Class: Nokogiri::XML::NodeSet"},{"location":"rdoc/Nokogiri/XML/NodeSet.html#Overview","text":"A NodeSet contains a list of Nokogiri::XML::Node objects. Typically a NodeSet is return as a result of searching a Document via Nokogiri::XML::Searchable#css or Nokogiri::XML::Searchable#xpath","title":"Class: Nokogiri::XML::NodeSet / Overview"},{"location":"rdoc/Nokogiri/XML/NodeSet.html#Constant%2BSummary","text":"IMPLIED_XPATH_CONTEXTS =","title":"Class: Nokogiri::XML::NodeSet / Constant Summary"},{"location":"rdoc/Nokogiri/XML/NodeSet.html#Instance%2BAttribute%2BSummary","text":"# document \u21d2 Object The Document this NodeSet is associated with.","title":"Class: Nokogiri::XML::NodeSet / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/XML/NodeSet.html#Searching%2Bvia%2BXPath%2Bor%2BCSS%2BQueries","text":"# at_css (*args) \u21d2 Object included from Searchable call-seq: css *rules, [namespace-bindings, custom-pseudo-class]. # at_xpath (*args) \u21d2 Object included from Searchable call-seq: xpath *paths, [namespace-bindings, variable-bindings, custom-handler-class]. # search (*args) \u21d2 Object (also: #/) included from Searchable call-seq: search *paths, [namespace-bindings, xpath-variable-bindings, custom-handler-class].","title":"Class: Nokogiri::XML::NodeSet / Searching via XPath or CSS Queries"},{"location":"rdoc/Nokogiri/XML/NodeSet.html#Instance%2BMethod%2BSummary","text":"# & (node_set) \u21d2 Object Set Intersection \u2014 Returns a new NodeSet containing nodes common to the two NodeSets. # - (node_set) \u21d2 Object Difference - returns a new NodeSet that is a copy of this NodeSet, removing each item that also appears in node_set . # == (other) \u21d2 Object Equality \u2013 Two NodeSets are equal if the contain the same number of elements and if each element is equal to the corresponding element in the other NodeSet. # > (selector) \u21d2 Object Search this NodeSet's nodes' immediate children using CSS selector selector . # [] (*args) \u21d2 Object start, length -> NodeSet or nil [range] -> NodeSet or nil slice(index) -> Node or nil slice(start, length) -> NodeSet or nil slice(range) -> NodeSet or nil. # add_class (name) \u21d2 Object Add the class attribute name to all Node objects in the NodeSet. # after (datum) \u21d2 Object Insert datum after the last Node in this NodeSet. # append_class (name) \u21d2 Object Append the class attribute name to all Node objects in the NodeSet. # at (*args) \u21d2 Object (also: #%) call-seq: search *paths, [namespace-bindings, xpath-variable-bindings, custom-handler-class]. # attr (key, value = nil, &block) \u21d2 Object (also: #set, #attribute) Set attributes on each Node in the NodeSet, or get an attribute from the first Node in the NodeSet. # before (datum) \u21d2 Object Insert datum before the first Node in this NodeSet. # children \u21d2 Object Returns a new NodeSet containing all the children of all the nodes in the NodeSet. # css (*args) \u21d2 Object call-seq: css *rules, [namespace-bindings, custom-pseudo-class]. # delete (node) \u21d2 Object Delete node from the Nodeset, if it is a member. # dup \u21d2 Object (also: #clone) Duplicate this NodeSet. # each \u21d2 Object Iterate over each node, yielding to block . # empty? \u21d2 Boolean Is this NodeSet empty?. # filter (expr) \u21d2 Object Filter this list for nodes that match expr . # first (n = nil) \u21d2 Object Get the first element of the NodeSet. # include? (node) \u21d2 Boolean Returns true if any member of node set equals node . # index (node = nil) \u21d2 Object Returns the index of the first node in self that is == to node or meets the given block. # initialize (document, list = []) {|_self| ... } \u21d2 NodeSet constructor Create a NodeSet with document defaulting to list . # inner_html (*args) \u21d2 Object Get the inner html of all contained Node objects. # inner_text \u21d2 Object (also: #text) Get the inner text of all contained Node objects. # inspect \u21d2 Object Return a nicely formated string representation. # last \u21d2 Object Get the last element of the NodeSet. # length \u21d2 Object (also: #size) Get the length of the node set. # pop \u21d2 Object Removes the last element from set and returns it, or nil if the set is empty. # push (node) \u21d2 Object (also: #<<) Append node to the NodeSet. # remove_attr (name) \u21d2 Object (also: #remove_attribute) Remove the attributed named name from all Node objects in the NodeSet. # remove_class (name = nil) \u21d2 Object Remove the class attribute name from all Node objects in the NodeSet. # reverse \u21d2 Object Returns a new NodeSet containing all the nodes in the NodeSet in reverse order. # shift \u21d2 Object Returns the first element of the NodeSet and removes it. # slice (*args) \u21d2 Object start, length -> NodeSet or nil [range] -> NodeSet or nil slice(index) -> Node or nil slice(start, length) -> NodeSet or nil slice(range) -> NodeSet or nil. # to_a \u21d2 Object (also: #to_ary) Return this list as an Array. # to_html (*args) \u21d2 Object Convert this NodeSet to HTML. # to_s \u21d2 Object Convert this NodeSet to a string. # to_xhtml (*args) \u21d2 Object Convert this NodeSet to XHTML. # to_xml (*args) \u21d2 Object Convert this NodeSet to XML. # unlink \u21d2 Object (also: #remove) Unlink this NodeSet and all Node objects it contains from their current context. # wrap (html) \u21d2 Object Wrap this NodeSet with html . # xpath (*args) \u21d2 Object call-seq: xpath *paths, [namespace-bindings, variable-bindings, custom-handler-class]. # | (node_set) \u21d2 Object (also: #+) Returns a new set built by merging the set and the elements of the given set.","title":"Class: Nokogiri::XML::NodeSet / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/NodeSet.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::XML::NodeSet / Constructor Details"},{"location":"rdoc/Nokogiri/XML/NodeSet.html#initialize-instance_method","text":"Create a NodeSet with document defaulting to list Yields: ( _self ) Yield Parameters: _self ( Nokogiri::XML::NodeSet ) \u2014 the object that the method was called on","title":"Class: Nokogiri::XML::NodeSet#initialize (document, list = []) {|_self|###} \u21d2 NodeSet "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::XML::NodeSet / Instance Attribute Details"},{"location":"rdoc/Nokogiri/XML/NodeSet.html#document-instance_method","text":"The Document this NodeSet is associated with","title":"Class: Nokogiri::XML::NodeSet#document \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::NodeSet / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/NodeSet.html#%26-instance_method","text":"Set Intersection \u2014 Returns a new NodeSet containing nodes common to the two NodeSets.","title":"Class: Nokogiri::XML::NodeSet#& (node_set)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#--instance_method","text":"Difference - returns a new NodeSet that is a copy of this NodeSet, removing","title":"Class: Nokogiri::XML::NodeSet#- (node_set)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#%3D%3D-instance_method","text":"Equality \u2013 Two NodeSets are equal if the contain the same number of elements and if each element is equal to the corresponding element in the other NodeSet","title":"Class: Nokogiri::XML::NodeSet#== (other)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#%3E-instance_method","text":"Search this NodeSet's nodes' immediate children using CSS selector selector","title":"Class: Nokogiri::XML::NodeSet#> (selector)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#%5B%5D-instance_method","text":"start, length -> NodeSet or nil range -> NodeSet or nil Element reference - returns the node at index , or returns a NodeSet containing nodes starting at start and continuing for length elements, or returns a NodeSet containing nodes specified by range . Negative indices count backward from the end of the node_set (-1 is the last node). Returns nil if the index (or start ) are out of range.","title":"Class: Nokogiri::XML::NodeSet#[] (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#add_class-instance_method","text":"Add the class attribute name to all Node objects in the NodeSet. See Nokogiri::XML::Node#add_class for more information.","title":"Class: Nokogiri::XML::NodeSet#add_class (name)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#after-instance_method","text":"Insert datum after the last Node in this NodeSet","title":"Class: Nokogiri::XML::NodeSet#after (datum)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#append_class-instance_method","text":"Append the class attribute name to all Node objects in the NodeSet. See Nokogiri::XML::Node#append_class for more information.","title":"Class: Nokogiri::XML::NodeSet#append_class (name)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#at-instance_method","text":"call-seq: search *paths, [namespace-bindings, xpath-variable-bindings, custom-handler-class] Search this object for paths , and return only the first result. paths must be one or more XPath or CSS queries. See Searchable#search for more information. Or, if passed an integer, index into the NodeSet:","title":"Class: Nokogiri::XML::NodeSet#at (*args)  \u21d2 Object  Also known as: %  "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#at_css-instance_method","text":"call-seq: css *rules, [namespace-bindings, custom-pseudo-class] Search this object for CSS rules , and return only the first match. rules must be one or more CSS selectors. See Searchable#css for more information.","title":"Class: Nokogiri::XML::NodeSet#at_css (*args)  \u21d2 Object  Originally defined in module Searchable  "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#at_xpath-instance_method","text":"call-seq: xpath *paths, [namespace-bindings, variable-bindings, custom-handler-class] Search this node for XPath paths , and return only the first match. paths must be one or more XPath queries. See Searchable#xpath for more information.","title":"Class: Nokogiri::XML::NodeSet#at_xpath (*args)  \u21d2 Object  Originally defined in module Searchable  "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#attr-instance_method","text":"Set attributes on each Node in the NodeSet, or get an attribute from the first Node in the NodeSet. To get an attribute from the first Node in a NodeSet: Note that an empty NodeSet will return nil when #attr is called as a getter. To set an attribute on each node, key can either be an attribute name, or a Hash of attribute names and values. When called as a setter, #attr returns the NodeSet. If key is an attribute name, then either value or block must be passed. If key is a Hash then attributes will be set for each key/value pair: If value is passed, it will be used as the attribute value for all nodes: If block is passed, it will be called on each Node object in the NodeSet and the return value used as the attribute value for that node:","title":"Class: Nokogiri::XML::NodeSet#attr (key, value = nil, &block)  \u21d2 Object  Also known as: set , attribute  "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#before-instance_method","text":"Insert datum before the first Node in this NodeSet","title":"Class: Nokogiri::XML::NodeSet#before (datum)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#children-instance_method","text":"Returns a new NodeSet containing all the children of all the nodes in the NodeSet","title":"Class: Nokogiri::XML::NodeSet#children \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#css-instance_method","text":"call-seq: css *rules, [namespace-bindings, custom-pseudo-class] Search this node set for CSS rules . rules must be one or more CSS selectors. For example: For more information see Nokogiri::XML::Searchable#css","title":"Class: Nokogiri::XML::NodeSet#css (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#delete-instance_method","text":"Delete node from the Nodeset, if it is a member. Returns the deleted node if found, otherwise returns nil.","title":"Class: Nokogiri::XML::NodeSet#delete (node)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#dup-instance_method","text":"Duplicate this NodeSet. Note that the Nodes contained in the NodeSet are not duplicated (similar to how Array and other Enumerable classes work).","title":"Class: Nokogiri::XML::NodeSet#dup \u21d2 Object  Also known as: clone  "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#each-instance_method","text":"Iterate over each node, yielding to block","title":"Class: Nokogiri::XML::NodeSet#each \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#empty%3F-instance_method","text":"Is this NodeSet empty? Returns: ( Boolean )","title":"Class: Nokogiri::XML::NodeSet#empty? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#filter-instance_method","text":"Filter this list for nodes that match expr","title":"Class: Nokogiri::XML::NodeSet#filter (expr)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#first-instance_method","text":"Get the first element of the NodeSet.","title":"Class: Nokogiri::XML::NodeSet#first (n = nil)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#include%3F-instance_method","text":"Returns true if any member of node set equals node . Returns: ( Boolean )","title":"Class: Nokogiri::XML::NodeSet#include? (node)  \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#index-instance_method","text":"Returns the index of the first node in self that is == to node or meets the given block. Returns nil if no match is found.","title":"Class: Nokogiri::XML::NodeSet#index (node = nil)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#inner_html-instance_method","text":"Get the inner html of all contained Node objects","title":"Class: Nokogiri::XML::NodeSet#inner_html (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#inner_text-instance_method","text":"Get the inner text of all contained Node objects Note: This joins the text of all Node objects in the NodeSet: Instead, if you want to return the text of all nodes in the NodeSet: See Nokogiri::XML::Node#content for more information.","title":"Class: Nokogiri::XML::NodeSet#inner_text \u21d2 Object  Also known as: text  "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#inspect-instance_method","text":"Return a nicely formated string representation","title":"Class: Nokogiri::XML::NodeSet#inspect \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#last-instance_method","text":"Get the last element of the NodeSet.","title":"Class: Nokogiri::XML::NodeSet#last \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#length-instance_method","text":"Get the length of the node set","title":"Class: Nokogiri::XML::NodeSet#length \u21d2 Object  Also known as: size  "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#pop-instance_method","text":"Removes the last element from set and returns it, or nil if the set is empty","title":"Class: Nokogiri::XML::NodeSet#pop \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#push-instance_method","text":"Append node to the NodeSet.","title":"Class: Nokogiri::XML::NodeSet#push (node)  \u21d2 Object  Also known as: <<  "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#remove_attr-instance_method","text":"Remove the attributed named name from all Node objects in the NodeSet","title":"Class: Nokogiri::XML::NodeSet#remove_attr (name)  \u21d2 Object  Also known as: remove_attribute  "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#remove_class-instance_method","text":"Remove the class attribute name from all Node objects in the NodeSet. See Nokogiri::XML::Node#remove_class for more information.","title":"Class: Nokogiri::XML::NodeSet#remove_class (name = nil)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#reverse-instance_method","text":"Returns a new NodeSet containing all the nodes in the NodeSet in reverse order","title":"Class: Nokogiri::XML::NodeSet#reverse \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#search-instance_method","text":"call-seq: search *paths, [namespace-bindings, xpath-variable-bindings, custom-handler-class] Search this object for paths . paths must be one or more XPath or CSS queries: A hash of namespace bindings may be appended: For XPath queries, a hash of variable bindings may also be appended to the namespace bindings. For example: Custom XPath functions and CSS pseudo-selectors may also be defined. To define custom functions create a class and implement the function you want to define. The first argument to the method will be the current matching NodeSet. Any other arguments are ones that you pass in. Note that this class may appear anywhere in the argument list. For example: See Searchable#xpath and Searchable#css for further usage help.","title":"Class: Nokogiri::XML::NodeSet#search (*args)  \u21d2 Object  Also known as: /   Originally defined in module Searchable  "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#shift-instance_method","text":"Returns the first element of the NodeSet and removes it. Returns nil if the set is empty.","title":"Class: Nokogiri::XML::NodeSet#shift \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#slice-instance_method","text":"start, length -> NodeSet or nil range -> NodeSet or nil Element reference - returns the node at index , or returns a NodeSet containing nodes starting at start and continuing for length elements, or returns a NodeSet containing nodes specified by range . Negative indices count backward from the end of the node_set (-1 is the last node). Returns nil if the index (or start ) are out of range.","title":"Class: Nokogiri::XML::NodeSet#slice (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#to_a-instance_method","text":"Return this list as an Array","title":"Class: Nokogiri::XML::NodeSet#to_a \u21d2 Object  Also known as: to_ary  "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#to_html-instance_method","text":"Convert this NodeSet to HTML","title":"Class: Nokogiri::XML::NodeSet#to_html (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#to_s-instance_method","text":"Convert this NodeSet to a string.","title":"Class: Nokogiri::XML::NodeSet#to_s \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#to_xhtml-instance_method","text":"Convert this NodeSet to XHTML","title":"Class: Nokogiri::XML::NodeSet#to_xhtml (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#to_xml-instance_method","text":"Convert this NodeSet to XML","title":"Class: Nokogiri::XML::NodeSet#to_xml (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#unlink-instance_method","text":"Unlink this NodeSet and all Node objects it contains from their current context.","title":"Class: Nokogiri::XML::NodeSet#unlink \u21d2 Object  Also known as: remove  "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#wrap-instance_method","text":"Wrap this NodeSet with html","title":"Class: Nokogiri::XML::NodeSet#wrap (html)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#xpath-instance_method","text":"call-seq: xpath *paths, [namespace-bindings, variable-bindings, custom-handler-class] Search this node set for XPath paths . paths must be one or more XPath queries. For more information see Nokogiri::XML::Searchable#xpath","title":"Class: Nokogiri::XML::NodeSet#xpath (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/NodeSet.html#%7C-instance_method","text":"Returns a new set built by merging the set and the elements of the given set. Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::NodeSet#| (node_set)  \u21d2 Object  Also known as: +  "},{"location":"rdoc/Nokogiri/XML/Notation.html","text":"","title":"Class: Nokogiri::XML::Notation"},{"location":"rdoc/Nokogiri/XML/Notation.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ANotation","text":"Inherits: Struct Object Struct Nokogiri::XML::Notation show all Defined in: lib/nokogiri/xml/notation.rb","title":"Class: Nokogiri::XML::Notation"},{"location":"rdoc/Nokogiri/XML/Notation.html#Instance%2BAttribute%2BSummary","text":"# name \u21d2 Object Returns the value of attribute name. # public_id \u21d2 Object Returns the value of attribute public_id. # system_id \u21d2 Object Returns the value of attribute system_id.","title":"Class: Nokogiri::XML::Notation / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/XML/Notation.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::XML::Notation / Instance Attribute Details"},{"location":"rdoc/Nokogiri/XML/Notation.html#name-instance_method","text":"Returns the value of attribute name Returns: ( Object ) \u2014 the current value of name","title":"Class: Nokogiri::XML::Notation#name \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Notation.html#public_id-instance_method","text":"Returns the value of attribute public_id Returns: ( Object ) \u2014 the current value of public_id","title":"Class: Nokogiri::XML::Notation#public_id \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Notation.html#system_id-instance_method","text":"Returns the value of attribute system_id Returns: ( Object ) \u2014 the current value of system_id Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::Notation#system_id \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/PP.html","text":"","title":"Module: Nokogiri::XML::PP"},{"location":"rdoc/Nokogiri/XML/PP.html#Module%253A%2BNokogiri%253A%253AXML%253A%253APP","text":"Defined in: lib/nokogiri/xml/pp/node.rb , lib/nokogiri/xml/pp/character_data.rb","title":"Module: Nokogiri::XML::PP"},{"location":"rdoc/Nokogiri/XML/PP.html#Defined%2BUnder%2BNamespace","text":"Modules: CharacterData , Node Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::XML::PP / Defined Under Namespace"},{"location":"rdoc/Nokogiri/XML/ParseOptions.html","text":"","title":"Class: Nokogiri::XML::ParseOptions"},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#Class%253A%2BNokogiri%253A%253AXML%253A%253AParseOptions","text":"Inherits: Object Object Nokogiri::XML::ParseOptions show all Defined in: lib/nokogiri/xml/parse_options.rb","title":"Class: Nokogiri::XML::ParseOptions"},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#Overview","text":"Parse options for passing to Nokogiri.XML or Nokogiri.HTML","title":"Class: Nokogiri::XML::ParseOptions / Overview"},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#label-Building%2Bcombinations%2Bof%2Bparse%2Boptions","text":"You can build your own combinations of these parse options by using any of the following methods: Note : All examples attempt to set the RECOVER & NOENT options. Ruby's bitwise operators You can use the Ruby bitwise operators to set various combinations. Method chaining Every option has an equivalent method in lowercase. You can chain these methods together to set various combinations. Using Ruby Blocks You can also setup parse combinations in the block passed to Nokogiri.XML or Nokogiri.HTML","title":"Class: Nokogiri::XML::ParseOptions / Building combinations of parse options"},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#label-Removing%2Bparticular%2Bparse%2Boptions","text":"You can also remove options from an instance of ParseOptions dynamically. Every option has an equivalent no{option} method in lowercase. You can call these methods on an instance of ParseOptions to remove the option. Note that this is not available for STRICT .","title":"Class: Nokogiri::XML::ParseOptions / Removing particular parse options"},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#Constant%2BSummary","text":"STRICT = Strict parsing RECOVER = Recover from errors NOENT = Substitute entities DTDLOAD = Load external subsets DTDATTR = Default DTD attributes DTDVALID = validate with the DTD NOERROR = suppress error reports NOWARNING = suppress warning reports PEDANTIC = pedantic error reporting NOBLANKS = remove blank nodes SAX1 = use the SAX1 interface internally XINCLUDE = Implement XInclude substitution NONET = Forbid network access. Recommended for dealing with untrusted documents. NODICT = Do not reuse the context dictionary NSCLEAN = remove redundant namespaces declarations NOCDATA = merge CDATA as text nodes NOXINCNODE = do not generate XINCLUDE START/END nodes COMPACT = compact small text nodes; no modification of the tree allowed afterwards (will possibly crash if you try to modify the tree) OLD10 = parse using XML-1.0 before update 5 NOBASEFIX = do not fixup XINCLUDE xml:base uris HUGE = relax any hardcoded limit from the parser DEFAULT_XML = the default options used for parsing XML documents DEFAULT_XSLT = the default options used for parsing XSLT stylesheets DEFAULT_HTML = the default options used for parsing HTML documents DEFAULT_SCHEMA = the default options used for parsing XML schemas","title":"Class: Nokogiri::XML::ParseOptions / Constant Summary"},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#Instance%2BAttribute%2BSummary","text":"# options \u21d2 Object (also: #to_i) Returns the value of attribute options.","title":"Class: Nokogiri::XML::ParseOptions / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#Instance%2BMethod%2BSummary","text":"# == (other) \u21d2 Object # initialize (options = STRICT) \u21d2 ParseOptions constructor A new instance of ParseOptions. # inspect \u21d2 Object # strict \u21d2 Object # strict? \u21d2 Boolean","title":"Class: Nokogiri::XML::ParseOptions / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::XML::ParseOptions / Constructor Details"},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#initialize-instance_method","text":"Returns a new instance of ParseOptions.","title":"Class: Nokogiri::XML::ParseOptions#initialize (options = STRICT)  \u21d2 ParseOptions "},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::XML::ParseOptions / Instance Attribute Details"},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#options-instance_method","text":"Returns the value of attribute options.","title":"Class: Nokogiri::XML::ParseOptions#options \u21d2 Object  Also known as: to_i  "},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::ParseOptions / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#%3D%3D-instance_method","text":"","title":"Class: Nokogiri::XML::ParseOptions#== (other)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#inspect-instance_method","text":"","title":"Class: Nokogiri::XML::ParseOptions#inspect \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#strict-instance_method","text":"","title":"Class: Nokogiri::XML::ParseOptions#strict \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/ParseOptions.html#strict%3F-instance_method","text":"Returns: ( Boolean ) Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::ParseOptions#strict? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/ProcessingInstruction.html","text":"","title":"Class: Nokogiri::XML::ProcessingInstruction"},{"location":"rdoc/Nokogiri/XML/ProcessingInstruction.html#Class%253A%2BNokogiri%253A%253AXML%253A%253AProcessingInstruction","text":"Inherits: Node Object Node Nokogiri::XML::ProcessingInstruction show all Defined in: lib/nokogiri/xml/processing_instruction.rb , ext/nokogiri/xml_processing_instruction.c","title":"Class: Nokogiri::XML::ProcessingInstruction"},{"location":"rdoc/Nokogiri/XML/ProcessingInstruction.html#Class%2BMethod%2BSummary","text":". new (document, name, content) \u21d2 Object Create a new ProcessingInstruction element on the document with name and content .","title":"Class: Nokogiri::XML::ProcessingInstruction / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/ProcessingInstruction.html#Instance%2BMethod%2BSummary","text":"# initialize (document, name, content) \u21d2 ProcessingInstruction constructor A new instance of ProcessingInstruction.","title":"Class: Nokogiri::XML::ProcessingInstruction / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/ProcessingInstruction.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::XML::ProcessingInstruction / Constructor Details"},{"location":"rdoc/Nokogiri/XML/ProcessingInstruction.html#initialize-instance_method","text":"Returns a new instance of ProcessingInstruction.","title":"Class: Nokogiri::XML::ProcessingInstruction#initialize (document, name, content)  \u21d2 ProcessingInstruction "},{"location":"rdoc/Nokogiri/XML/ProcessingInstruction.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::ProcessingInstruction / Class Method Details"},{"location":"rdoc/Nokogiri/XML/ProcessingInstruction.html#new-class_method","text":"Create a new ProcessingInstruction element on the document with name and content Generated on Mon Sep 27 15:13:37 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::ProcessingInstruction#new (document, name, content)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html","text":"","title":"Class: Nokogiri::XML::Reader"},{"location":"rdoc/Nokogiri/XML/Reader.html#Class%253A%2BNokogiri%253A%253AXML%253A%253AReader","text":"Inherits: Object Object Nokogiri::XML::Reader show all Includes: Enumerable Defined in: lib/nokogiri/xml/reader.rb , ext/nokogiri/xml_reader.c","title":"Class: Nokogiri::XML::Reader"},{"location":"rdoc/Nokogiri/XML/Reader.html#Overview","text":"Nokogiri::XML::Reader parses an XML document similar to the way a cursor would move. The Reader is given an XML document, and yields nodes to an each block. Here is an example of usage: Note that Nokogiri::XML::Reader#each can only be called once!! Once the cursor moves through the entire document, you must parse the document again. So make sure that you capture any information you need during the first iteration. The Reader parser is good for when you need the speed of a SAX parser, but do not want to write a Document handler.","title":"Class: Nokogiri::XML::Reader / Overview"},{"location":"rdoc/Nokogiri/XML/Reader.html#Constant%2BSummary","text":"TYPE_NONE = TYPE_ELEMENT = Element node type TYPE_ATTRIBUTE = Attribute node type TYPE_TEXT = Text node type TYPE_CDATA = CDATA node type TYPE_ENTITY_REFERENCE = Entity Reference node type TYPE_ENTITY = Entity node type TYPE_PROCESSING_INSTRUCTION = PI node type TYPE_COMMENT = Comment node type TYPE_DOCUMENT = Document node type TYPE_DOCUMENT_TYPE = Document Type node type TYPE_DOCUMENT_FRAGMENT = Document Fragment node type TYPE_NOTATION = Notation node type TYPE_WHITESPACE = Whitespace node type TYPE_SIGNIFICANT_WHITESPACE = Significant Whitespace node type TYPE_END_ELEMENT = Element end node type TYPE_END_ENTITY = Entity end node type TYPE_XML_DECLARATION = XML Declaration node type","title":"Class: Nokogiri::XML::Reader / Constant Summary"},{"location":"rdoc/Nokogiri/XML/Reader.html#Instance%2BAttribute%2BSummary","text":"# encoding \u21d2 Object readonly The encoding for the document. # errors \u21d2 Object A list of errors encountered while parsing. # source \u21d2 Object readonly The XML source.","title":"Class: Nokogiri::XML::Reader / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/XML/Reader.html#Class%2BMethod%2BSummary","text":". from_io (io, url = nil, encoding = nil, options = 0) \u21d2 Object Create a new reader that parses io . . from_memory (string, url = nil, encoding = nil, options = 0) \u21d2 Object Create a new reader that parses string .","title":"Class: Nokogiri::XML::Reader / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/Reader.html#Instance%2BMethod%2BSummary","text":"# attribute (name) \u21d2 Object Get the value of attribute named name . # attribute_at (index) \u21d2 Object Get the value of attribute at index . # attribute_count \u21d2 Object Get the number of attributes for the current node. # attribute_nodes \u21d2 Array<Nokogiri::XML::Attr> Get the attributes of the current node as an Array of Attr. # attributes \u21d2 Hash<String, String> Get the attributes of the current node as a Hash. # attributes? \u21d2 Boolean Does this node have attributes?. # base_uri \u21d2 Object base_uri. # default? \u21d2 Boolean Was an attribute generated from the default value in the DTD or schema?. # depth \u21d2 Object Get the depth of the node. # each \u21d2 Object Move the cursor through the document yielding the cursor to the block. # empty_element? (#) \u21d2 Boolean (also: #self_closing?) Returns true if the current node is empty, otherwise false. # inner_xml \u21d2 Object Read the contents of the current node, including child nodes and markup. # lang \u21d2 Object Get the xml:lang scope within which the node resides. # local_name \u21d2 Object Get the local name of the node. # name \u21d2 Object Get the name of the node. # namespace_uri \u21d2 Object Get the URI defining the namespace associated with the node. # namespaces \u21d2 Object Get a hash of namespaces for this Node. # node_type \u21d2 Object Get the type of readers current node. # outer_xml \u21d2 Object Read the current node and its contents, including child nodes and markup. # prefix \u21d2 Object Get the shorthand reference to the namespace associated with the node. # read \u21d2 Object Move the Reader forward through the XML document. # state \u21d2 Object Get the state of the reader. # value \u21d2 Object Get the text value of the node if present. # value? \u21d2 Boolean Does this node have a text value?. # xml_version \u21d2 Object Get the XML version of the document being read.","title":"Class: Nokogiri::XML::Reader / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/Reader.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::XML::Reader / Instance Attribute Details"},{"location":"rdoc/Nokogiri/XML/Reader.html#encoding-instance_method","text":"The encoding for the document","title":"Class: Nokogiri::XML::Reader#encoding \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/XML/Reader.html#errors-instance_method","text":"A list of errors encountered while parsing","title":"Class: Nokogiri::XML::Reader#errors \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#source-instance_method","text":"The XML source","title":"Class: Nokogiri::XML::Reader#source \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/XML/Reader.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Reader / Class Method Details"},{"location":"rdoc/Nokogiri/XML/Reader.html#from_io-class_method","text":"Create a new reader that parses io","title":"Class: Nokogiri::XML::Reader#from_io (io, url = nil, encoding = nil, options = 0)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#from_memory-class_method","text":"Create a new reader that parses string","title":"Class: Nokogiri::XML::Reader#from_memory (string, url = nil, encoding = nil, options = 0)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Reader / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/Reader.html#attribute-instance_method","text":"Get the value of attribute named name","title":"Class: Nokogiri::XML::Reader#attribute (name)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#attribute_at-instance_method","text":"Get the value of attribute at index","title":"Class: Nokogiri::XML::Reader#attribute_at (index)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#attribute_count-instance_method","text":"Get the number of attributes for the current node","title":"Class: Nokogiri::XML::Reader#attribute_count \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#attribute_nodes-instance_method","text":"Get the attributes of the current node as an Array of Attr Returns: ( Array< Nokogiri::XML::Attr > )","title":"Class: Nokogiri::XML::Reader#attribute_nodes \u21d2 Array< Nokogiri::XML::Attr > "},{"location":"rdoc/Nokogiri/XML/Reader.html#attributes-instance_method","text":"Get the attributes of the current node as a Hash Returns: ( Hash<String, String> ) \u2014 Attribute names and values","title":"Class: Nokogiri::XML::Reader#attributes \u21d2 Hash<String, String> "},{"location":"rdoc/Nokogiri/XML/Reader.html#attributes%3F-instance_method","text":"Does this node have attributes? Returns: ( Boolean )","title":"Class: Nokogiri::XML::Reader#attributes? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Reader.html#base_uri-instance_method","text":"base_uri Get the xml:base of the node","title":"Class: Nokogiri::XML::Reader#base_uri \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#default%3F-instance_method","text":"Was an attribute generated from the default value in the DTD or schema? Returns: ( Boolean )","title":"Class: Nokogiri::XML::Reader#default? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Reader.html#depth-instance_method","text":"Get the depth of the node","title":"Class: Nokogiri::XML::Reader#depth \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#each-instance_method","text":"Move the cursor through the document yielding the cursor to the block","title":"Class: Nokogiri::XML::Reader#each \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#empty_element%3F-instance_method","text":"Returns true if the current node is empty, otherwise false. Returns: ( Boolean )","title":"Class: Nokogiri::XML::Reader#empty_element? (#)  \u21d2 Boolean  Also known as: self_closing?  "},{"location":"rdoc/Nokogiri/XML/Reader.html#inner_xml-instance_method","text":"Read the contents of the current node, including child nodes and markup. Returns a utf-8 encoded string.","title":"Class: Nokogiri::XML::Reader#inner_xml \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#lang-instance_method","text":"Get the xml:lang scope within which the node resides.","title":"Class: Nokogiri::XML::Reader#lang \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#local_name-instance_method","text":"Get the local name of the node","title":"Class: Nokogiri::XML::Reader#local_name \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#name-instance_method","text":"Get the name of the node. Returns a utf-8 encoded string.","title":"Class: Nokogiri::XML::Reader#name \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#namespace_uri-instance_method","text":"Get the URI defining the namespace associated with the node","title":"Class: Nokogiri::XML::Reader#namespace_uri \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#namespaces-instance_method","text":"Get a hash of namespaces for this Node","title":"Class: Nokogiri::XML::Reader#namespaces \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#node_type-instance_method","text":"Get the type of readers current node","title":"Class: Nokogiri::XML::Reader#node_type \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#outer_xml-instance_method","text":"Read the current node and its contents, including child nodes and markup. Returns a utf-8 encoded string.","title":"Class: Nokogiri::XML::Reader#outer_xml \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#prefix-instance_method","text":"Get the shorthand reference to the namespace associated with the node.","title":"Class: Nokogiri::XML::Reader#prefix \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#read-instance_method","text":"Move the Reader forward through the XML document.","title":"Class: Nokogiri::XML::Reader#read \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#state-instance_method","text":"Get the state of the reader","title":"Class: Nokogiri::XML::Reader#state \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#value-instance_method","text":"Get the text value of the node if present. Returns a utf-8 encoded string.","title":"Class: Nokogiri::XML::Reader#value \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Reader.html#value%3F-instance_method","text":"Does this node have a text value? Returns: ( Boolean )","title":"Class: Nokogiri::XML::Reader#value? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Reader.html#xml_version-instance_method","text":"Get the XML version of the document being read Generated on Mon Sep 27 15:13:34 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::Reader#xml_version \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/RelaxNG.html","text":"","title":"Class: Nokogiri::XML::RelaxNG"},{"location":"rdoc/Nokogiri/XML/RelaxNG.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ARelaxNG","text":"Inherits: Schema Object Schema Nokogiri::XML::RelaxNG show all Defined in: lib/nokogiri/xml/relax_ng.rb , ext/nokogiri/xml_relax_ng.c","title":"Class: Nokogiri::XML::RelaxNG"},{"location":"rdoc/Nokogiri/XML/RelaxNG.html#Overview","text":"Nokogiri::XML::RelaxNG is used for validating XML against a RelaxNG schema.","title":"Class: Nokogiri::XML::RelaxNG / Overview"},{"location":"rdoc/Nokogiri/XML/RelaxNG.html#label-Synopsis","text":"Validate an XML document against a RelaxNG schema. Loop over the errors that are returned and print them out: The list of errors are Nokogiri::XML::SyntaxError objects. NOTE: RelaxNG input is always treated as TRUSTED documents, meaning that they will cause the underlying parsing libraries to access network resources. This is counter to Nokogiri's \u201cuntrusted by default\u201d security policy, but is a limitation of the underlying libraries.","title":"Class: Nokogiri::XML::RelaxNG / Synopsis"},{"location":"rdoc/Nokogiri/XML/RelaxNG.html#Class%2BMethod%2BSummary","text":". from_document (doc) \u21d2 Object Create a new RelaxNG schema from the Nokogiri::XML::Document doc . . read_memory (string) \u21d2 Object Create a new RelaxNG from the contents of string .","title":"Class: Nokogiri::XML::RelaxNG / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/RelaxNG.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::RelaxNG / Class Method Details"},{"location":"rdoc/Nokogiri/XML/RelaxNG.html#from_document-class_method","text":"Create a new RelaxNG schema from the Nokogiri::XML::Document doc","title":"Class: Nokogiri::XML::RelaxNG#from_document (doc)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/RelaxNG.html#read_memory-class_method","text":"Create a new RelaxNG from the contents of string Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::RelaxNG#read_memory (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX.html","text":"","title":"Module: Nokogiri::XML::SAX"},{"location":"rdoc/Nokogiri/XML/SAX.html#Module%253A%2BNokogiri%253A%253AXML%253A%253ASAX","text":"Defined in: lib/nokogiri/xml/sax/document.rb , lib/nokogiri/xml/sax/parser.rb, lib/nokogiri/xml/sax/push_parser.rb, lib/nokogiri/xml/sax/parser_context.rb, ext/nokogiri/nokogiri.c","title":"Module: Nokogiri::XML::SAX"},{"location":"rdoc/Nokogiri/XML/SAX.html#Overview","text":"SAX Parsers are event driven parsers. Nokogiri provides two different event based parsers when dealing with XML. If you want to do SAX style parsing using HTML, check out Nokogiri::HTML4::SAX. The basic way a SAX style parser works is by creating a parser, telling the parser about the events we're interested in, then giving the parser some XML to process. The parser will notify you when it encounters events you said you would like to know about. To register for events, you simply subclass Nokogiri::XML::SAX::Document, and implement the methods for which you would like notification. For example, if I want to be notified when a document ends, and when an element starts, I would write a class like this: Then I would instantiate a SAX parser with this document, and feed the parser some XML Now my document handler will be called when each node starts, and when then document ends. To see what kinds of events are available, take a look at Nokogiri::XML::SAX::Document. Two SAX parsers for XML are available, a parser that reads from a string or IO object as it feels necessary, and a parser that lets you spoon feed it XML. If you want to let Nokogiri deal with reading your XML, use the Nokogiri::XML::SAX::Parser. If you want to have fine grain control over the XML input, use the Nokogiri::XML::SAX::PushParser.","title":"Module: Nokogiri::XML::SAX / Overview"},{"location":"rdoc/Nokogiri/XML/SAX.html#Defined%2BUnder%2BNamespace","text":"Classes: Document , Parser , ParserContext , PushParser Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::XML::SAX / Defined Under Namespace"},{"location":"rdoc/Nokogiri/XML/Schema.html","text":"","title":"Class: Nokogiri::XML::Schema"},{"location":"rdoc/Nokogiri/XML/Schema.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ASchema","text":"Inherits: Object Object Nokogiri::XML::Schema show all Defined in: lib/nokogiri/xml/schema.rb , ext/nokogiri/xml_schema.c","title":"Class: Nokogiri::XML::Schema"},{"location":"rdoc/Nokogiri/XML/Schema.html#Overview","text":"Nokogiri::XML::Schema is used for validating XML against a schema (usually from an xsd file).","title":"Class: Nokogiri::XML::Schema / Overview"},{"location":"rdoc/Nokogiri/XML/Schema.html#label-Synopsis","text":"Validate an XML document against a Schema. Loop over the errors that are returned and print them out: The list of errors are Nokogiri::XML::SyntaxError objects. NOTE: As of v1.11.0, Schema treats inputs as UNTRUSTED by default, and so external entities are not resolved from the network (`http://` or `ftp://`). Previously, parsing treated documents as \u201ctrusted\u201d by default which was counter to Nokogiri's \u201cuntrusted by default\u201d security policy. If a document is trusted, then the caller may turn off the NONET option via the ParseOptions to re-enable external entity resolution over a network connection.","title":"Class: Nokogiri::XML::Schema / Synopsis"},{"location":"rdoc/Nokogiri/XML/Schema.html#Direct%2BKnown%2BSubclasses","text":"RelaxNG","title":"Class: Nokogiri::XML::Schema / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/XML/Schema.html#Instance%2BAttribute%2BSummary","text":"# errors \u21d2 Object Errors while parsing the schema file. # parse_options \u21d2 Object The Nokogiri::XML::ParseOptions used to parse the schema.","title":"Class: Nokogiri::XML::Schema / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/XML/Schema.html#Class%2BMethod%2BSummary","text":". from_document (doc) \u21d2 Object Create a new Schema from the Nokogiri::XML::Document doc . . new (string_or_io, options = ParseOptions::DEFAULT_SCHEMA) \u21d2 Object Create a new Nokogiri::XML::Schema object using a string_or_io object. . read_memory (string) \u21d2 Object Create a new Schema from the contents of string .","title":"Class: Nokogiri::XML::Schema / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/Schema.html#Instance%2BMethod%2BSummary","text":"# valid? (thing) \u21d2 Boolean Returns true if thing is a valid Nokogiri::XML::Document or file. # validate (thing) \u21d2 Object Validate thing against this schema.","title":"Class: Nokogiri::XML::Schema / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/Schema.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::XML::Schema / Instance Attribute Details"},{"location":"rdoc/Nokogiri/XML/Schema.html#errors-instance_method","text":"Errors while parsing the schema file","title":"Class: Nokogiri::XML::Schema#errors \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Schema.html#parse_options-instance_method","text":"The Nokogiri::XML::ParseOptions used to parse the schema","title":"Class: Nokogiri::XML::Schema#parse_options \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Schema.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Schema / Class Method Details"},{"location":"rdoc/Nokogiri/XML/Schema.html#from_document-class_method","text":"Create a new Schema from the Nokogiri::XML::Document doc","title":"Class: Nokogiri::XML::Schema#from_document (doc)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Schema.html#new-class_method","text":"Create a new Nokogiri::XML::Schema object using a string_or_io object.","title":"Class: Nokogiri::XML::Schema#new (string_or_io, options = ParseOptions::DEFAULT_SCHEMA)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Schema.html#read_memory-class_method","text":"Create a new Schema from the contents of string","title":"Class: Nokogiri::XML::Schema#read_memory (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Schema.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Schema / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/Schema.html#valid%3F-instance_method","text":"Returns true if thing is a valid Nokogiri::XML::Document or file. Returns: ( Boolean )","title":"Class: Nokogiri::XML::Schema#valid? (thing)  \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Schema.html#validate-instance_method","text":"Validate thing against this schema. thing can be a Nokogiri::XML::Document object, or a filename. An Array of Nokogiri::XML::SyntaxError objects found while validating the thing is returned. Generated on Mon Sep 27 15:13:34 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::Schema#validate (thing)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Searchable.html","text":"","title":"Module: Nokogiri::XML::Searchable"},{"location":"rdoc/Nokogiri/XML/Searchable.html#Module%253A%2BNokogiri%253A%253AXML%253A%253ASearchable","text":"Included in: Node , NodeSet Defined in: lib/nokogiri/xml/searchable.rb","title":"Module: Nokogiri::XML::Searchable"},{"location":"rdoc/Nokogiri/XML/Searchable.html#Overview","text":"The Searchable module declares the interface used for searching your DOM.","title":"Module: Nokogiri::XML::Searchable / Overview"},{"location":"rdoc/Nokogiri/XML/Searchable.html#Constant%2BSummary","text":"LOOKS_LIKE_XPATH = Regular expression used by Searchable#search to determine if a query string is CSS or XPath","title":"Module: Nokogiri::XML::Searchable / Constant Summary"},{"location":"rdoc/Nokogiri/XML/Searchable.html#Searching%2Bvia%2BXPath%2Bor%2BCSS%2BQueries","text":"# at (*args) \u21d2 Object (also: #%) call-seq: search *paths, [namespace-bindings, xpath-variable-bindings, custom-handler-class]. # at_css (*args) \u21d2 Object call-seq: css *rules, [namespace-bindings, custom-pseudo-class]. # at_xpath (*args) \u21d2 Object call-seq: xpath *paths, [namespace-bindings, variable-bindings, custom-handler-class]. # css (*args) \u21d2 Object call-seq: css *rules, [namespace-bindings, custom-pseudo-class]. # search (*args) \u21d2 Object (also: #/) call-seq: search *paths, [namespace-bindings, xpath-variable-bindings, custom-handler-class]. # xpath (*args) \u21d2 Object call-seq: xpath *paths, [namespace-bindings, variable-bindings, custom-handler-class].","title":"Module: Nokogiri::XML::Searchable / Searching via XPath or CSS Queries"},{"location":"rdoc/Nokogiri/XML/Searchable.html#Instance%2BMethod%2BDetails","text":"","title":"Module: Nokogiri::XML::Searchable / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/Searchable.html#at-instance_method","text":"call-seq: search *paths, [namespace-bindings, xpath-variable-bindings, custom-handler-class] Search this object for paths , and return only the first result. paths must be one or more XPath or CSS queries. See Searchable#search for more information.","title":"Module: Nokogiri::XML::Searchable#at (*args)  \u21d2 Object  Also known as: %  "},{"location":"rdoc/Nokogiri/XML/Searchable.html#at_css-instance_method","text":"call-seq: css *rules, [namespace-bindings, custom-pseudo-class] Search this object for CSS rules , and return only the first match. rules must be one or more CSS selectors. See Searchable#css for more information.","title":"Module: Nokogiri::XML::Searchable#at_css (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Searchable.html#at_xpath-instance_method","text":"call-seq: xpath *paths, [namespace-bindings, variable-bindings, custom-handler-class] Search this node for XPath paths , and return only the first match. paths must be one or more XPath queries. See Searchable#xpath for more information.","title":"Module: Nokogiri::XML::Searchable#at_xpath (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Searchable.html#css-instance_method","text":"call-seq: css *rules, [namespace-bindings, custom-pseudo-class] Search this object for CSS rules . rules must be one or more CSS selectors. For example: A hash of namespace bindings may be appended. For example: Custom CSS pseudo classes may also be defined. To define custom pseudo classes, create a class and implement the custom pseudo class you want defined. The first argument to the method will be the current matching NodeSet. Any other arguments are ones that you pass in. For example: Note that the CSS query string is case-sensitive with regards to your document type. That is, if you're looking for \u201cH1\u201d in an HTML document, you'll never find anything, since HTML tags will match only lowercase CSS queries. However, \u201cH1\u201d might be found in an XML document, where tags names are case-sensitive (e.g., \u201cH1\u201d is distinct from \u201ch1\u201d).","title":"Module: Nokogiri::XML::Searchable#css (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Searchable.html#search-instance_method","text":"call-seq: search *paths, [namespace-bindings, xpath-variable-bindings, custom-handler-class] Search this object for paths . paths must be one or more XPath or CSS queries: A hash of namespace bindings may be appended: For XPath queries, a hash of variable bindings may also be appended to the namespace bindings. For example: Custom XPath functions and CSS pseudo-selectors may also be defined. To define custom functions create a class and implement the function you want to define. The first argument to the method will be the current matching NodeSet. Any other arguments are ones that you pass in. Note that this class may appear anywhere in the argument list. For example: See Searchable#xpath and Searchable#css for further usage help.","title":"Module: Nokogiri::XML::Searchable#search (*args)  \u21d2 Object  Also known as: /  "},{"location":"rdoc/Nokogiri/XML/Searchable.html#xpath-instance_method","text":"call-seq: xpath *paths, [namespace-bindings, variable-bindings, custom-handler-class] Search this node for XPath paths . paths must be one or more XPath queries. A hash of namespace bindings may be appended. For example: A hash of variable bindings may also be appended to the namespace bindings. For example: Custom XPath functions may also be defined. To define custom functions create a class and implement the function you want to define. The first argument to the method will be the current matching NodeSet. Any other arguments are ones that you pass in. Note that this class may appear anywhere in the argument list. For example: Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::XML::Searchable#xpath (*args)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html","text":"","title":"Exception: Nokogiri::XML::SyntaxError"},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#Exception%253A%2BNokogiri%253A%253AXML%253A%253ASyntaxError","text":"Inherits: SyntaxError Object StandardError SyntaxError Nokogiri::XML::SyntaxError show all Defined in: lib/nokogiri/xml/syntax_error.rb , ext/nokogiri/xml_syntax_error.c","title":"Exception: Nokogiri::XML::SyntaxError"},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#Overview","text":"This class provides information about XML SyntaxErrors. These exceptions are typically stored on Nokogiri::XML::Document#errors.","title":"Exception: Nokogiri::XML::SyntaxError / Overview"},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#Instance%2BAttribute%2BSummary","text":"# code \u21d2 Object readonly Returns the value of attribute code. # column \u21d2 Object readonly Returns the value of attribute column. # domain \u21d2 Object readonly Returns the value of attribute domain. # file \u21d2 Object readonly Returns the value of attribute file. # int1 \u21d2 Object readonly Returns the value of attribute int1. # level \u21d2 Object readonly Returns the value of attribute level. # line \u21d2 Object readonly Returns the value of attribute line. # str1 \u21d2 Object readonly Returns the value of attribute str1. # str2 \u21d2 Object readonly Returns the value of attribute str2. # str3 \u21d2 Object readonly Returns the value of attribute str3.","title":"Exception: Nokogiri::XML::SyntaxError / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#Instance%2BMethod%2BSummary","text":"# error? \u21d2 Boolean return true if this is an error. # fatal? \u21d2 Boolean return true if this error is fatal. # none? \u21d2 Boolean return true if this is a non error. # to_s \u21d2 Object # warning? \u21d2 Boolean return true if this is a warning.","title":"Exception: Nokogiri::XML::SyntaxError / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#Instance%2BAttribute%2BDetails","text":"","title":"Exception: Nokogiri::XML::SyntaxError / Instance Attribute Details"},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#code-instance_method","text":"Returns the value of attribute code.","title":"Exception: Nokogiri::XML::SyntaxError#code \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#column-instance_method","text":"Returns the value of attribute column.","title":"Exception: Nokogiri::XML::SyntaxError#column \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#domain-instance_method","text":"Returns the value of attribute domain.","title":"Exception: Nokogiri::XML::SyntaxError#domain \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#file-instance_method","text":"Returns the value of attribute file.","title":"Exception: Nokogiri::XML::SyntaxError#file \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#int1-instance_method","text":"Returns the value of attribute int1.","title":"Exception: Nokogiri::XML::SyntaxError#int1 \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#level-instance_method","text":"Returns the value of attribute level.","title":"Exception: Nokogiri::XML::SyntaxError#level \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#line-instance_method","text":"Returns the value of attribute line.","title":"Exception: Nokogiri::XML::SyntaxError#line \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#str1-instance_method","text":"Returns the value of attribute str1.","title":"Exception: Nokogiri::XML::SyntaxError#str1 \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#str2-instance_method","text":"Returns the value of attribute str2.","title":"Exception: Nokogiri::XML::SyntaxError#str2 \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#str3-instance_method","text":"Returns the value of attribute str3.","title":"Exception: Nokogiri::XML::SyntaxError#str3 \u21d2 Object  (readonly) "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#Instance%2BMethod%2BDetails","text":"","title":"Exception: Nokogiri::XML::SyntaxError / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#error%3F-instance_method","text":"return true if this is an error Returns: ( Boolean )","title":"Exception: Nokogiri::XML::SyntaxError#error? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#fatal%3F-instance_method","text":"return true if this error is fatal Returns: ( Boolean )","title":"Exception: Nokogiri::XML::SyntaxError#fatal? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#none%3F-instance_method","text":"return true if this is a non error Returns: ( Boolean )","title":"Exception: Nokogiri::XML::SyntaxError#none? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#to_s-instance_method","text":"","title":"Exception: Nokogiri::XML::SyntaxError#to_s \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SyntaxError.html#warning%3F-instance_method","text":"return true if this is a warning Returns: ( Boolean ) Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Exception: Nokogiri::XML::SyntaxError#warning? \u21d2 Boolean "},{"location":"rdoc/Nokogiri/XML/Text.html","text":"","title":"Class: Nokogiri::XML::Text"},{"location":"rdoc/Nokogiri/XML/Text.html#Class%253A%2BNokogiri%253A%253AXML%253A%253AText","text":"Inherits: CharacterData Object NokogiriXmlNode CharacterData Nokogiri::XML::Text show all Defined in: lib/nokogiri/xml/text.rb , ext/nokogiri/xml_text.c","title":"Class: Nokogiri::XML::Text"},{"location":"rdoc/Nokogiri/XML/Text.html#Direct%2BKnown%2BSubclasses","text":"CDATA","title":"Class: Nokogiri::XML::Text / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/XML/Text.html#Class%2BMethod%2BSummary","text":". new (content, document) \u21d2 Object Create a new Text element on the document with content .","title":"Class: Nokogiri::XML::Text / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/Text.html#Instance%2BMethod%2BSummary","text":"# content= (string) \u21d2 Object","title":"Class: Nokogiri::XML::Text / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/Text.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Text / Class Method Details"},{"location":"rdoc/Nokogiri/XML/Text.html#new-class_method","text":"Create a new Text element on the document with content","title":"Class: Nokogiri::XML::Text#new (content, document)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Text.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Text / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/Text.html#content%3D-instance_method","text":"Generated on Mon Sep 27 15:13:34 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::Text#content= (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/XPath.html","text":"","title":"Module: Nokogiri::XML::XPath"},{"location":"rdoc/Nokogiri/XML/XPath.html#Module%253A%2BNokogiri%253A%253AXML%253A%253AXPath","text":"Defined in: lib/nokogiri/xml/xpath.rb , lib/nokogiri/xml/xpath/syntax_error.rb, ext/nokogiri/nokogiri.c","title":"Module: Nokogiri::XML::XPath"},{"location":"rdoc/Nokogiri/XML/XPath.html#Defined%2BUnder%2BNamespace","text":"Classes: SyntaxError Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::XML::XPath / Defined Under Namespace"},{"location":"rdoc/Nokogiri/XML/XPathContext.html","text":"","title":"Class: Nokogiri::XML::XPathContext"},{"location":"rdoc/Nokogiri/XML/XPathContext.html#Class%253A%2BNokogiri%253A%253AXML%253A%253AXPathContext","text":"Inherits: Object Object Nokogiri::XML::XPathContext show all Defined in: lib/nokogiri/xml/xpath_context.rb , ext/nokogiri/xml_xpath_context.c","title":"Class: Nokogiri::XML::XPathContext"},{"location":"rdoc/Nokogiri/XML/XPathContext.html#Class%2BMethod%2BSummary","text":". new (node) \u21d2 Object Create a new XPathContext with node as the reference point.","title":"Class: Nokogiri::XML::XPathContext / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/XPathContext.html#Instance%2BMethod%2BSummary","text":"# evaluate (search_path, handler = nil) \u21d2 Object Evaluate the search_path returning an XML::XPath object. # register_namespaces (namespaces) \u21d2 Object Register namespaces in namespaces . # register_ns (prefix, uri) \u21d2 Object Register the namespace with prefix and uri . # register_variable (name, value) \u21d2 Object Register the variable name with value .","title":"Class: Nokogiri::XML::XPathContext / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/XPathContext.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::XPathContext / Class Method Details"},{"location":"rdoc/Nokogiri/XML/XPathContext.html#new-class_method","text":"Create a new XPathContext with node as the reference point.","title":"Class: Nokogiri::XML::XPathContext#new (node)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/XPathContext.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::XPathContext / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/XPathContext.html#evaluate-instance_method","text":"Evaluate the search_path returning an XML::XPath object.","title":"Class: Nokogiri::XML::XPathContext#evaluate (search_path, handler = nil)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/XPathContext.html#register_namespaces-instance_method","text":"Register namespaces in namespaces","title":"Class: Nokogiri::XML::XPathContext#register_namespaces (namespaces)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/XPathContext.html#register_ns-instance_method","text":"Register the namespace with prefix and uri .","title":"Class: Nokogiri::XML::XPathContext#register_ns (prefix, uri)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/XPathContext.html#register_variable-instance_method","text":"Register the variable name with value . Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::XPathContext#register_variable (name, value)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder/NodeBuilder.html","text":"","title":"Class: Nokogiri::XML::Builder::NodeBuilder"},{"location":"rdoc/Nokogiri/XML/Builder/NodeBuilder.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ABuilder%253A%253ANodeBuilder","text":"Inherits: Object Object Nokogiri::XML::Builder::NodeBuilder show all Defined in: lib/nokogiri/xml/builder.rb","title":"Class: Nokogiri::XML::Builder::NodeBuilder"},{"location":"rdoc/Nokogiri/XML/Builder/NodeBuilder.html#Overview","text":":nodoc:","title":"Class: Nokogiri::XML::Builder::NodeBuilder / Overview"},{"location":"rdoc/Nokogiri/XML/Builder/NodeBuilder.html#Instance%2BMethod%2BSummary","text":"# [] (k) \u21d2 Object # []= (k, v) \u21d2 Object # initialize (node, doc_builder) \u21d2 NodeBuilder constructor A new instance of NodeBuilder. # method_missing (method, *args, &block) \u21d2 Object","title":"Class: Nokogiri::XML::Builder::NodeBuilder / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/Builder/NodeBuilder.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::XML::Builder::NodeBuilder / Constructor Details"},{"location":"rdoc/Nokogiri/XML/Builder/NodeBuilder.html#initialize-instance_method","text":"Returns a new instance of NodeBuilder.","title":"Class: Nokogiri::XML::Builder::NodeBuilder#initialize (node, doc_builder)  \u21d2 NodeBuilder "},{"location":"rdoc/Nokogiri/XML/Builder/NodeBuilder.html#Dynamic%2BMethod%2BHandling","text":"This class handles dynamic methods through the method_missing method","title":"Class: Nokogiri::XML::Builder::NodeBuilder / Dynamic Method Handling"},{"location":"rdoc/Nokogiri/XML/Builder/NodeBuilder.html#method_missing-instance_method","text":"","title":"Class: Nokogiri::XML::Builder::NodeBuilder#method_missing (method, *args, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder/NodeBuilder.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::Builder::NodeBuilder / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/Builder/NodeBuilder.html#%5B%5D-instance_method","text":"","title":"Class: Nokogiri::XML::Builder::NodeBuilder#[] (k)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Builder/NodeBuilder.html#%5B%5D%3D-instance_method","text":"Generated on Mon Sep 27 15:13:34 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::Builder::NodeBuilder#[]= (k, v)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/Node/SaveOptions.html","text":"","title":"Class: Nokogiri::XML::Node::SaveOptions"},{"location":"rdoc/Nokogiri/XML/Node/SaveOptions.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ANode%253A%253ASaveOptions","text":"Inherits: Object Object Nokogiri::XML::Node::SaveOptions show all Defined in: lib/nokogiri/xml/node/save_options.rb","title":"Class: Nokogiri::XML::Node::SaveOptions"},{"location":"rdoc/Nokogiri/XML/Node/SaveOptions.html#Overview","text":"Save options for serializing nodes","title":"Class: Nokogiri::XML::Node::SaveOptions / Overview"},{"location":"rdoc/Nokogiri/XML/Node/SaveOptions.html#Constant%2BSummary","text":"FORMAT = Format serialized xml NO_DECLARATION = Do not include declarations NO_EMPTY_TAGS = Do not include empty tags NO_XHTML = Do not save XHTML AS_XHTML = Save as XHTML AS_XML = Save as XML AS_HTML = Save as HTML AS_BUILDER = Save builder created document DEFAULT_XML = the default for XML documents DEFAULT_HTML = the default for HTML document DEFAULT_XHTML = the default for XHTML document","title":"Class: Nokogiri::XML::Node::SaveOptions / Constant Summary"},{"location":"rdoc/Nokogiri/XML/Node/SaveOptions.html#Instance%2BAttribute%2BSummary","text":"# options \u21d2 Object (also: #to_i) readonly Integer representation of the SaveOptions.","title":"Class: Nokogiri::XML::Node::SaveOptions / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/XML/Node/SaveOptions.html#Instance%2BMethod%2BSummary","text":"# initialize (options = 0) \u21d2 SaveOptions constructor Create a new SaveOptions object with options .","title":"Class: Nokogiri::XML::Node::SaveOptions / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/Node/SaveOptions.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::XML::Node::SaveOptions / Constructor Details"},{"location":"rdoc/Nokogiri/XML/Node/SaveOptions.html#initialize-instance_method","text":"Create a new SaveOptions object with options","title":"Class: Nokogiri::XML::Node::SaveOptions#initialize (options = 0)  \u21d2 SaveOptions "},{"location":"rdoc/Nokogiri/XML/Node/SaveOptions.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::XML::Node::SaveOptions / Instance Attribute Details"},{"location":"rdoc/Nokogiri/XML/Node/SaveOptions.html#options-instance_method","text":"Integer representation of the SaveOptions Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::Node::SaveOptions#options \u21d2 Object  (readonly)  Also known as: to_i  "},{"location":"rdoc/Nokogiri/XML/PP/CharacterData.html","text":"","title":"Module: Nokogiri::XML::PP::CharacterData"},{"location":"rdoc/Nokogiri/XML/PP/CharacterData.html#Module%253A%2BNokogiri%253A%253AXML%253A%253APP%253A%253ACharacterData","text":"Included in: CharacterData Defined in: lib/nokogiri/xml/pp/character_data.rb","title":"Module: Nokogiri::XML::PP::CharacterData"},{"location":"rdoc/Nokogiri/XML/PP/CharacterData.html#Instance%2BMethod%2BSummary","text":"# inspect \u21d2 Object :nodoc:. # pretty_print (pp) \u21d2 Object :nodoc:.","title":"Module: Nokogiri::XML::PP::CharacterData / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/PP/CharacterData.html#Instance%2BMethod%2BDetails","text":"","title":"Module: Nokogiri::XML::PP::CharacterData / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/PP/CharacterData.html#inspect-instance_method","text":":nodoc:","title":"Module: Nokogiri::XML::PP::CharacterData#inspect \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/PP/CharacterData.html#pretty_print-instance_method","text":":nodoc: Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::XML::PP::CharacterData#pretty_print (pp)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/PP/Node.html","text":"","title":"Module: Nokogiri::XML::PP::Node"},{"location":"rdoc/Nokogiri/XML/PP/Node.html#Module%253A%2BNokogiri%253A%253AXML%253A%253APP%253A%253ANode","text":"Included in: Namespace , Node Defined in: lib/nokogiri/xml/pp/node.rb","title":"Module: Nokogiri::XML::PP::Node"},{"location":"rdoc/Nokogiri/XML/PP/Node.html#Instance%2BMethod%2BSummary","text":"# inspect \u21d2 Object :nodoc:. # pretty_print (pp) \u21d2 Object :nodoc:.","title":"Module: Nokogiri::XML::PP::Node / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/PP/Node.html#Instance%2BMethod%2BDetails","text":"","title":"Module: Nokogiri::XML::PP::Node / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/PP/Node.html#inspect-instance_method","text":":nodoc:","title":"Module: Nokogiri::XML::PP::Node#inspect \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/PP/Node.html#pretty_print-instance_method","text":":nodoc: Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: Nokogiri::XML::PP::Node#pretty_print (pp)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Document.html","text":"","title":"Class: Nokogiri::XML::SAX::Document"},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ASAX%253A%253ADocument","text":"Inherits: Object Object Nokogiri::XML::SAX::Document show all Defined in: lib/nokogiri/xml/sax/document.rb","title":"Class: Nokogiri::XML::SAX::Document"},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#Overview","text":"This class is used for registering types of events you are interested in handling. All of the methods on this class are available as possible events while parsing an XML document. To register for any particular event, just subclass this class and implement the methods you are interested in knowing about. To only be notified about start and end element events, write a class like this: You can use this event handler for any SAX style parser included with Nokogiri. See Nokogiri::XML::SAX, and Nokogiri::HTML4::SAX.","title":"Class: Nokogiri::XML::SAX::Document / Overview"},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#Direct%2BKnown%2BSubclasses","text":"HTML4::Document::EncodingReader::SAXHandler","title":"Class: Nokogiri::XML::SAX::Document / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#Instance%2BMethod%2BSummary","text":"# cdata_block (string) \u21d2 Object Called when cdata blocks are found string contains the cdata content. # characters (string) \u21d2 Object Characters read between a tag. # comment (string) \u21d2 Object Called when comments are encountered string contains the comment data. # end_document \u21d2 Object Called when document ends parsing. # end_element (name) \u21d2 Object Called at the end of an element name is the tag name. # end_element_namespace (name, prefix = nil, uri = nil) \u21d2 Object Called at the end of an element name is the element's name prefix is the namespace prefix associated with the element uri is the associated namespace URI. # error (string) \u21d2 Object Called on document errors string contains the error. # processing_instruction (name, content) \u21d2 Object Called when processing instructions are found name is the target of the instruction content is the value of the instruction. # start_document \u21d2 Object Called when document starts parsing. # start_element (name, attrs = []) \u21d2 Object Called at the beginning of an element * name is the name of the tag * attrs are an assoc list of namespaces and attributes, e.g.: [ [\u201cxmlns:foo\u201d, \u201c sample.net \u201d], [\u201csize\u201d, \u201clarge\u201d] ]. # start_element_namespace (name, attrs = [], prefix = nil, uri = nil, ns = []) \u21d2 Object Called at the beginning of an element name is the element name attrs is a list of attributes prefix is the namespace prefix for the element uri is the associated namespace URI ns is a hash of namespace prefix:urls associated with the element. # warning (string) \u21d2 Object Called on document warnings string contains the warning. # xmldecl (version, encoding, standalone) \u21d2 Object Called when an XML declaration is parsed.","title":"Class: Nokogiri::XML::SAX::Document / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::SAX::Document / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#cdata_block-instance_method","text":"Called when cdata blocks are found string contains the cdata content","title":"Class: Nokogiri::XML::SAX::Document#cdata_block (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#characters-instance_method","text":"Characters read between a tag. This method might be called multiple times given one contiguous string of characters. string contains the character data","title":"Class: Nokogiri::XML::SAX::Document#characters (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#comment-instance_method","text":"Called when comments are encountered string contains the comment data","title":"Class: Nokogiri::XML::SAX::Document#comment (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#end_document-instance_method","text":"Called when document ends parsing","title":"Class: Nokogiri::XML::SAX::Document#end_document \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#end_element-instance_method","text":"Called at the end of an element name is the tag name","title":"Class: Nokogiri::XML::SAX::Document#end_element (name)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#end_element_namespace-instance_method","text":"Called at the end of an element name is the element's name prefix is the namespace prefix associated with the element uri is the associated namespace URI","title":"Class: Nokogiri::XML::SAX::Document#end_element_namespace (name, prefix = nil, uri = nil)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#error-instance_method","text":"Called on document errors string contains the error","title":"Class: Nokogiri::XML::SAX::Document#error (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#processing_instruction-instance_method","text":"Called when processing instructions are found name is the target of the instruction content is the value of the instruction","title":"Class: Nokogiri::XML::SAX::Document#processing_instruction (name, content)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#start_document-instance_method","text":"Called when document starts parsing","title":"Class: Nokogiri::XML::SAX::Document#start_document \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#start_element-instance_method","text":"Called at the beginning of an element name is the name of the tag attrs are an assoc list of namespaces and attributes, e.g.:","title":"Class: Nokogiri::XML::SAX::Document#start_element (name, attrs = [])  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#start_element_namespace-instance_method","text":"Called at the beginning of an element name is the element name attrs is a list of attributes prefix is the namespace prefix for the element uri is the associated namespace URI ns is a hash of namespace prefix:urls associated with the element","title":"Class: Nokogiri::XML::SAX::Document#start_element_namespace (name, attrs = [], prefix = nil, uri = nil, ns = [])  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#warning-instance_method","text":"Called on document warnings string contains the warning","title":"Class: Nokogiri::XML::SAX::Document#warning (string)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Document.html#xmldecl-instance_method","text":"Called when an XML declaration is parsed Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::SAX::Document#xmldecl (version, encoding, standalone)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html","text":"","title":"Class: Nokogiri::XML::SAX::Parser"},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ASAX%253A%253AParser","text":"Inherits: Object Object Nokogiri::XML::SAX::Parser show all Defined in: lib/nokogiri/xml/sax/parser.rb , ext/nokogiri/xml_sax_parser.c","title":"Class: Nokogiri::XML::SAX::Parser"},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#Overview","text":"This parser is a SAX style parser that reads it's input as it deems necessary. The parser takes a Nokogiri::XML::SAX::Document, an optional encoding, then given an XML input, sends messages to the Nokogiri::XML::SAX::Document. Here is an example of using this parser: For more information about SAX parsers, see Nokogiri::XML::SAX. Also see Nokogiri::XML::SAX::Document for the available events.","title":"Class: Nokogiri::XML::SAX::Parser / Overview"},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#Direct%2BKnown%2BSubclasses","text":"HTML4::SAX::Parser , HTML::SAX::Parser","title":"Class: Nokogiri::XML::SAX::Parser / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#Defined%2BUnder%2BNamespace","text":"Classes: Attribute","title":"Class: Nokogiri::XML::SAX::Parser / Defined Under Namespace"},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#Constant%2BSummary","text":"ENCODINGS = Encodinds this parser supports","title":"Class: Nokogiri::XML::SAX::Parser / Constant Summary"},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#Instance%2BAttribute%2BSummary","text":"# document \u21d2 Object The Nokogiri::XML::SAX::Document where events will be sent. # encoding \u21d2 Object The encoding beings used for this document.","title":"Class: Nokogiri::XML::SAX::Parser / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#Instance%2BMethod%2BSummary","text":"# initialize (doc = Nokogiri::XML::SAX::Document.new, encoding = 'UTF-8') \u21d2 Parser constructor Create a new Parser with doc and encoding . # parse (thing, &block) \u21d2 Object Parse given thing which may be a string containing xml, or an IO object. # parse_file (filename) {|ctx| ... } \u21d2 Object Parse a file with filename . # parse_io (io, encoding = 'ASCII') {|ctx| ... } \u21d2 Object Parse given io . # parse_memory (data) {|ctx| ... } \u21d2 Object","title":"Class: Nokogiri::XML::SAX::Parser / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::XML::SAX::Parser / Constructor Details"},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#initialize-instance_method","text":"Create a new Parser with doc and encoding","title":"Class: Nokogiri::XML::SAX::Parser#initialize (doc = Nokogiri::XML::SAX::Document#new, encoding = 'UTF-8')  \u21d2 Parser "},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::XML::SAX::Parser / Instance Attribute Details"},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#document-instance_method","text":"The Nokogiri::XML::SAX::Document where events will be sent.","title":"Class: Nokogiri::XML::SAX::Parser#document \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#encoding-instance_method","text":"The encoding beings used for this document.","title":"Class: Nokogiri::XML::SAX::Parser#encoding \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::SAX::Parser / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#parse-instance_method","text":"Parse given thing which may be a string containing xml, or an IO object.","title":"Class: Nokogiri::XML::SAX::Parser#parse (thing, &block)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#parse_file-instance_method","text":"Parse a file with filename Yields: ( ctx ) Raises: ( ArgumentError )","title":"Class: Nokogiri::XML::SAX::Parser#parse_file (filename) {|ctx|###} \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#parse_io-instance_method","text":"Parse given io Yields: ( ctx )","title":"Class: Nokogiri::XML::SAX::Parser#parse_io (io, encoding = 'ASCII') {|ctx|###} \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Parser.html#parse_memory-instance_method","text":"Yields: ( ctx ) Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::SAX::Parser#parse_memory (data) {|ctx|###} \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html","text":"","title":"Class: Nokogiri::XML::SAX::ParserContext"},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ASAX%253A%253AParserContext","text":"Inherits: Object Object Nokogiri::XML::SAX::ParserContext show all Defined in: lib/nokogiri/xml/sax/parser_context.rb , ext/nokogiri/xml_sax_parser_context.c","title":"Class: Nokogiri::XML::SAX::ParserContext"},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#Overview","text":"Context for XML SAX parsers. This class is usually not instantiated by the user. Instead, you should be looking at Nokogiri::XML::SAX::Parser","title":"Class: Nokogiri::XML::SAX::ParserContext / Overview"},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#Direct%2BKnown%2BSubclasses","text":"HTML4::SAX::ParserContext , HTML::SAX::ParserContext","title":"Class: Nokogiri::XML::SAX::ParserContext / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#Class%2BMethod%2BSummary","text":". parse_file (filename) \u21d2 Object Parse file given filename . . parse_io (io, encoding) \u21d2 Object Parse io object with encoding . . parse_memory (data) \u21d2 Object Parse the XML stored in memory in data . . new (thing, encoding = 'UTF-8') \u21d2 Object","title":"Class: Nokogiri::XML::SAX::ParserContext / Class Method Summary"},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#Instance%2BMethod%2BSummary","text":"# column \u21d2 Object Get the current column the parser context is processing. # line \u21d2 Object Get the current line the parser context is processing. # parse_with (sax_handler) \u21d2 Object Use sax_handler and parse the current document. # recovery \u21d2 Object Should this parser recover from structural errors? It will not stop processing file on structural errors if set to true. # recovery= (boolean) \u21d2 Object Should this parser recover from structural errors? It will not stop processing file on structural errors if set to true. # replace_entities \u21d2 Object Should this parser replace entities? &amp; will get converted to '&' if set to true. # replace_entities= (boolean) \u21d2 Object Should this parser replace entities? &amp; will get converted to '&' if set to true.","title":"Class: Nokogiri::XML::SAX::ParserContext / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::SAX::ParserContext / Class Method Details"},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#file-class_method","text":"Parse file given filename","title":"Class: Nokogiri::XML::SAX::ParserContext#parse_file (filename)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#io-class_method","text":"Parse io object with encoding","title":"Class: Nokogiri::XML::SAX::ParserContext#parse_io (io, encoding)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#memory-class_method","text":"Parse the XML stored in memory in data","title":"Class: Nokogiri::XML::SAX::ParserContext#parse_memory (data)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#new-class_method","text":"","title":"Class: Nokogiri::XML::SAX::ParserContext#new (thing, encoding = 'UTF-8')  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::SAX::ParserContext / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#column-instance_method","text":"Get the current column the parser context is processing.","title":"Class: Nokogiri::XML::SAX::ParserContext#column \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#line-instance_method","text":"Get the current line the parser context is processing.","title":"Class: Nokogiri::XML::SAX::ParserContext#line \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#parse_with-instance_method","text":"Use sax_handler and parse the current document","title":"Class: Nokogiri::XML::SAX::ParserContext#parse_with (sax_handler)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#recovery-instance_method","text":"Should this parser recover from structural errors? It will not stop processing file on structural errors if set to true","title":"Class: Nokogiri::XML::SAX::ParserContext#recovery \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#recovery%3D-instance_method","text":"Should this parser recover from structural errors? It will not stop processing file on structural errors if set to true","title":"Class: Nokogiri::XML::SAX::ParserContext#recovery= (boolean)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#replace_entities-instance_method","text":"Should this parser replace entities? &amp; will get converted to '&' if set to true","title":"Class: Nokogiri::XML::SAX::ParserContext#replace_entities \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/ParserContext.html#replace_entities%3D-instance_method","text":"Should this parser replace entities? &amp; will get converted to '&' if set to true Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::SAX::ParserContext#replace_entities= (boolean)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html","text":"","title":"Class: Nokogiri::XML::SAX::PushParser"},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ASAX%253A%253APushParser","text":"Inherits: Object Object Nokogiri::XML::SAX::PushParser show all Defined in: lib/nokogiri/xml/sax/push_parser.rb , ext/nokogiri/xml_sax_push_parser.c","title":"Class: Nokogiri::XML::SAX::PushParser"},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#Overview","text":"PushParser can parse a document that is fed to it manually. It must be given a SAX::Document object which will be called with SAX events as the document is being parsed. Calling PushParser#<< writes XML to the parser, calling any SAX callbacks it can. PushParser#finish tells the parser that the document is finished and calls the end_document SAX method. Example:","title":"Class: Nokogiri::XML::SAX::PushParser / Overview"},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#Direct%2BKnown%2BSubclasses","text":"HTML4::SAX::PushParser","title":"Class: Nokogiri::XML::SAX::PushParser / Direct Known Subclasses"},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#Instance%2BAttribute%2BSummary","text":"# document \u21d2 Object The Nokogiri::XML::SAX::Document on which the PushParser will be operating.","title":"Class: Nokogiri::XML::SAX::PushParser / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#Instance%2BMethod%2BSummary","text":"# finish \u21d2 Object Finish the parsing. # initialize (doc = XML::SAX::Document.new, file_name = nil, encoding = 'UTF-8') \u21d2 PushParser constructor Create a new PushParser with doc as the SAX Document, providing an optional file_name and encoding . # options \u21d2 Object # options= (options) \u21d2 Object # replace_entities \u21d2 Object Should this parser replace entities? &amp; will get converted to '&' if set to true. # replace_entities= (boolean) \u21d2 Object Should this parser replace entities? &amp; will get converted to '&' if set to true. # write (chunk, last_chunk = false) \u21d2 Object (also: #<<) Write a chunk of XML to the PushParser.","title":"Class: Nokogiri::XML::SAX::PushParser / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#Constructor%2BDetails","text":"","title":"Class: Nokogiri::XML::SAX::PushParser / Constructor Details"},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#initialize-instance_method","text":"Create a new PushParser with doc as the SAX Document, providing an optional file_name and encoding","title":"Class: Nokogiri::XML::SAX::PushParser#initialize (doc = XML::SAX::Document#new, file_name = nil, encoding = 'UTF-8')  \u21d2 PushParser "},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::XML::SAX::PushParser / Instance Attribute Details"},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#document-instance_method","text":"The Nokogiri::XML::SAX::Document on which the PushParser will be operating","title":"Class: Nokogiri::XML::SAX::PushParser#document \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::SAX::PushParser / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#finish-instance_method","text":"Finish the parsing. This method is only necessary for Nokogiri::XML::SAX::Document#end_document to be called.","title":"Class: Nokogiri::XML::SAX::PushParser#finish \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#options-instance_method","text":"","title":"Class: Nokogiri::XML::SAX::PushParser#options \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#options%3D-instance_method","text":"","title":"Class: Nokogiri::XML::SAX::PushParser#options= (options)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#replace_entities-instance_method","text":"Should this parser replace entities? &amp; will get converted to '&' if set to true","title":"Class: Nokogiri::XML::SAX::PushParser#replace_entities \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#replace_entities%3D-instance_method","text":"Should this parser replace entities? &amp; will get converted to '&' if set to true","title":"Class: Nokogiri::XML::SAX::PushParser#replace_entities= (boolean)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/PushParser.html#write-instance_method","text":"Write a chunk of XML to the PushParser. Any callback methods that can be called will be called immediately. Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::SAX::PushParser#write (chunk, last_chunk = false)  \u21d2 Object  Also known as: <<  "},{"location":"rdoc/Nokogiri/XML/SAX/Parser/Attribute.html","text":"","title":"Class: Nokogiri::XML::SAX::Parser::Attribute"},{"location":"rdoc/Nokogiri/XML/SAX/Parser/Attribute.html#Class%253A%2BNokogiri%253A%253AXML%253A%253ASAX%253A%253AParser%253A%253AAttribute","text":"Inherits: Struct Object Struct Nokogiri::XML::SAX::Parser::Attribute show all Defined in: lib/nokogiri/xml/sax/parser.rb","title":"Class: Nokogiri::XML::SAX::Parser::Attribute"},{"location":"rdoc/Nokogiri/XML/SAX/Parser/Attribute.html#Instance%2BAttribute%2BSummary","text":"# localname \u21d2 Object Returns the value of attribute localname. # prefix \u21d2 Object Returns the value of attribute prefix. # uri \u21d2 Object Returns the value of attribute uri. # value \u21d2 Object Returns the value of attribute value.","title":"Class: Nokogiri::XML::SAX::Parser::Attribute / Instance Attribute Summary"},{"location":"rdoc/Nokogiri/XML/SAX/Parser/Attribute.html#Instance%2BAttribute%2BDetails","text":"","title":"Class: Nokogiri::XML::SAX::Parser::Attribute / Instance Attribute Details"},{"location":"rdoc/Nokogiri/XML/SAX/Parser/Attribute.html#localname-instance_method","text":"Returns the value of attribute localname Returns: ( Object ) \u2014 the current value of localname","title":"Class: Nokogiri::XML::SAX::Parser::Attribute#localname \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Parser/Attribute.html#prefix-instance_method","text":"Returns the value of attribute prefix Returns: ( Object ) \u2014 the current value of prefix","title":"Class: Nokogiri::XML::SAX::Parser::Attribute#prefix \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Parser/Attribute.html#uri-instance_method","text":"Returns the value of attribute uri Returns: ( Object ) \u2014 the current value of uri","title":"Class: Nokogiri::XML::SAX::Parser::Attribute#uri \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/SAX/Parser/Attribute.html#value-instance_method","text":"Returns the value of attribute value Returns: ( Object ) \u2014 the current value of value Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::SAX::Parser::Attribute#value \u21d2 Object "},{"location":"rdoc/Nokogiri/XML/XPath/SyntaxError.html","text":"","title":"Class: Nokogiri::XML::XPath::SyntaxError"},{"location":"rdoc/Nokogiri/XML/XPath/SyntaxError.html#Class%253A%2BNokogiri%253A%253AXML%253A%253AXPath%253A%253ASyntaxError","text":"Inherits: NokogiriXmlSyntaxError Object NokogiriXmlSyntaxError Nokogiri::XML::XPath::SyntaxError show all Defined in: lib/nokogiri/xml/xpath/syntax_error.rb , ext/nokogiri/nokogiri.c","title":"Class: Nokogiri::XML::XPath::SyntaxError"},{"location":"rdoc/Nokogiri/XML/XPath/SyntaxError.html#Instance%2BMethod%2BSummary","text":"# to_s \u21d2 Object","title":"Class: Nokogiri::XML::XPath::SyntaxError / Instance Method Summary"},{"location":"rdoc/Nokogiri/XML/XPath/SyntaxError.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XML::XPath::SyntaxError / Instance Method Details"},{"location":"rdoc/Nokogiri/XML/XPath/SyntaxError.html#to_s-instance_method","text":"Generated on Mon Sep 27 15:13:36 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XML::XPath::SyntaxError#to_s \u21d2 Object "},{"location":"rdoc/Nokogiri/XSLT/Stylesheet.html","text":"","title":"Class: Nokogiri::XSLT::Stylesheet"},{"location":"rdoc/Nokogiri/XSLT/Stylesheet.html#Class%253A%2BNokogiri%253A%253AXSLT%253A%253AStylesheet","text":"Inherits: Object Object Nokogiri::XSLT::Stylesheet show all Defined in: lib/nokogiri/xslt/stylesheet.rb , ext/nokogiri/xslt_stylesheet.c","title":"Class: Nokogiri::XSLT::Stylesheet"},{"location":"rdoc/Nokogiri/XSLT/Stylesheet.html#Overview","text":"A Stylesheet represents an XSLT Stylesheet object. Stylesheet creation is done through Nokogiri.XSLT. Here is an example of transforming an XML::Document with a Stylesheet: See Nokogiri::XSLT::Stylesheet#transform for more transformation information.","title":"Class: Nokogiri::XSLT::Stylesheet / Overview"},{"location":"rdoc/Nokogiri/XSLT/Stylesheet.html#Class%2BMethod%2BSummary","text":". parse_stylesheet_doc (document) \u21d2 Object Parse a stylesheet from document .","title":"Class: Nokogiri::XSLT::Stylesheet / Class Method Summary"},{"location":"rdoc/Nokogiri/XSLT/Stylesheet.html#Instance%2BMethod%2BSummary","text":"# apply_to (document, params = []) \u21d2 Object Apply an XSLT stylesheet to an XML::Document. # serialize (document) \u21d2 Object Serialize document to an xml string. # transform (document, params = []) \u21d2 Object Apply an XSLT stylesheet to an XML::Document.","title":"Class: Nokogiri::XSLT::Stylesheet / Instance Method Summary"},{"location":"rdoc/Nokogiri/XSLT/Stylesheet.html#Class%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XSLT::Stylesheet / Class Method Details"},{"location":"rdoc/Nokogiri/XSLT/Stylesheet.html#parse_stylesheet_doc-class_method","text":"Parse a stylesheet from document .","title":"Class: Nokogiri::XSLT::Stylesheet#parse_stylesheet_doc (document)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XSLT/Stylesheet.html#Instance%2BMethod%2BDetails","text":"","title":"Class: Nokogiri::XSLT::Stylesheet / Instance Method Details"},{"location":"rdoc/Nokogiri/XSLT/Stylesheet.html#apply_to-instance_method","text":"Apply an XSLT stylesheet to an XML::Document. params is an array of strings used as XSLT parameters. returns serialized document","title":"Class: Nokogiri::XSLT::Stylesheet#apply_to (document, params = [])  \u21d2 Object "},{"location":"rdoc/Nokogiri/XSLT/Stylesheet.html#serialize-instance_method","text":"Serialize document to an xml string.","title":"Class: Nokogiri::XSLT::Stylesheet#serialize (document)  \u21d2 Object "},{"location":"rdoc/Nokogiri/XSLT/Stylesheet.html#transform-instance_method","text":"Apply an XSLT stylesheet to an XML::Document. params is an array of strings used as XSLT parameters. returns Nokogiri::XML::Document Example: Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: Nokogiri::XSLT::Stylesheet#transform (document, params = [])  \u21d2 Object "},{"location":"rdoc/XSD/XMLParser.html","text":"","title":"Module: XSD::XMLParser"},{"location":"rdoc/XSD/XMLParser.html#Module%253A%2BXSD%253A%253AXMLParser","text":"Defined in: lib/xsd/xmlparser/nokogiri.rb","title":"Module: XSD::XMLParser"},{"location":"rdoc/XSD/XMLParser.html#Overview","text":":nodoc:","title":"Module: XSD::XMLParser / Overview"},{"location":"rdoc/XSD/XMLParser.html#Defined%2BUnder%2BNamespace","text":"Classes: Nokogiri Generated on Mon Sep 27 15:13:33 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Module: XSD::XMLParser / Defined Under Namespace"},{"location":"rdoc/XSD/XMLParser/Nokogiri.html","text":"","title":"Class: XSD::XMLParser::Nokogiri"},{"location":"rdoc/XSD/XMLParser/Nokogiri.html#Class%253A%2BXSD%253A%253AXMLParser%253A%253ANokogiri","text":"Inherits: Parser Object Parser XSD::XMLParser::Nokogiri show all Defined in: lib/xsd/xmlparser/nokogiri.rb","title":"Class: XSD::XMLParser::Nokogiri"},{"location":"rdoc/XSD/XMLParser/Nokogiri.html#Overview","text":"Nokogiri XML parser for soap4r. Nokogiri may be used as the XML parser in soap4r. Simply require 'xsd/xmlparser/nokogiri' in your soap4r applications, and soap4r will use Nokogiri as it's XML parser. No other changes should be required to use Nokogiri as the XML parser. Example (using UW ITS Web Services):","title":"Class: XSD::XMLParser::Nokogiri / Overview"},{"location":"rdoc/XSD/XMLParser/Nokogiri.html#Instance%2BMethod%2BSummary","text":"# cdata_block (string) \u21d2 Object Handle cdata_blocks containing string . # do_parse (string_or_readable) \u21d2 Object Start parsing string_or_readable . # end_element (name) \u21d2 Object Handle the end_element event with name . # end_element_namespace (name, prefix = nil, uri = nil) \u21d2 Object Called at the end of an element name is the element's name prefix is the namespace prefix associated with the element uri is the associated namespace URI. # error (msg) \u21d2 Object (also: #warning) Handle errors with message msg . # initialize (host, opt = {}) \u21d2 Nokogiri constructor Create a new XSD parser with host and opt . # start_element (name, attrs = []) \u21d2 Object Handle the start_element event with name and attrs . # start_element_namespace (name, attrs = [], prefix = nil, uri = nil, ns = []) \u21d2 Object Called at the beginning of an element name is the element name attrs is a list of attributes prefix is the namespace prefix for the element uri is the associated namespace URI ns is a hash of namespace prefix:urls associated with the element.","title":"Class: XSD::XMLParser::Nokogiri / Instance Method Summary"},{"location":"rdoc/XSD/XMLParser/Nokogiri.html#Constructor%2BDetails","text":"","title":"Class: XSD::XMLParser::Nokogiri / Constructor Details"},{"location":"rdoc/XSD/XMLParser/Nokogiri.html#initialize-instance_method","text":"Create a new XSD parser with host and opt","title":"Class: XSD::XMLParser::Nokogiri#initialize (host, opt = {})  \u21d2 Nokogiri "},{"location":"rdoc/XSD/XMLParser/Nokogiri.html#Instance%2BMethod%2BDetails","text":"","title":"Class: XSD::XMLParser::Nokogiri / Instance Method Details"},{"location":"rdoc/XSD/XMLParser/Nokogiri.html#cdata_block-instance_method","text":"Handle cdata_blocks containing string","title":"Class: XSD::XMLParser::Nokogiri#cdata_block (string)  \u21d2 Object "},{"location":"rdoc/XSD/XMLParser/Nokogiri.html#do_parse-instance_method","text":"Start parsing string_or_readable","title":"Class: XSD::XMLParser::Nokogiri#do_parse (string_or_readable)  \u21d2 Object "},{"location":"rdoc/XSD/XMLParser/Nokogiri.html#end_element-instance_method","text":"Handle the end_element event with name","title":"Class: XSD::XMLParser::Nokogiri#end_element (name)  \u21d2 Object "},{"location":"rdoc/XSD/XMLParser/Nokogiri.html#end_element_namespace-instance_method","text":"Called at the end of an element name is the element's name prefix is the namespace prefix associated with the element uri is the associated namespace URI","title":"Class: XSD::XMLParser::Nokogiri#end_element_namespace (name, prefix = nil, uri = nil)  \u21d2 Object "},{"location":"rdoc/XSD/XMLParser/Nokogiri.html#error-instance_method","text":"Handle errors with message msg Raises: ( ParseError )","title":"Class: XSD::XMLParser::Nokogiri#error (msg)  \u21d2 Object  Also known as: warning  "},{"location":"rdoc/XSD/XMLParser/Nokogiri.html#start_element-instance_method","text":"Handle the start_element event with name and attrs","title":"Class: XSD::XMLParser::Nokogiri#start_element (name, attrs = [])  \u21d2 Object "},{"location":"rdoc/XSD/XMLParser/Nokogiri.html#start_element_namespace-instance_method","text":"Called at the beginning of an element name is the element name attrs is a list of attributes prefix is the namespace prefix for the element uri is the associated namespace URI ns is a hash of namespace prefix:urls associated with the element Generated on Mon Sep 27 15:13:35 2021 by yard 0.9.26 (ruby-3.0.2).","title":"Class: XSD::XMLParser::Nokogiri#start_element_namespace (name, attrs = [], prefix = nil, uri = nil, ns = [])  \u21d2 Object "},{"location":"index.html","text":"<p>   Get support for Nokogiri with a Tidelift subscription </p>","title":"Overview"},{"location":"index.html#nokogiri","text":"<p>Nokogiri (\u92f8) makes it easy and painless to work with XML and HTML from Ruby. It provides a sensible, easy-to-understand API for reading, writing, modifying, and querying documents. It is fast and standards-compliant by relying on native parsers like libxml2 (C) and xerces (Java).</p>","title":"Nokogiri"},{"location":"index.html#guiding-principles","text":"<p>Some guiding principles Nokogiri tries to follow:</p> <ul> <li>be secure-by-default by treating all documents as untrusted by default</li> <li>be a thin-as-reasonable layer on top of the underlying parsers, and don't attempt to fix behavioral differences between the parsers</li> </ul>","title":"Guiding Principles"},{"location":"index.html#features-overview","text":"<ul> <li>DOM Parser for XML, HTML4, and HTML5</li> <li>SAX Parser for XML and HTML4</li> <li>Push Parser for XML and HTML4</li> <li>Document search via XPath 1.0</li> <li>Document search via CSS3 selectors, with some jquery-like extensions</li> <li>XSD Schema validation</li> <li>XSLT transformation</li> <li>\"Builder\" DSL for XML and HTML documents</li> </ul>","title":"Features Overview"},{"location":"index.html#status","text":"<p> </p> <p>  </p>","title":"Status"},{"location":"index.html#support-getting-help-and-reporting-issues","text":"<p>All official documentation is posted at https://nokogiri.org (the source for which is at https://github.com/sparklemotion/nokogiri.org/, and we welcome contributions).</p> <p>Consider subscribing to Tidelift which provides license assurances and timely security notifications for your open source dependencies, including Nokogiri. Tidelift subscriptions also help the Nokogiri maintainers fund our automated testing which in turn allows us to ship releases, bugfixes, and security updates more often.</p>","title":"Support, Getting Help, and Reporting Issues"},{"location":"index.html#reading","text":"<p>Your first stops for learning more about Nokogiri should be:</p> <ul> <li>API Documentation</li> <li>Tutorials</li> <li>An excellent community-maintained Cheat Sheet</li> </ul>","title":"Reading"},{"location":"index.html#ask-for-help","text":"<p>There are a few ways to ask exploratory questions:</p> <ul> <li>The Ruby Discord chat server is active at https://discord.gg/UyQnKrT</li> <li>The Nokogiri mailing list is active at https://groups.google.com/group/nokogiri-talk</li> <li>Open an issue using the \"Help Request\" template at https://github.com/sparklemotion/nokogiri/issues</li> </ul> <p>Please do not mail the maintainers at their personal addresses.</p>","title":"Ask For Help"},{"location":"index.html#report-a-bug","text":"<p>The Nokogiri bug tracker is at https://github.com/sparklemotion/nokogiri/issues</p> <p>Please use the \"Bug Report\" or \"Installation Difficulties\" templates.</p>","title":"Report A Bug"},{"location":"index.html#security-and-vulnerability-reporting","text":"<p>Please report vulnerabilities at https://hackerone.com/nokogiri</p> <p>Full information and description of our security policy is in <code>SECURITY.md</code></p>","title":"Security and Vulnerability Reporting"},{"location":"index.html#semantic-versioning-policy","text":"<p>Nokogiri follows Semantic Versioning (since 2017 or so). </p> <p>We bump <code>Major.Minor.Patch</code> versions following this guidance:</p> <p><code>Major</code>: (we've never done this)</p> <ul> <li>Significant backwards-incompatible changes to the public API that would require rewriting existing application code.</li> <li>Some examples of backwards-incompatible changes we might someday consider for a Major release are at <code>ROADMAP.md</code>.</li> </ul> <p><code>Minor</code>:</p> <ul> <li>Features and bugfixes.</li> <li>Updating packaged libraries for non-security-related reasons.</li> <li>Dropping support for EOLed Ruby versions. Some folks find this objectionable, but SemVer says this is OK if the public API hasn't changed.</li> <li>Backwards-incompatible changes to internal or private methods and constants. These are detailed in the \"Changes\" section of each changelog entry.</li> </ul> <p><code>Patch</code>:</p> <ul> <li>Bugfixes.</li> <li>Security updates.</li> <li>Updating packaged libraries for security-related reasons.</li> </ul>","title":"Semantic Versioning Policy"},{"location":"index.html#installation","text":"<p>Requirements:</p> <ul> <li>Ruby &gt;= 2.5</li> <li>JRuby &gt;= 9.2.0.0</li> </ul>","title":"Installation"},{"location":"index.html#native-gems-faster-more-reliable-installation","text":"<p>\"Native gems\" contain pre-compiled libraries for a specific machine architecture. On supported platforms, this removes the need for compiling the C extension and the packaged libraries, or for system dependencies to exist. This results in much faster installation and more reliable installation, which as you probably know are the biggest headaches for Nokogiri users.</p>","title":"Native Gems: Faster, more reliable installation"},{"location":"index.html#supported-platforms","text":"<p>As of v1.11.0, Nokogiri ships pre-compiled, \"native\" gems for the following platforms:</p> <ul> <li>Linux: <code>x86-linux</code> and <code>x86_64-linux</code> (req: <code>glibc &gt;= 2.17</code>), including musl platforms like Alpine</li> <li>Darwin/MacOS: <code>x86_64-darwin</code> and <code>arm64-darwin</code></li> <li>Windows: <code>x86-mingw32</code> and <code>x64-mingw32</code></li> <li>Java: any platform running JRuby 9.2 or higher</li> </ul> <p>To determine whether your system supports one of these gems, look at the output of <code>bundle platform</code> or <code>ruby -e 'puts Gem::Platform.local.to_s'</code>.</p> <p>If you're on a supported platform, either <code>gem install</code> or <code>bundle install</code> should install a native gem without any additional action on your part. This installation should only take a few seconds, and your output should look something like:</p> <pre><code>$ gem install nokogiri\nFetching nokogiri-1.11.0-x86_64-linux.gem\nSuccessfully installed nokogiri-1.11.0-x86_64-linux\n1 gem installed\n</code></pre>","title":"Supported Platforms"},{"location":"index.html#other-installation-options","text":"<p>Because Nokogiri is a C extension, it requires that you have a C compiler toolchain, Ruby development header files, and some system dependencies installed.</p> <p>The following may work for you if you have an appropriately-configured system:</p> <pre><code>gem install nokogiri\n</code></pre> <p>If you have any issues, please visit Installing Nokogiri for more complete instructions and troubleshooting.</p>","title":"Other Installation Options"},{"location":"index.html#how-to-use-nokogiri","text":"<p>Nokogiri is a large library, and so it's challenging to briefly summarize it. We've tried to provide long, real-world examples at Tutorials.</p>","title":"How To Use Nokogiri"},{"location":"index.html#parsing-and-querying","text":"<p>Here is example usage for parsing and querying a document:</p> <pre><code>#! /usr/bin/env ruby\n\nrequire 'nokogiri'\nrequire 'open-uri'\n\n# Fetch and parse HTML document\ndoc = Nokogiri::HTML(URI.open('https://nokogiri.org/tutorials/installing_nokogiri.html'))\n\n# Search for nodes by css\ndoc.css('nav ul.menu li a', 'article h2').each do |link|\n  puts link.content\nend\n\n# Search for nodes by xpath\ndoc.xpath('//nav//ul//li/a', '//article//h2').each do |link|\n  puts link.content\nend\n\n# Or mix and match\ndoc.search('nav ul.menu li a', '//article//h2').each do |link|\n  puts link.content\nend\n</code></pre>","title":"Parsing and Querying"},{"location":"index.html#encoding","text":"<p>Strings are always stored as UTF-8 internally.  Methods that return text values will always return UTF-8 encoded strings.  Methods that return a string containing markup (like <code>to_xml</code>, <code>to_html</code> and <code>inner_html</code>) will return a string encoded like the source document.</p> <p>WARNING</p> <p>Some documents declare one encoding, but actually use a different one. In these cases, which encoding should the parser choose?</p> <p>Data is just a stream of bytes. Humans add meaning to that stream. Any particular set of bytes could be valid characters in multiple encodings, so detecting encoding with 100% accuracy is not possible. <code>libxml2</code> does its best, but it can't be right all the time.</p> <p>If you want Nokogiri to handle the document encoding properly, your best bet is to explicitly set the encoding.  Here is an example of explicitly setting the encoding to EUC-JP on the parser:</p> <pre><code>  doc = Nokogiri.XML('&lt;foo&gt;&lt;bar /&gt;&lt;/foo&gt;', nil, 'EUC-JP')\n</code></pre>","title":"Encoding"},{"location":"index.html#technical-overview","text":"","title":"Technical Overview"},{"location":"index.html#guiding-principles_1","text":"<p>As noted above, two guiding principles of the software are:</p> <ul> <li>be secure-by-default by treating all documents as untrusted by default</li> <li>be a thin-as-reasonable layer on top of the underlying parsers, and don't attempt to fix behavioral differences between the parsers</li> </ul> <p>Notably, despite all parsers being standards-compliant, there are behavioral inconsistencies between the parsers used in the CRuby and JRuby implementations, and Nokogiri does not and should not attempt to remove these inconsistencies. Instead, we surface these differences in the test suite when they are important/semantic; or we intentionally write tests to depend only on the important/semantic bits (omitting whitespace from regex matchers on results, for example).</p>","title":"Guiding Principles"},{"location":"index.html#cruby","text":"<p>The Ruby (a.k.a., CRuby, MRI, YARV) implementation is a C extension that depends on libxml2 and libxslt (which in turn depend on zlib and possibly libiconv).</p> <p>These dependencies are met by default by Nokogiri's packaged versions of the libxml2 and libxslt source code, but a configuration option <code>--use-system-libraries</code> is provided to allow specification of alternative library locations. See Installing Nokogiri for full documentation.</p> <p>We provide native gems by pre-compiling libxml2 and libxslt (and potentially zlib and libiconv) and packaging them into the gem file. In this case, no compilation is necessary at installation time, which leads to faster and more reliable installation.</p> <p>See <code>LICENSE-DEPENDENCIES.md</code> for more information on which dependencies are provided in which native and source gems.</p>","title":"CRuby"},{"location":"index.html#jruby","text":"<p>The Java (a.k.a. JRuby) implementation is a Java extension that depends primarily on Xerces and NekoHTML for parsing, though additional dependencies are on <code>isorelax</code>, <code>nekodtd</code>, <code>jing</code>, <code>serializer</code>, <code>xalan-j</code>, and <code>xml-apis</code>.</p> <p>These dependencies are provided by pre-compiled jar files packaged in the <code>java</code> platform gem.</p> <p>See <code>LICENSE-DEPENDENCIES.md</code> for more information on which dependencies are provided in which native and source gems.</p>","title":"JRuby"},{"location":"index.html#contributing","text":"<p>See <code>CONTRIBUTING.md</code> for an intro guide to developing Nokogiri.</p>","title":"Contributing"},{"location":"index.html#code-of-conduct","text":"<p>We've adopted the Contributor Covenant code of conduct, which you can read in full in <code>CODE_OF_CONDUCT.md</code>.</p>","title":"Code of Conduct"},{"location":"index.html#license","text":"<p>This project is licensed under the terms of the MIT license.</p> <p>See this license at <code>LICENSE.md</code>.</p>","title":"License"},{"location":"index.html#dependencies","text":"<p>Some additional libraries may be distributed with your version of Nokogiri. Please see <code>LICENSE-DEPENDENCIES.md</code> for a discussion of the variations as well as the licenses thereof.</p>","title":"Dependencies"},{"location":"index.html#authors","text":"<ul> <li>Mike Dalessio</li> <li>Aaron Patterson</li> <li>Yoko Harada</li> <li>Akinori MUSHA</li> <li>John Shahid</li> <li>Karol Bucek</li> <li>Sam Ruby</li> <li>Craig Barnes</li> <li>Stephen Checkoway</li> <li>Lars Kanis</li> <li>Sergio Arbeo</li> <li>Timothy Elliott</li> <li>Nobuyoshi Nakada</li> </ul>","title":"Authors"},{"location":"CHANGELOG.html","text":"<p>Nokogiri follows Semantic Versioning, please see the README.md for details.</p>","title":"Nokogiri Changelog"},{"location":"CHANGELOG.html#1125-2021-09-27","text":"","title":"1.12.5 / 2021-09-27"},{"location":"CHANGELOG.html#security","text":"<p>[JRuby] Address CVE-2021-41098 (GHSA-2rr5-8q37-2w7h).</p> <p>In Nokogiri v1.12.4 and earlier, on JRuby only, the SAX parsers resolve external entities (XXE) by default. This fix turns off entity-resolution-by-default in the JRuby SAX parsers to match the CRuby SAX parsers' behavior.</p> <p>CRuby users are not affected by this CVE.</p>","title":"Security"},{"location":"CHANGELOG.html#fixed","text":"<ul> <li>[CRuby] <code>Document#to_xhtml</code> properly serializes self-closing tags in libxml &gt; 2.9.10. A behavior change introduced in libxml 2.9.11 resulted in emitting start and and tags (e.g., <code>&lt;br&gt;&lt;/br&gt;</code>) instead of a self-closing tag (e.g., <code>&lt;br/&gt;</code>) in previous Nokogiri versions. [#2324]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1124-2021-08-29","text":"","title":"1.12.4 / 2021-08-29"},{"location":"CHANGELOG.html#notable-fix-namespace-inheritance","text":"<p>Namespace behavior when reparenting nodes has historically been poorly specified and the behavior diverged between CRuby and JRuby. As a result, making this behavior consistent in v1.12.0 introduced a breaking change.</p> <p>This patch release reverts the Builder behavior present in v1.12.0..v1.12.3 but keeps the Document behavior. This release also introduces a Document attribute to allow affected users to easily change this behavior for their legacy code without invasive changes.</p>","title":"Notable fix: Namespace inheritance"},{"location":"CHANGELOG.html#compensating-feature-in-xmldocument","text":"<p>This release of Nokogiri introduces a new <code>Document</code> boolean attribute, <code>namespace_inheritance</code>, which controls whether children should inherit a namespace when they are reparented. <code>Nokogiri::XML:Document</code> defaults this attribute to <code>false</code> meaning \"do not inherit,\" thereby making explicit the behavior change introduced in v1.12.0.</p> <p>CRuby users who desire the pre-v1.12.0 behavior may set <code>document.namespace_inheritance = true</code> before reparenting nodes.</p> <p>See https://nokogiri.org/rdoc/Nokogiri/XML/Document.html#namespace_inheritance-instance_method for example usage.</p>","title":"Compensating Feature in XML::Document"},{"location":"CHANGELOG.html#fix-for-xmlbuilder","text":"<p>However, recognizing that we want <code>Builder</code>-created children to inherit namespaces, Builder now will set <code>namespace_inheritance=true</code> on the underlying document for both JRuby and CRuby. This means that, on CRuby, the pre-v1.12.0 behavior is restored.</p> <p>Users who want to turn this behavior off may pass a keyword argument to the Builder constructor like so:</p> <pre><code>Nokogiri::XML::Builder.new(namespace_inheritance: false)\n</code></pre> <p>See https://nokogiri.org/rdoc/Nokogiri/XML/Builder.html#label-Namespace+inheritance for example usage.</p>","title":"Fix for XML::Builder"},{"location":"CHANGELOG.html#downstream-gem-maintainers","text":"<p>Note that any downstream gems may want to specifically omit Nokogiri v1.12.0--v1.12.3 from their dependency specification if they rely on child namespace inheritance:</p> <pre><code>Gem::Specification.new do |gem|\n  # ...\n  gem.add_runtime_dependency 'nokogiri', '!=1.12.3', '!=1.12.2', '!=1.12.1', '!=1.12.0'\n  # ...\nend\n</code></pre>","title":"Downstream gem maintainers"},{"location":"CHANGELOG.html#fixed_1","text":"<ul> <li>[JRuby] Fix NPE in Schema parsing when an imported resource doesn't have a <code>systemId</code>. [#2296] (Thanks, @pepijnve!)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1123-2021-08-10","text":"","title":"1.12.3 / 2021-08-10"},{"location":"CHANGELOG.html#fixed_2","text":"<ul> <li>[CRuby] Fix compilation of libgumbo on older systems with versions of GCC that give errors on C99-isms. Affected systems include RHEL6, RHEL7, and SLES12. [#2302]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1122-2021-08-04","text":"","title":"1.12.2 / 2021-08-04"},{"location":"CHANGELOG.html#fixed_3","text":"<ul> <li>[CRuby] Ensure that C extension files in non-native gem installations are loaded using <code>require</code> and rely on <code>$LOAD_PATH</code> instead of using <code>require_relative</code>. This issue only exists when deleting shared libraries that exist outside the extensions directory, something users occasionally do to conserve disk space. [#2300]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1121-2021-08-03","text":"","title":"1.12.1 / 2021-08-03"},{"location":"CHANGELOG.html#fixed_4","text":"<ul> <li>[CRuby] Fix compilation of libgumbo on BSD systems by avoiding GNU-isms. [#2298]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1120-2021-08-02","text":"","title":"1.12.0 / 2021-08-02"},{"location":"CHANGELOG.html#notable-addition-html5-support-cruby-only","text":"<p>HTML5 support has been added (to CRuby only) by merging Nokogumbo into Nokogiri. The Nokogumbo public API has been preserved, so this functionality is available under the <code>Nokogiri::HTML5</code> namespace. [#2204]</p> <p>Please note that HTML5 support is not available for JRuby in this version. However, we feel it is important to think about JRuby and we hope to work on this in the future. If you're interested in helping with HTML5 support on JRuby, please reach out to the maintainers by commenting on issue #2227.</p> <p>Many thanks to Sam Ruby, Steve Checkoway, and Craig Barnes for creating and maintaining Nokogumbo and supporting the Gumbo HTML5 parser. They're now Nokogiri core contributors with all the powers and privileges pertaining thereto. \ud83d\ude4c</p>","title":"Notable Addition: HTML5 Support (CRuby only)"},{"location":"CHANGELOG.html#notable-change-nokogirihtml4-module-and-namespace","text":"<p><code>Nokogiri::HTML</code> has been renamed to <code>Nokogiri::HTML4</code>, and <code>Nokogiri::HTML</code> is aliased to preserve backwards-compatibility. <code>Nokogiri::HTML</code> and <code>Nokogiri::HTML4</code> parse methods still use libxml2's (or NekoHTML's) HTML4 parser in the v1.12 release series. </p> <p>Take special note that if you rely on the class name of an object in your code, objects will now report a class of <code>Nokogiri::HTML4::Foo</code> where they previously reported <code>Nokogiri::HTML::Foo</code>. Instead of relying on the string returned by <code>Object#class</code>, prefer <code>Class#===</code> or <code>Object#is_a?</code> or <code>Object#instance_of?</code>.</p> <p>Future releases of Nokogiri may deprecate <code>HTML</code> methods or otherwise change this behavior, so please start using <code>HTML4</code> in place of <code>HTML</code>.</p>","title":"Notable Change: <code>Nokogiri::HTML4</code> module and namespace"},{"location":"CHANGELOG.html#added","text":"<ul> <li>[CRuby] <code>Nokogiri::VERSION_INFO[\"libxslt\"][\"datetime_enabled\"]</code> is a new boolean value which describes whether libxslt (or, more properly, libexslt) has compiled-in datetime support. This generally going to be <code>true</code>, but some distros ship without this support (e.g., some mingw UCRT-based packages, see https://github.com/msys2/MINGW-packages/pull/8957). See #2272 for more details.</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#changed","text":"<ul> <li>Introduce a new constant, <code>Nokogiri::XML::ParseOptions::DEFAULT_XSLT</code>, which adds the libxslt-preferred options of <code>NOENT | DTDLOAD | DTDATTR | NOCDATA</code> to <code>ParseOptions::DEFAULT_XML</code>.</li> <li><code>Nokogiri.XSLT</code> parses stylesheets using <code>ParseOptions::DEFAULT_XSLT</code>, which should make some edge-case XSL transformations match libxslt's default behavior. [#1940]</li> </ul>","title":"Changed"},{"location":"CHANGELOG.html#fixed_5","text":"<ul> <li>[CRuby] Namespaced attributes are handled properly when their parent node is reparented into another document. Previously, the namespace may have gotten dropped. [#2228]</li> <li>[CRuby] Reparented nodes no longer inherit their parent's namespace. Previously, a node without a namespace was forced to adopt its parent's namespace. [#1712]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#improved","text":"<ul> <li>[CRuby] Speed up (slightly) the compile time of packaged libraries <code>libiconv</code>, <code>libxml2</code>, and <code>libxslt</code> by using autoconf's <code>--disable-dependency-tracking</code> option. (\"ruby\" platform gem only.)</li> </ul>","title":"Improved"},{"location":"CHANGELOG.html#deprecated","text":"<ul> <li>Deprecating Nokogumbo's <code>Nokogiri::HTML5.get</code>. This method will be removed in a future version of Nokogiri.</li> </ul>","title":"Deprecated"},{"location":"CHANGELOG.html#dependencies","text":"<ul> <li>[CRuby] Upgrade mini_portile2 dependency from <code>~&gt; 2.5.0</code> to <code>~&gt; 2.6.1</code>. (\"ruby\" platform gem only.)</li> </ul>","title":"Dependencies"},{"location":"CHANGELOG.html#1117-2021-06-02","text":"","title":"1.11.7 / 2021-06-02"},{"location":"CHANGELOG.html#fixed_6","text":"<ul> <li>[CRuby] Backporting an upstream fix to XPath recursion depth limits which impacted some users of complex XPath queries. This issue is present in libxml 2.9.11 and 2.9.12. [#2257]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1116-2021-05-26","text":"","title":"1.11.6 / 2021-05-26"},{"location":"CHANGELOG.html#fixed_7","text":"<ul> <li>[CRuby] <code>DocumentFragment#path</code> now does proper error-checking to handle behavior introduced in libxml &gt; 2.9.10. In v1.11.4 and v1.11.5, calling <code>DocumentFragment#path</code> could result in a segfault.</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1115-2021-05-19","text":"","title":"1.11.5 / 2021-05-19"},{"location":"CHANGELOG.html#fixed_8","text":"<p>[Windows CRuby] Work around segfault at process exit on Windows when using libxml2 system DLLs.</p> <p>libxml 2.9.12 introduced new behavior to avoid memory leaks when unloading libxml2 shared libraries (see libxml/!66). Early testing caught this segfault on non-Windows platforms (see #2059 and libxml@956534e) but it was incompletely fixed and is still an issue on Windows platforms that are using system DLLs.</p> <p>We work around this by configuring libxml2 in this situation to use its default memory management functions. Note that if Nokogiri is not on Windows, or is not using shared system libraries, it will will continue to configure libxml2 to use Ruby's memory management functions. <code>Nokogiri::VERSION_INFO[\"libxml\"][\"memory_management\"]</code> will allow you to verify when the default memory management functions are being used. [#2241]</p>","title":"Fixed"},{"location":"CHANGELOG.html#added_1","text":"<p><code>Nokogiri::VERSION_INFO[\"libxml\"]</code> now contains the key <code>\"memory_management\"</code> to declare whether libxml2 is using its <code>default</code> memory management functions, or whether it uses the memory management functions from <code>ruby</code>. See above for more details.</p>","title":"Added"},{"location":"CHANGELOG.html#1114-2021-05-14","text":"","title":"1.11.4 / 2021-05-14"},{"location":"CHANGELOG.html#security_1","text":"<p>[CRuby] Vendored libxml2 upgraded to v2.9.12 which addresses:</p> <ul> <li>CVE-2019-20388</li> <li>CVE-2020-24977</li> <li>CVE-2021-3517</li> <li>CVE-2021-3518</li> <li>CVE-2021-3537</li> <li>CVE-2021-3541</li> </ul> <p>Note that two additional CVEs were addressed upstream but are not relevant to this release. CVE-2021-3516 via <code>xmllint</code> is not present in Nokogiri, and CVE-2020-7595 has been patched in Nokogiri since v1.10.8 (see #1992).</p> <p>Please see nokogiri/GHSA-7rrm-v45f-jp64  or #2233 for a more complete analysis of these CVEs and patches.</p>","title":"Security"},{"location":"CHANGELOG.html#dependencies_1","text":"<ul> <li>[CRuby] vendored libxml2 is updated from 2.9.10 to 2.9.12. (Note that 2.9.11 was skipped because it was superseded by 2.9.12 a few hours after its release.)</li> </ul>","title":"Dependencies"},{"location":"CHANGELOG.html#1113-2021-04-07","text":"","title":"1.11.3 / 2021-04-07"},{"location":"CHANGELOG.html#fixed_9","text":"<ul> <li>[CRuby] Passing non-<code>Node</code> objects to <code>Document#root=</code> now raises an <code>ArgumentError</code> exception. Previously this likely segfaulted. [#1900]</li> <li>[JRuby] Passing non-<code>Node</code> objects to <code>Document#root=</code> now raises an <code>ArgumentError</code> exception. Previously this raised a <code>TypeError</code> exception.</li> <li>[CRuby] arm64/aarch64 systems (like Apple's M1) can now compile libxml2 and libxslt from source (though we continue to strongly advise users to install the native gems for the best possible experience)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1112-2021-03-11","text":"","title":"1.11.2 / 2021-03-11"},{"location":"CHANGELOG.html#fixed_10","text":"<ul> <li>[CRuby] <code>NodeSet</code> may now safely contain <code>Node</code> objects from multiple documents. Previously the GC lifecycle of the parent <code>Document</code> objects could lead to nodes being GCed while still in scope. [#1952]</li> <li>[CRuby] Patch libxml2 to avoid \"huge input lookup\" errors on large CDATA elements. (See upstream GNOME/libxml2#200 and GNOME/libxml2!100.) [#2132].</li> <li>[CRuby+Windows] Enable Nokogumbo (and other downstream gems) to compile and link against <code>nokogiri.so</code> by including <code>LDFLAGS</code> in <code>Nokogiri::VERSION_INFO</code>. [#2167]</li> <li>[CRuby] <code>{XML,HTML}::Document.parse</code> now invokes <code>#initialize</code> exactly once. Previously <code>#initialize</code> was invoked twice on each object.</li> <li>[JRuby] <code>{XML,HTML}::Document.parse</code> now invokes <code>#initialize</code> exactly once. Previously <code>#initialize</code> was not called, which was a problem for subclassing such as done by <code>Loofah</code>.</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#improved_1","text":"<ul> <li>Reduce the number of object allocations needed when parsing an <code>HTML::DocumentFragment</code>. [#2087] (Thanks, @ashmaroli!)</li> <li>[JRuby] Update the algorithm used to calculate <code>Node#line</code> to be wrong less-often. The underlying parser, Xerces, does not track line numbers, and so we've always used a hacky solution for this method. [#1223, #2177]</li> <li>Introduce <code>--enable-system-libraries</code> and <code>--disable-system-libraries</code> flags to <code>extconf.rb</code>. These flags provide the same functionality as <code>--use-system-libraries</code> and the <code>NOKOGIRI_USE_SYSTEM_LIBRARIES</code> environment variable, but are more idiomatic. [#2193] (Thanks, @eregon!)</li> <li>[TruffleRuby] <code>--disable-static</code> is now the default on TruffleRuby when the packaged libraries are used. This is more flexible and compiles faster. (Note, though, that the default on TR is still to use system libraries.) [#2191, #2193] (Thanks, @eregon!)</li> </ul>","title":"Improved"},{"location":"CHANGELOG.html#changed_1","text":"<ul> <li><code>Nokogiri::XML::Path</code> is now a Module (previously it has been a Class). It has been acting solely as a Module since v1.0.0. See 8461c74.</li> </ul>","title":"Changed"},{"location":"CHANGELOG.html#1111-2021-01-06","text":"","title":"1.11.1 / 2021-01-06"},{"location":"CHANGELOG.html#fixed_11","text":"<ul> <li>[CRuby] If <code>libxml-ruby</code> is loaded before <code>nokogiri</code>, the SAX and Push parsers no longer call <code>libxml-ruby</code>'s handlers. Instead, they defensively override the libxml2 global handler before parsing. [#2168]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1110-2021-01-03","text":"","title":"1.11.0 / 2021-01-03"},{"location":"CHANGELOG.html#notes","text":"","title":"Notes"},{"location":"CHANGELOG.html#faster-more-reliable-installation-native-gems-for-linux-and-osxdarwin","text":"<p>\"Native gems\" contain pre-compiled libraries for a specific machine architecture. On supported platforms, this removes the need for compiling the C extension and the packaged libraries. This results in much faster installation and more reliable installation, which as you probably know are the biggest headaches for Nokogiri users. </p> <p>We've been shipping native Windows gems since 2009, but starting in v1.11.0 we are also shipping native gems for these platforms:</p> <ul> <li>Linux: <code>x86-linux</code> and <code>x86_64-linux</code> -- including musl platforms like alpine</li> <li>OSX/Darwin: <code>x86_64-darwin</code> and <code>arm64-darwin</code></li> </ul> <p>We'd appreciate your thoughts and feedback on this work at #2075.</p>","title":"Faster, more reliable installation: Native Gems for Linux and OSX/Darwin"},{"location":"CHANGELOG.html#dependencies_2","text":"","title":"Dependencies"},{"location":"CHANGELOG.html#ruby","text":"<p>This release introduces support for Ruby 2.7 and 3.0 in the precompiled native gems.</p> <p>This release ends support for:</p> <ul> <li>Ruby 2.3, for which official support ended on 2019-03-31 [#1886] (Thanks @ashmaroli!)</li> <li>Ruby 2.4, for which official support ended on 2020-04-05</li> <li>JRuby 9.1, which is the Ruby 2.3-compatible release.</li> </ul>","title":"Ruby"},{"location":"CHANGELOG.html#gems","text":"<ul> <li>Explicitly add racc as a runtime dependency. [#1988] (Thanks, @voxik!)</li> <li>[MRI] Upgrade mini_portile2 dependency from <code>~&gt; 2.4.0</code> to <code>~&gt; 2.5.0</code> [#2005] (Thanks, @alejandroperea!)</li> </ul>","title":"Gems"},{"location":"CHANGELOG.html#security_2","text":"<p>See note below about CVE-2020-26247 in the \"Changed\" subsection entitled \"XML::Schema parsing treats input as untrusted by default\".</p>","title":"Security"},{"location":"CHANGELOG.html#added_2","text":"<ul> <li>Add Node methods for manipulating \"keyword attributes\" (for example, <code>class</code> and <code>rel</code>): <code>#kwattr_values</code>, <code>#kwattr_add</code>, <code>#kwattr_append</code>, and <code>#kwattr_remove</code>. [#2000]</li> <li>Add support for CSS queries <code>a:has(&gt; b)</code>, <code>a:has(~ b)</code>, and <code>a:has(+ b)</code>. [#688] (Thanks, @jonathanhefner!)</li> <li>Add <code>Node#value?</code> to better match expected semantics of a Hash-like object. [#1838, #1840] (Thanks, @MatzFan!)</li> <li>[CRuby] Add <code>Nokogiri::XML::Node#line=</code> for use by downstream libs like nokogumbo. [#1918] (Thanks, @stevecheckoway!)</li> <li><code>nokogiri.gemspec</code> is back after a 10-year hiatus. We still prefer you use the official releases, but <code>main</code> is pretty stable these days, and YOLO.</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#performance","text":"<ul> <li>[CRuby] The CSS <code>~=</code> operator and class selector <code>.</code> are about 2x faster. [#2137, #2135]</li> <li>[CRuby] Patch libxml2 to call <code>strlen</code> from <code>xmlStrlen</code> rather than the naive implementation, because <code>strlen</code> is generally optimized for the architecture. [#2144] (Thanks, @ilyazub!)</li> <li>Improve performance of some namespace operations. [#1916] (Thanks, @ashmaroli!)</li> <li>Remove unnecessary array allocations from Node serialization methods [#1911] (Thanks, @ashmaroli!)</li> <li>Avoid creation of unnecessary zero-length String objects. [#1970] (Thanks, @ashmaroli!)</li> <li>Always compile libxml2 and libxslt with '-O2' [#2022, #2100] (Thanks, @ilyazub!)</li> <li>[JRuby] Lots of code cleanup and performance improvements. [#1934] (Thanks, @kares!)</li> <li>[CRuby] <code>RelaxNG.from_document</code> no longer leaks memory. [#2114]</li> </ul>","title":"Performance"},{"location":"CHANGELOG.html#improved_2","text":"<ul> <li>[CRuby] Handle incorrectly-closed HTML comments as WHATWG recommends for browsers. [#2058] (Thanks to HackerOne user mayflower for reporting this!)</li> <li><code>{HTML,XML}::Document#parse</code> now accept <code>Pathname</code> objects. Previously this worked only if the referenced file was less than 4096 bytes long; longer files resulted in undefined behavior because the <code>read</code> method would be repeatedly invoked. [#1821, #2110] (Thanks, @doriantaylor and @phokz!)</li> <li>[CRuby] Nokogumbo builds faster because it can now use header files provided by Nokogiri. [#1788] (Thanks, @stevecheckoway!)</li> <li>Add <code>frozen_string_literal: true</code> magic comment to all <code>lib</code> files. [#1745] (Thanks, @oniofchaos!)</li> <li>[JRuby] Clean up deprecated calls into JRuby. [#2027] (Thanks, @headius!)</li> </ul>","title":"Improved"},{"location":"CHANGELOG.html#fixed_12","text":"<ul> <li>HTML Parsing in \"strict\" mode (i.e., the <code>RECOVER</code> parse option not set) now correctly raises a <code>XML::SyntaxError</code> exception. Previously the value of the <code>RECOVER</code> bit was being ignored by CRuby and was misinterpreted by JRuby. [#2130]</li> <li>The CSS <code>~=</code> operator now correctly handles non-space whitespace in the <code>class</code> attribute. commit e45dedd</li> <li>The switch to turn off the CSS-to-XPath cache is now thread-local, rather than being shared mutable state. [#1935]</li> <li>The Node methods <code>add_previous_sibling</code>, <code>previous=</code>, <code>before</code>, <code>add_next_sibling</code>, <code>next=</code>, <code>after</code>, <code>replace</code>, and <code>swap</code> now correctly use their parent as the context node for parsing markup. These methods now also raise a <code>RuntimeError</code> if they are called on a node with no parent. [nokogumbo#160]</li> <li>[JRuby] <code>XML::Schema</code> XSD validation errors are captured in <code>XML::Schema#errors</code>. These errors were previously ignored.</li> <li>[JRuby] Standardize reading from IO like objects, including StringIO. [#1888, #1897]</li> <li>[JRuby] Fix how custom XPath function namespaces are inferred to be less naive. [#1890, #2148]</li> <li>[JRuby] Clarify exception message when custom XPath functions can't be resolved.</li> <li>[JRuby] Comparison of Node to Document with <code>Node#&lt;=&gt;</code> now matches CRuby/libxml2 behavior.</li> <li>[CRuby] Syntax errors are now correctly captured in <code>Document#errors</code> for short HTML documents. Previously the SAX parser used for encoding detection was clobbering libxml2's global error handler.</li> <li>[CRuby] Fixed installation on AIX with respect to <code>vasprintf</code>. [#1908]</li> <li>[CRuby] On some platforms, avoid symbol name collision with glibc's <code>canonicalize</code>. [#2105]</li> <li>[Windows Visual C++] Fixed compiler warnings and errors. [#2061, #2068]</li> <li>[CRuby] Fixed Nokogumbo integration which broke in the v1.11.0 release candidates. [#1788] (Thanks, @stevecheckoway!)</li> <li>[JRuby] Fixed document encoding regression in v1.11.0 release candidates. [#2080, #2083] (Thanks, @thbar!)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#removed","text":"<ul> <li>The internal method <code>Nokogiri::CSS::Parser.cache_on=</code> has been removed. Use <code>.set_cache</code> if you need to muck with the cache internals.</li> <li>The class method <code>Nokogiri::CSS::Parser.parse</code> has been removed. This was originally deprecated in 2009 in 13db61b. Use <code>Nokogiri::CSS.parse</code> instead.</li> </ul>","title":"Removed"},{"location":"CHANGELOG.html#changed_2","text":"","title":"Changed"},{"location":"CHANGELOG.html#xmlschema-input-is-now-untrusted-by-default","text":"<p>Address CVE-2020-26247.</p> <p>In Nokogiri versions &lt;= 1.11.0.rc3, XML Schemas parsed by <code>Nokogiri::XML::Schema</code> were trusted by default, allowing external resources to be accessed over the network, potentially enabling XXE or SSRF attacks.</p> <p>This behavior is counter to the security policy intended by Nokogiri maintainers, which is to treat all input as untrusted by default whenever possible.</p> <p>Please note that this security fix was pushed into a new minor version, 1.11.x, rather than a patch release to the 1.10.x branch, because it is a breaking change for some schemas and the risk was assessed to be \"Low Severity\".</p> <p>More information and instructions for enabling \"trusted input\" behavior in v1.11.0.rc4 and later is available at the public advisory.</p>","title":"<code>XML::Schema</code> input is now \"untrusted\" by default"},{"location":"CHANGELOG.html#html-parser-now-obeys-the-strict-or-norecover-parsing-option","text":"<p>(Also noted above in the \"Fixed\" section) HTML Parsing in \"strict\" mode (i.e., the <code>RECOVER</code> parse option not set) now correctly raises a <code>XML::SyntaxError</code> exception. Previously the value of the <code>RECOVER</code> bit was being ignored by CRuby and was misinterpreted by JRuby.</p> <p>If you're using the default parser options, you will be unaffected by this fix. If you're passing <code>strict</code> or <code>norecover</code> to your HTML parser call, you may be surprised to see that the parser now fails to recover and raises a <code>XML::SyntaxError</code> exception. Given the number of HTML documents on the internet that libxml2 would consider to be ill-formed, this is probably not what you want, and you can omit setting that parse option to restore the behavior that you have been relying upon.</p> <p>Apologies to anyone inconvenienced by this breaking bugfix being present in a minor release, but I felt it was appropriate to introduce this fix because it's straightforward to fix any code that has been relying on this buggy behavior.</p>","title":"HTML parser now obeys the <code>strict</code> or <code>norecover</code> parsing option"},{"location":"CHANGELOG.html#versioninfo-the-output-of-nokogiri-v-and-related-constants","text":"<p>This release changes the metadata provided in <code>Nokogiri::VersionInfo</code> which also affects the output of <code>nokogiri -v</code>. Some related constants have also been changed. If you're using <code>VersionInfo</code> programmatically, or relying on constants related to underlying library versions, please read the detailed changes for <code>Nokogiri::VersionInfo</code> at #2139 and accept our apologies for the inconvenience.</p>","title":"<code>VersionInfo</code>, the output of <code>nokogiri -v</code>, and related constants"},{"location":"CHANGELOG.html#11010-2020-07-06","text":"","title":"1.10.10 / 2020-07-06"},{"location":"CHANGELOG.html#features","text":"<ul> <li>[MRI] Cross-built Windows gems now support Ruby 2.7 [#2029]. Note that prior to this release, the v1.11.x prereleases provided this support.</li> </ul>","title":"Features"},{"location":"CHANGELOG.html#1109-2020-03-01","text":"","title":"1.10.9 / 2020-03-01"},{"location":"CHANGELOG.html#fixed_13","text":"<ul> <li>[MRI] Raise an exception when Nokogiri detects a specific libxml2 edge case involving blank Schema nodes wrapped by Ruby objects that would cause a segfault. Currently no fix is available upstream, so we're preventing a dangerous operation and informing users to code around it if possible. [#1985, #2001]</li> <li>[JRuby] Change <code>NodeSet#to_a</code> to return a RubyArray instead of Object, for compilation under JRuby 9.2.9 and later. [#1968, #1969] (Thanks, @headius!)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1108-2020-02-10","text":"","title":"1.10.8 / 2020-02-10"},{"location":"CHANGELOG.html#security_3","text":"<p>[MRI] Pulled in upstream patch from libxml that addresses CVE-2020-7595. Full details are available in #1992. Note that this patch is not yet (as of 2020-02-10) in an upstream release of libxml.</p>","title":"Security"},{"location":"CHANGELOG.html#1107-2019-12-03","text":"","title":"1.10.7 / 2019-12-03"},{"location":"CHANGELOG.html#fixed_14","text":"<ul> <li>[MRI] Ensure the patch applied in v1.10.6 works with GNU <code>patch</code>. [#1954]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1106-2019-12-03","text":"","title":"1.10.6 / 2019-12-03"},{"location":"CHANGELOG.html#fixed_15","text":"<ul> <li>[MRI] Fix FreeBSD installation of vendored libxml2. [#1941, #1953] (Thanks, @nurse!)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1105-2019-10-31","text":"","title":"1.10.5 / 2019-10-31"},{"location":"CHANGELOG.html#security_4","text":"<p>[MRI] Vendored libxslt upgraded to v1.1.34 which addresses three CVEs for libxslt:</p> <ul> <li>CVE-2019-13117</li> <li>CVE-2019-13118</li> <li>CVE-2019-18197</li> <li>CVE-2019-19956</li> </ul> <p>More details are available at #1943.</p>","title":"Security"},{"location":"CHANGELOG.html#dependencies_3","text":"<ul> <li>[MRI] vendored libxml2 is updated from 2.9.9 to 2.9.10</li> <li>[MRI] vendored libxslt is updated from 1.1.33 to 1.1.34</li> </ul>","title":"Dependencies"},{"location":"CHANGELOG.html#1104-2019-08-11","text":"","title":"1.10.4 / 2019-08-11"},{"location":"CHANGELOG.html#security_5","text":"<p>Address CVE-2019-5477 (#1915).</p> <p>A command injection vulnerability in Nokogiri v1.10.3 and earlier allows commands to be executed in a subprocess by Ruby's <code>Kernel.open</code> method. Processes are vulnerable only if the undocumented method <code>Nokogiri::CSS::Tokenizer#load_file</code> is being passed untrusted user input.</p> <p>This vulnerability appears in code generated by the Rexical gem versions v1.0.6 and earlier. Rexical is used by Nokogiri to generate lexical scanner code for parsing CSS queries. The underlying vulnerability was addressed in Rexical v1.0.7 and Nokogiri upgraded to this version of Rexical in Nokogiri v1.10.4.</p> <p>This CVE's public notice is #1915</p>","title":"Security"},{"location":"CHANGELOG.html#1103-2019-04-22","text":"","title":"1.10.3 / 2019-04-22"},{"location":"CHANGELOG.html#security_6","text":"<p>[MRI] Pulled in upstream patch from libxslt that addresses CVE-2019-11068. Full details are available in #1892. Note that this patch is not yet (as of 2019-04-22) in an upstream release of libxslt.</p>","title":"Security"},{"location":"CHANGELOG.html#1102-2019-03-24","text":"","title":"1.10.2 / 2019-03-24"},{"location":"CHANGELOG.html#security_7","text":"<ul> <li>[MRI] Remove support from vendored libxml2 for future script macros. [#1871]</li> <li>[MRI] Remove support from vendored libxml2 for server-side includes within attributes. [#1877]</li> </ul>","title":"Security"},{"location":"CHANGELOG.html#fixed_16","text":"<ul> <li>[JRuby] Fix node ownership in duplicated documents. [#1060]</li> <li>[JRuby] Rethrow exceptions caught by Java SAX handler. [#1847, #1872] (Thanks, @adjam!)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1101-2019-01-13","text":"","title":"1.10.1 / 2019-01-13"},{"location":"CHANGELOG.html#added_3","text":"<ul> <li>[MRI] During installation, handle Xcode 10's new library path. [#1801, #1851] (Thanks, @mlj and @deepj!)</li> <li>Avoid unnecessary creation of <code>Proc</code>s in many methods. [#1776] (Thanks, @chopraanmol1!)</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_17","text":"<ul> <li>CSS selector <code>:has()</code> now correctly matches against any descendant. Previously this selector matched against only direct children). [#350] (Thanks, @Phrogz!)</li> <li><code>NodeSet#attr</code> now returns <code>nil</code> if it's empty. Previously this raised a NoMethodError.</li> <li>[MRI] XPath errors are no longer suppressed during <code>XSLT::Stylesheet#transform</code>. Previously these errors were suppressed which led to silent failures and a subsequent segfault. [#1802]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1100-2019-01-04","text":"","title":"1.10.0 / 2019-01-04"},{"location":"CHANGELOG.html#added_4","text":"<ul> <li>[MRI] Cross-built Windows gems now support Ruby 2.6 [#1842, #1850]</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#dependencies_4","text":"<ul> <li>This release ends support for Ruby 2.2, for which official support ended on 2018-03-31 [#1841]</li> <li>This release ends support for JRuby 1.7, for which official support ended on 2017-11-21 [#1741]</li> <li>[MRI] libxml2 is updated from 2.9.8 to 2.9.9</li> <li>[MRI] libxslt is updated from 1.1.32 to 1.1.33</li> </ul>","title":"Dependencies"},{"location":"CHANGELOG.html#191-2018-12-17","text":"","title":"1.9.1 / 2018-12-17"},{"location":"CHANGELOG.html#fixed_18","text":"<ul> <li>Fix a bug introduced in v1.9.0 where <code>XML::DocumentFragment#dup</code> no longer returned an instance of the callee's class, instead always returning an <code>XML::DocumentFragment</code>. This notably broke any subclass of <code>XML::DocumentFragment</code> including <code>HTML::DocumentFragment</code> as well as the Loofah gem's <code>Loofah::HTML::DocumentFragment</code>. [#1846]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#190-2018-12-17","text":"","title":"1.9.0 / 2018-12-17"},{"location":"CHANGELOG.html#security_8","text":"<ul> <li>[JRuby] Upgrade Xerces dependency from 2.11.0 to 2.12.0 to address upstream vulnerability CVE-2012-0881 [#1831] (Thanks @grajagandev for reporting.)</li> </ul>","title":"Security"},{"location":"CHANGELOG.html#improved_3","text":"<ul> <li>Decrease installation size by removing many unneeded files (e.g., <code>/test</code>) from the packaged gems. [#1719] (Thanks, @stevecrozz!)</li> </ul>","title":"Improved"},{"location":"CHANGELOG.html#added_5","text":"<ul> <li><code>XML::Attr#value=</code> allows HTML node attribute values to be set to either a blank string or an empty boolean attribute. [#1800]</li> <li>Introduce <code>XML::Node#wrap</code> which does what <code>XML::NodeSet#wrap</code> has always done, but for a single node. [#1531] (Thanks, @ethirajsrinivasan!)</li> <li>[MRI] Improve installation experience on macOS High Sierra (Darwin). [#1812, #1813] (Thanks, @gpakosz and @nurse!)</li> <li>[MRI] <code>Node#dup</code> supports copying a node directly to a new document. See the method documentation for details.</li> <li>[MRI] <code>DocumentFragment#dup</code> is now more memory-efficient, avoiding making unnecessary copies. [#1063]</li> <li>[JRuby] <code>NodeSet</code> has been rewritten to improve performance! [#1795]</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_19","text":"<ul> <li><code>NodeSet#each</code> now returns <code>self</code> instead of zero. [#1822] (Thanks, @olehif!)</li> <li>[MRI] Address a memory leak when using <code>XML::Builder</code> to create nodes with namespaces. [#1810]</li> <li>[MRI] Address a memory leak when unparenting a DTD. [#1784] (Thanks, @stevecheckoway!)</li> <li>[MRI] Use <code>RbConfig::CONFIG</code> instead of <code>::MAKEFILE_CONFIG</code> to fix installations that use Makefile macros. [#1820] (Thanks, @nobu!)</li> <li>[JRuby] Decrease large memory usage when making nested XPath queries. [#1749]</li> <li>[JRuby] Fix failing tests on JRuby 9.2.x</li> <li>[JRuby] Fix default namespaces in nodes reparented into a different document [#1774]</li> <li>[JRuby] Fix support for Java 9. [#1759] (Thanks, @Taywee!)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#dependencies_5","text":"<ul> <li>[MRI] Upgrade mini_portile2 dependency from <code>~&gt; 2.3.0</code> to <code>~&gt; 2.4.0</code></li> </ul>","title":"Dependencies"},{"location":"CHANGELOG.html#185-2018-10-04","text":"","title":"1.8.5 / 2018-10-04"},{"location":"CHANGELOG.html#security_9","text":"<p>[MRI] Pulled in upstream patches from libxml2 that address CVE-2018-14404 and CVE-2018-14567. Full details are available in #1785. Note that these patches are not yet (as of 2018-10-04) in an upstream release of libxml2.</p>","title":"Security"},{"location":"CHANGELOG.html#fixed_20","text":"<ul> <li>[MRI] Fix regression in installation when building against system libraries, where some systems would not be able to find libxml2 or libxslt when present. (Regression introduced in v1.8.3.) [#1722]</li> <li>[JRuby] Fix node reparenting when the destination doc is empty. [#1773]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#184-2018-07-03","text":"","title":"1.8.4 / 2018-07-03"},{"location":"CHANGELOG.html#fixed_21","text":"<ul> <li>[MRI] Fix memory leak when creating nodes with namespaces. (Introduced in v1.5.7) [#1771]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#183-2018-06-16","text":"","title":"1.8.3 / 2018-06-16"},{"location":"CHANGELOG.html#security_10","text":"<p>[MRI] Behavior in libxml2 has been reverted which caused CVE-2018-8048 (loofah gem), CVE-2018-3740 (sanitize gem), and CVE-2018-3741 (rails-html-sanitizer gem). The commit in question is here:</p>  <p>https://github.com/GNOME/libxml2/commit/960f0e2</p>  <p>and more information is available about this commit and its impact here:</p>  <p>https://github.com/flavorjones/loofah/issues/144</p>  <p>This release simply reverts the libxml2 commit in question to protect users of Nokogiri's vendored libraries from similar vulnerabilities.</p> <p>If you're offended by what happened here, I'd kindly ask that you comment on the upstream bug report here:</p>  <p>https://bugzilla.gnome.org/show_bug.cgi?id=769760</p>","title":"Security"},{"location":"CHANGELOG.html#more-security","text":"<p>[MRI] Vendored libxml2 upgraded to v2.9.8 which addresses CVE-2016-9318 [#1582].</p>","title":"More Security"},{"location":"CHANGELOG.html#dependencies_6","text":"<ul> <li>[MRI] libxml2 is updated from 2.9.7 to 2.9.8</li> </ul>","title":"Dependencies"},{"location":"CHANGELOG.html#added_6","text":"<ul> <li><code>Node#classes</code>, <code>#add_class</code>, <code>#append_class</code>, and <code>#remove_class</code> are added.</li> <li><code>NodeSet#append_class</code> is added.</li> <li><code>NodeSet#remove_attribute</code> is a new alias for <code>NodeSet#remove_attr</code>.</li> <li><code>NodeSet#each</code> now returns an <code>Enumerator</code> when no block is passed (Thanks, @park53kr!)</li> <li>[JRuby] General improvements in JRuby implementation (Thanks, @kares!)</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_22","text":"<ul> <li>CSS attribute selectors now gracefully handle queries using integers. [#711]</li> <li>Handle ASCII-8BIT encoding on fragment input [#553]</li> <li>Handle non-string return values within <code>Reader</code> [#898]</li> <li>[JRuby] Allow <code>Node#replace</code> to insert Comment and CDATA nodes. [#1666]</li> <li>[JRuby] Stability and speed improvements to <code>Node</code>, <code>Sax::PushParser</code>, and the JRuby implementation [#1708, #1710, #1501]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#182-2018-01-29","text":"","title":"1.8.2 / 2018-01-29"},{"location":"CHANGELOG.html#security_11","text":"<p>[MRI] The update of vendored libxml2 from 2.9.5 to 2.9.7 addresses at least one published vulnerability, CVE-2017-15412. [#1714 has complete details]</p>","title":"Security"},{"location":"CHANGELOG.html#dependencies_7","text":"<ul> <li>[MRI] libxml2 is updated from 2.9.5 to 2.9.7</li> <li>[MRI] libxslt is updated from 1.1.30 to 1.1.32</li> </ul>","title":"Dependencies"},{"location":"CHANGELOG.html#added_7","text":"<ul> <li>[MRI] OpenBSD installation should be a bit easier now. [#1685] (Thanks, @jeremyevans!)</li> <li>[MRI] Cross-built Windows gems now support Ruby 2.5</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_23","text":"<ul> <li><code>Node#serialize</code> once again returns UTF-8-encoded strings. [#1659]</li> <li>[JRuby] made SAX parsing of characters consistent with C implementation [#1676] (Thanks, [@andrew](https://github.com/andrew)-aladev!)</li> <li>[MRI] Predefined entities, when inspected, no longer cause a segfault. [#1238]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#181-2017-09-19","text":"","title":"1.8.1 / 2017-09-19"},{"location":"CHANGELOG.html#dependencies_8","text":"<ul> <li>[MRI] libxml2 is updated from 2.9.4 to 2.9.5.</li> <li>[MRI] libxslt is updated from 1.1.29 to 1.1.30.</li> <li>[MRI] optional dependency on the pkg-config gem has had its constraint loosened to <code>~&gt; 1.1</code> (from <code>~&gt; 1.1.7</code>). [#1660]</li> <li>[MRI] Upgrade mini_portile2 dependency from <code>~&gt; 2.2.0</code> to <code>~&gt; 2.3.0</code>, which will validate checksums on the vendored libxml2 and libxslt tarballs before using them.</li> </ul>","title":"Dependencies"},{"location":"CHANGELOG.html#fixed_24","text":"<ul> <li><code>NodeSet#first</code> with an integer argument longer than the length of the <code>NodeSet</code> now correctly clamps the length of the returned <code>NodeSet</code> to the original length. [#1650] (Thanks, @Derenge!)</li> <li>[MRI] Ensure CData.new raises TypeError if the <code>content</code> argument is not implicitly convertible into a string. [#1669]</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#180-2017-06-04","text":"","title":"1.8.0 / 2017-06-04"},{"location":"CHANGELOG.html#dependencies_9","text":"<p>This release ends support for Ruby 2.1 on Windows in the <code>x86-mingw32</code> and <code>x64-mingw32</code> platform gems (containing pre-compiled DLLs). Official support ended for Ruby 2.1 on 2017-04-01.</p> <p>Please note that this deprecation note only applies to the precompiled Windows gems. Ruby 2.1 continues to be supported (for now) in the default gem when compiled on installation.</p>","title":"Dependencies"},{"location":"CHANGELOG.html#dependencies_10","text":"<ul> <li>[Windows] Upgrade iconv from 1.14 to 1.15 (unless --use-system-libraries)</li> <li>[Windows] Upgrade zlib from 1.2.8 to 1.2.11 (unless --use-system-libraries)</li> <li>[MRI] Upgrade rake-compiler dependency from 0.9.2 to 1.0.3</li> <li>[MRI] Upgrade mini-portile2 dependency from <code>~&gt; 2.1.0</code> to <code>~&gt; 2.2.0</code></li> <li>[JRuby] Removed support for <code>jruby --1.8</code> code paths. [#1607] (Thanks, @kares!)</li> <li>[MRI Windows] Retrieve zlib source from http://zlib.net/fossils to avoid deprecation issues going forward. See #1632 for details around this problem.</li> </ul>","title":"Dependencies"},{"location":"CHANGELOG.html#added_8","text":"<ul> <li><code>NodeSet#clone</code> is now an alias for <code>NodeSet#dup</code> [#1503] (Thanks, @stephankaag!)</li> <li>Allow Processing Instructions and Comments as children of a document root. [#1033] (Thanks, @windwiny!)</li> <li>[MRI] <code>PushParser#replace_entities</code> and <code>#replace_entities=</code> will control whether entities are replaced or not. [#1017] (Thanks, @spraints!)</li> <li>[MRI] <code>SyntaxError#to_s</code> now includes line number, column number, and log level if made available by the parser. [#1304, #1637] (Thanks, @spk and @ccarruitero!)</li> <li>[MRI] Cross-built Windows gems now support Ruby 2.4</li> <li>[MRI] Support for frozen string literals. [#1413]</li> <li>[MRI] Support for installing Nokogiri on a machine in FIPS-enabled mode [#1544]</li> <li>[MRI] Vendored libraries are verified with SHA-256 hashes (formerly some MD5 hashes were used) [#1544]</li> <li>[JRuby] (performance) remove unnecessary synchronization of class-cache [#1563] (Thanks, @kares!)</li> <li>[JRuby] (performance) remove unnecessary cloning of objects in XPath searches [#1563] (Thanks, @kares!)</li> <li>[JRuby] (performance) more performance improvements, particularly in XPath, Reader, XmlNode, and XmlNodeSet [#1597] (Thanks, @kares!)</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_25","text":"<ul> <li><code>HTML::SAX::Parser#parse_io</code> now correctly parses HTML and not XML [#1577] (Thanks for the test case, @gregors!)</li> <li>Support installation on systems with a <code>lib64</code> site config. [#1562]</li> <li>[MRI] on OpenBSD, do not require gcc if using system libraries [#1515] (Thanks, @jeremyevans!)</li> <li>[MRI] <code>XML::Attr.new</code> checks type of Document arg to prevent segfaults. [#1477]</li> <li>[MRI] Prefer xmlCharStrdup (and friends) to strdup (and friends), which can cause problems on some platforms. [#1517] (Thanks, @jeremy!)</li> <li>[JRuby] correctly append a text node before another text node [#1318] (Thanks, @jkraemer!)</li> <li>[JRuby] custom xpath functions returning an integer now work correctly [#1595] (Thanks, @kares!)</li> <li>[JRuby] serializing (<code>#to_html</code>, <code>#to_s</code>, et al) a document with explicit encoding now works correctly. [#1281, #1440] (Thanks, @kares!)</li> <li>[JRuby] <code>XML::Reader</code> now returns parse errors [#1586] (Thanks, @kares!)</li> <li>[JRuby] Empty <code>NodeSet</code>s are now decorated properly. [#1319] (Thanks, @kares!)</li> <li>[JRuby] Merged nodes no longer results in Java exceptions during XPath queries. [#1320] (Thanks, @kares!)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#172-2017-05-09","text":"","title":"1.7.2 / 2017-05-09"},{"location":"CHANGELOG.html#security_12","text":"<p>[MRI] Upstream libxslt patches are applied to the vendored libxslt 1.1.29 which address CVE-2017-5029 and CVE-2016-4738.</p> <p>For more information:</p> <ul> <li>#1634</li> <li>http://people.canonical.com/~ubuntu-security/cve/2017/CVE-2017-5029.html</li> <li>http://people.canonical.com/~ubuntu-security/cve/2016/CVE-2016-4738.html</li> </ul>","title":"Security"},{"location":"CHANGELOG.html#171-2017-03-19","text":"","title":"1.7.1 / 2017-03-19"},{"location":"CHANGELOG.html#security_13","text":"<p>[MRI] Upstream libxml2 patches are applied to the vendored libxml 2.9.4 which address CVE-2016-4658 and CVE-2016-5131.</p> <p>For more information:</p> <ul> <li>#1615</li> <li>http://people.canonical.com/~ubuntu-security/cve/2016/CVE-2016-4658.html</li> <li>http://people.canonical.com/~ubuntu-security/cve/2016/CVE-2016-5131.html</li> </ul>","title":"Security"},{"location":"CHANGELOG.html#1701-2017-01-04","text":"","title":"1.7.0.1 / 2017-01-04"},{"location":"CHANGELOG.html#fixed_26","text":"<ul> <li>Fix OpenBSD support. (#1569) (related to #1543)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#170-2016-12-26","text":"","title":"1.7.0 / 2016-12-26"},{"location":"CHANGELOG.html#added_9","text":"<ul> <li>Remove deprecation warnings in Ruby 2.4.0 (#1545) (Thanks, @matthewd!)</li> <li>Support egcc compiler on OpenBSD (#1543) (Thanks, @frenkel and @knu!)</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#dependencies_11","text":"<p>This release ends support for:</p> <ul> <li>Ruby 1.9.2, for which official support ended on 2014-07-31</li> <li>Ruby 1.9.3, for which official support ended on 2015-02-23</li> <li>Ruby 2.0.0, for which official support ended on 2016-02-24</li> <li>MacRuby, which hasn't been actively supported since 2015-01-13 (see https://github.com/MacRuby/MacRuby/commit/f76b9d6e99c18236db617e8aceb12c27d593a483)</li> </ul>","title":"Dependencies"},{"location":"CHANGELOG.html#1681-2016-10-03","text":"","title":"1.6.8.1 / 2016-10-03"},{"location":"CHANGELOG.html#dependencies_12","text":"<p>Removes required dependency on the <code>pkg-config</code> gem. This dependency was introduced in v1.6.8 and, because it's distributed under LGPL, was objectionable to many Nokogiri users (#1488, #1496).</p> <p>This version makes <code>pkg-config</code> an optional dependency. If it's installed, it's used; but otherwise Nokogiri will attempt to work around its absence.</p>","title":"Dependencies"},{"location":"CHANGELOG.html#168-2016-06-06","text":"","title":"1.6.8 / 2016-06-06"},{"location":"CHANGELOG.html#security_14","text":"<p>[MRI] Bundled libxml2 is upgraded to 2.9.4, which fixes many security issues. Many of these had previously been patched in the vendored libxml 2.9.2 in the 1.6.7.x branch, but some are newer.</p> <p>See these libxml2 email posts for more:</p> <ul> <li>https://mail.gnome.org/archives/xml/2015-November/msg00012.html</li> <li>https://mail.gnome.org/archives/xml/2016-May/msg00023.html</li> </ul> <p>For a more detailed analysis, you may care to read Canonical's take on these security issues:</p> <ul> <li>http://www.ubuntu.com/usn/usn-2994-1</li> </ul> <p>[MRI] Bundled libxslt is upgraded to 1.1.29, which fixes a security issue as well as many long-known outstanding bugs, some features, some portability improvements, and general cleanup.</p> <p>See this libxslt email post for more:</p> <ul> <li>https://mail.gnome.org/archives/xslt/2016-May/msg00004.html</li> </ul>","title":"Security"},{"location":"CHANGELOG.html#added_10","text":"<p>Several changes were made to improve performance:</p> <ul> <li>[MRI] Simplify <code>NodeSet#to_a</code> with a minor speed-up. (#1397)</li> <li><code>XML::Node#ancestors</code> optimization. (#1297) (Thanks, Bruno Sutic!)</li> <li>Use <code>Symbol#to_proc</code> where we weren't previously. (#1296) (Thanks, Bruno Sutic!)</li> <li><code>XML::DTD#each</code> uses implicit block calls. (Thanks, @glaucocustodio!)</li> <li>Fall back to the <code>pkg-config</code> gem if we're having trouble finding the system libxml2. This should help many FreeBSD users. (#1417)</li> <li>Set document encoding appropriately even on blank document. (#1043) (Thanks, @batter!)</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_27","text":"<ul> <li>[JRuby] fix slow add_child (#692)</li> <li>[JRuby] fix load errors when deploying to JRuby/Torquebox (#1114) (Thanks, @atambo and @jvshahid!)</li> <li>[JRuby] fix NPE when inspecting nodes returned by <code>NodeSet#drop</code> (#1042) (Thanks, @mkristian!)</li> <li>[JRuby] fix nil attriubte node's namespace in reader (#1327) (Thanks, @codekitchen!)</li> <li>[JRuby] fix Nokogiri munging unicode characters that require more than 2 bytes (#1113) (Thanks, @mkristian!)</li> <li>[JRuby] allow unlinking an unparented node (#1112, #1152) (Thanks, @esse!)</li> <li>[JRuby] allow Fragment parsing on a frozen string (#444, #1077)</li> <li>[JRuby] HTML <code>style</code> tags are no longer encoded (#1316) (Thanks, @tbeauvais!)</li> <li>[MRI] fix assertion failure while accessing attribute node's namespace in reader (#843) (Thanks, @2potatocakes!)</li> <li>[MRI] fix issue with GCing namespace nodes returned in an xpath query. (#1155)</li> <li>[MRI] Ensure C strings are null-terminated. (#1381)</li> <li>[MRI] Ensure Rubygems is loaded before using mini_portile2 at installation. (#1393, #1411) (Thanks, @JonRowe!)</li> <li>[MRI] Handling another edge case where the <code>libxml-ruby</code> gem's global callbacks were smashing the heap. (#1426). (Thanks to @bbergstrom for providing an isolated test case!)</li> <li>[MRI] Ensure encodings are passed to <code>Sax::Parser</code> xmldecl callback. (#844)</li> <li>[MRI] Ensure default ns prefix is applied correctly when reparenting nodes to another document. (#391) (Thanks, @ylecuyer!)</li> <li>[MRI] Ensure Reader handles non-existent attributes as expected. (#1254) (Thanks, @ccutrer!)</li> <li>[MRI] Cleanup around namespace handling when reparenting nodes. (#1332, #1333, #1444) (Thanks, @cuttrer and @bradleybeddoes!)</li> <li>unescape special characters in CSS queries (#1303) (Thanks, @twalpole!)</li> <li>consistently handle empty documents (#1349)</li> <li>Update to mini_portile2 2.1.0 to address whitespace-handling during patching. (#1402)</li> <li>Fix encoding of xml node namespaces.</li> <li>Work around issue installing Nokogiri on overlayfs (commonly used in Docker containers). (#1370, #1405)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#notes_1","text":"<ul> <li>Removed legacy code remaining from Ruby 1.8.x support.</li> <li>Removed legacy code remaining from REE support.</li> <li>Removing hacky workarounds for bugs in some older versions of libxml2.</li> <li>Handling C strings in a forward-compatible manner, see https://github.com/ruby/ruby/blob/v2_2_0/NEWS#L319</li> </ul>","title":"Notes"},{"location":"CHANGELOG.html#1672-2016-01-20","text":"<p>This version pulls in several upstream patches to the vendored libxml2 and libxslt to address:</p> <ul> <li>CVE-2015-7499</li> </ul> <p>Ubuntu classifies this as \"Priority: Low\", RedHat classifies this as \"Impact: Moderate\", and NIST classifies this as \"Severity: 5.0 (MEDIUM)\".</p> <p>MITRE record is https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-7499</p>","title":"1.6.7.2 / 2016-01-20"},{"location":"CHANGELOG.html#1671-2015-12-16","text":"<p>This version pulls in several upstream patches to the vendored libxml2 and libxslt to address:</p> <ul> <li>CVE-2015-5312</li> <li>CVE-2015-7497</li> <li>CVE-2015-7498</li> <li>CVE-2015-7499</li> <li>CVE-2015-7500</li> <li>CVE-2015-8241</li> <li>CVE-2015-8242</li> <li>CVE-2015-8317</li> </ul> <p>See also http://www.ubuntu.com/usn/usn-2834-1/</p>","title":"1.6.7.1 / 2015-12-16"},{"location":"CHANGELOG.html#167-2015-11-29","text":"","title":"1.6.7 / 2015-11-29"},{"location":"CHANGELOG.html#added_11","text":"<p>This version supports native builds on Windows using the RubyInstaller DevKit. It also supports Ruby 2.2.x on Windows, as well as making several other improvements to the installation process on various platforms.</p>","title":"Added"},{"location":"CHANGELOG.html#security_15","text":"<p>This version also includes the security patches already applied in v1.6.6.3 and v1.6.6.4 to the vendored libxml2 and libxslt source. See #1374 and #1376 for details.</p>","title":"Security"},{"location":"CHANGELOG.html#added_12","text":"<ul> <li>Cross-built gems now have a proper ruby version requirement. (#1266)</li> <li>Ruby 2.2.x is supported on Windows.</li> <li>Native build is supported on Windows.</li> <li>[MRI] libxml2 and libxslt <code>config.guess</code> files brought up to date. (#1326) (Thanks, [@hernan](https://github.com/hernan)-erasmo!)</li> <li>[JRuby] fix error in validating files with jruby (#1355, #1361) (Thanks, @twalpole!)</li> <li>[MRI, OSX] Patch to handle nonstandard location of <code>iconv.h</code>. (#1206, #1210, #1218, #1345) (Thanks, @neonichu!)</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_28","text":"<ul> <li>[JRuby] reset the namespace cache when replacing the document's innerHtml (#1265) (Thanks, @mkristian!)</li> <li>[JRuby] <code>Document#parse</code> should support IO objects that respond to <code>#read</code>. (#1124) (Thanks, Jake Byman!)</li> <li>[MRI] Duplicate-id errors when setting the <code>id</code> attribute on HTML documents are now silenced. (#1262)</li> <li>[JRuby] SAX parser cuts texts in pieces when square brackets exist. (#1261)</li> <li>[JRuby] Namespaced attributes aren't removed by remove_attribute. (#1299)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1664-2015-11-19","text":"<p>This version pulls in an upstream patch to the vendored libxml2 to address:</p> <ul> <li>unclosed comment uninitialized access issue (#1376)</li> </ul> <p>This issue was assigned CVE-2015-8710 after the fact. See http://seclists.org/oss-sec/2015/q4/616 for details.</p>","title":"1.6.6.4 / 2015-11-19"},{"location":"CHANGELOG.html#1663-2015-11-16","text":"<p>This version pulls in several upstream patches to the vendored libxml2 and libxslt to address:</p> <ul> <li>CVE-2015-1819</li> <li>CVE-2015-7941_1</li> <li>CVE-2015-7941_2</li> <li>CVE-2015-7942</li> <li>CVE-2015-7942-2</li> <li>CVE-2015-8035</li> <li>CVE-2015-7995</li> </ul> <p>See #1374 for details.</p>","title":"1.6.6.3 / 2015-11-16"},{"location":"CHANGELOG.html#1662-2015-01-23","text":"","title":"1.6.6.2 / 2015-01-23"},{"location":"CHANGELOG.html#fixed_29","text":"<ul> <li>Fixed installation issue affecting compiler arguments. (#1230)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1661-2015-01-22","text":"<p>Note that 1.6.6.0 was not released.</p>","title":"1.6.6.1 / 2015-01-22"},{"location":"CHANGELOG.html#added_13","text":"<ul> <li>Unified <code>Node</code> and <code>NodeSet</code> implementations of <code>#search</code>, <code>#xpath</code> and <code>#css</code>.</li> <li>Added <code>Node#lang</code> and <code>Node#lang=</code>.</li> <li><code>bin/nokogiri</code> passes the URI to <code>parse()</code> if an HTTP URL is given.</li> <li><code>bin/nokogiri</code> now loads <code>~/.nokogirirc</code> so user can define helper methods, etc.</li> <li><code>bin/nokogiri</code> can be configured to use Pry instead of IRB by adding a couple of lines to ~/.nokogirirc. (#1198)</li> <li><code>bin/nokogiri</code> can better handle urls from STDIN (aiding use of xargs). (#1065)</li> <li>JRuby 9K support.</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_30","text":"<ul> <li><code>DocumentFragment#search</code> now matches against root nodes. (#1205)</li> <li>(MRI) More fixes related to handling libxml2 parse errors during <code>DocumentFragment#dup</code>. (#1196)</li> <li>(JRuby) Builder now handles namespace hrefs properly when there is a default ns. (#1039)</li> <li>(JRuby) Clear the XPath cache on attr removal. (#1109)</li> <li><code>XML::Comment.new</code> argument types are now consistent and safe (and documented) across MRI and JRuby. (#1224)</li> <li>(MRI) Restoring support for Ruby 1.9.2 that was broken in v1.6.4.1 and v1.6.5. (#1207)</li> <li>Check if <code>zlib</code> is available before building <code>libxml2</code>. (#1188)</li> <li>(JRuby) HtmlSaxPushParser now exists. (#1147) (Thanks, Piotr Szmielew!)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#165-2014-11-26","text":"","title":"1.6.5 / 2014-11-26"},{"location":"CHANGELOG.html#added_14","text":"<ul> <li>Implement <code>Slop#respond_to_missing?</code>. (#1176)</li> <li>Optimized the XPath query generated by an <code>an+b</code> CSS query.</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_31","text":"<ul> <li>Capture non-parse errors from <code>Document#dup</code> in <code>Document#errors</code>. (#1196)</li> <li>(JRuby) <code>Document#canonicalize</code> parameters are now consistent with MRI. (#1189)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1641-2014-11-05","text":"","title":"1.6.4.1 / 2014-11-05"},{"location":"CHANGELOG.html#fixed_32","text":"<ul> <li>(MRI) Fix a bug where CFLAGS passed in are dropped. (#1188)</li> <li>Fix a bug where CSS selector :nth(n) did not work. (#1187)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#164-2014-11-04","text":"","title":"1.6.4 / 2014-11-04"},{"location":"CHANGELOG.html#added_15","text":"<ul> <li>(MRI) Bundled Libxml2 is upgraded to 2.9.2.</li> <li>(MRI) <code>nokogiri --version</code> will include a list of applied patches.</li> <li>(MRI) Nokogiri no longer prints messages directly to TTY while building the extension.</li> <li>(MRI) Detect and help user fix a missing /usr/include/iconv.h on OS X. (#1111)</li> <li>(MRI) Improve the iconv detection for building libxml2.</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_33","text":"<ul> <li>(MRI) Fix <code>DocumentFragment#element_children</code> (#1138).</li> <li>Fix a bug with CSS attribute selector without any prefix where \"foo [bar]\" was treated as \"foo[bar]\". (#1174)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1631-2014-07-21","text":"","title":"1.6.3.1 / 2014-07-21"},{"location":"CHANGELOG.html#fixed_34","text":"<ul> <li>Addressing an Apple Macintosh installation problem for GCC users. #1130 (Thanks, @zenspider!)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#163-2014-07-20","text":"","title":"1.6.3 / 2014-07-20"},{"location":"CHANGELOG.html#added_16","text":"<ul> <li>Added <code>Node#document?</code> and <code>Node#processing_instruction?</code></li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_35","text":"<ul> <li>[JRuby] Fix Ruby memory exhaustion vulnerability. #1087 (Thanks, @ocher)</li> <li>[MRI] Fix segfault during GC when using <code>libxml-ruby</code> and <code>nokogiri</code> together in multi-threaded environment. #895 (Thanks, @ender672!)</li> <li>Building on OSX 10.9 stock ruby 2.0.0 now works. #1101 (Thanks, @zenspider!)</li> <li><code>Node#parse</code> now works again for HTML document nodes (broken in 1.6.2+).</li> <li>Processing instructions can now be added via <code>Node#add_next_sibling</code>.</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1621-2014-05-13","text":"","title":"1.6.2.1 / 2014-05-13"},{"location":"CHANGELOG.html#fixed_36","text":"<ul> <li>Fix statically-linked libxml2 installation when using universal builds of Ruby. #1104</li> <li>Patching <code>mini_portile</code> to address the git dependency detailed in #1102.</li> <li>Library load fix to address segfault reported on some systems. #1097</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#162-2014-05-12","text":"","title":"1.6.2 / 2014-05-12"},{"location":"CHANGELOG.html#security_16","text":"<p>A set of security and bugfix patches have been backported from the libxml2 and libxslt repositories onto the version of 2.8.0 packaged with Nokogiri, including these notable security fixes:</p> <ul> <li>https://git.gnome.org/browse/libxml2/commit/?id=4629ee02ac649c27f9c0cf98ba017c6b5526070f</li> <li>CVE-2013-2877 https://git.gnome.org/browse/libxml2/commit/?id=e50ba8164eee06461c73cd8abb9b46aa0be81869</li> <li>CVE-2014-0191 https://git.gnome.org/browse/libxml2/commit/?id=9cd1c3cfbd32655d60572c0a413e017260c854df</li> </ul> <p>It is recommended that you upgrade from 1.6.x to this version as soon as possible.</p>","title":"Security"},{"location":"CHANGELOG.html#dependencies_13","text":"<p>Now requires libxml &gt;= 2.6.21 (was previously &gt;= 2.6.17).</p>","title":"Dependencies"},{"location":"CHANGELOG.html#added_17","text":"<ul> <li>Add cross building of fat binary gems for 64-Bit Windows (x64-mingw32) and add support for native builds on Windows. #864, #989, #1072</li> <li>(MRI) Alias CP932 to Windows-31J if iconv does not support Windows-31J.</li> <li>(MRI) Nokogiri now links packaged libraries statically. To disable static linking, pass --disable-static to <code>extconf.rb</code>. #923</li> <li>(MRI) Fix a library path (LIBPATH) precedence problem caused by CRuby bug #9760.</li> <li>(MRI) Nokogiri automatically deletes directories of packaged libraries only used during build. To keep them for debugging purposes, pass --disable-clean to <code>extconf.rb</code>. #952</li> <li>(MRI) Nokogiri now builds libxml2 properly with iconv support on platforms where libiconv is installed outside the system default directories, such as FreeBSD.</li> <li>Add support for an-b in nth selectors. #886 (Thanks, Magnus Bergmark!)</li> <li>Add support for bare and multiple <code>:not()</code> functions in selectors. #887 (Thanks, Magnus Bergmark!)</li> <li>(MRI) Add an <code>extconf.rb</code> option --use-system-libraries, alternative to setting the environment variable NOKOGIRI_USE_SYSTEM_LIBRARIES.</li> <li>(MRI) Update packaged libraries: libxslt to 1.1.28, zlib to 1.2.8, and libiconv to 1.14, respectively.</li> <li><code>Nokogiri::HTML::Document#title=</code> and <code>#meta_encoding</code>= now always add an element if not present, trying hard to find the best place to put it.</li> <li><code>Nokogiri::XML::DTD#html_dtd?</code> and <code>#html5_dtd?</code> are added.</li> <li><code>Nokogiri::XML::Node#prepend_child</code> is added. #664</li> <li><code>Nokogiri::XML::SAX::ParserContext#recovery</code> is added. #453</li> <li>Fix documentation for <code>XML::Node#namespace</code>. #803 #802 (Thanks, Hoylen Sue)</li> <li>Allow <code>Nokogiri::XML::Node#parse</code> from unparented non-element nodes. #407</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_37","text":"<ul> <li>Ensure :only-child pseudo class works within :not pseudo class. #858 (Thanks, Yamagishi Kazutoshi!)</li> <li>Don't call pkg_config when using bundled libraries in <code>extconf.rb</code> #931 (Thanks, Shota Fukumori!)</li> <li><code>Nokogiri.parse()</code> does not mistake a non-HTML document like a RSS document as HTML document. #932 (Thanks, Yamagishi Kazutoshi!)</li> <li>(MRI) Perform a node type check before adding a child node to another. Previously adding a text node to another as a child could cause a SEGV. #1092</li> <li>(JRuby) XSD validation crashes in Java version. #373</li> <li>(JRuby) Document already has a root node error while using Builder. #646</li> <li>(JRuby) c14n tests are all passing on JRuby. #226</li> <li>Parsing empty documents raise <code>SyntaxError</code> in strict mode. #1005</li> <li>(JRuby) Make xpath faster by caching the xpath context. #741</li> <li>(JRuby) XML SAX push parser leaks memory on JRuby, but not on MRI. #998</li> <li>(JRuby) Inconsistent behavior aliasing the default namespace. #940</li> <li>(JRuby) Inconsistent behavior between parsing and adding namespaces. #943</li> <li>(JRuby) Xpath returns inconsistent result set on cloned document with namespaces and attributes. #1034</li> <li>(JRuby) Java-Implementation forgets element namespaces #902</li> <li>(JRuby) JRuby-Nokogiri does not recognise attributes inside namespaces #1081</li> <li>(JRuby) JRuby-Nokogiri has different comment node name #1080</li> <li>(JRuby) JAXPExtensionsProvider / Java 7 / Secure Processing #1070</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#161-2013-12-14","text":"","title":"1.6.1 / 2013-12-14"},{"location":"CHANGELOG.html#fixed_38","text":"<ul> <li>(JRuby) Fix out of memory bug when certain invalid documents are parsed.</li> <li>(JRuby) Fix regression of billion-laughs vulnerability. #586</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#160-2013-06-08","text":"<p>This release was based on v1.5.10 and 1.6.0.rc1, and contains changes mentioned in both.</p>","title":"1.6.0 / 2013-06-08"},{"location":"CHANGELOG.html#deprecations","text":"<ul> <li>Remove pre 1.9 monitoring from Travis.</li> </ul>","title":"Deprecations"},{"location":"CHANGELOG.html#160rc1-2013-04-14","text":"<p>This release was based on v1.5.9, and so does not contain any fixes mentioned in the notes for v1.5.10.</p>","title":"1.6.0.rc1 / 2013-04-14"},{"location":"CHANGELOG.html#notes_2","text":"<ul> <li>mini_portile is now a runtime dependency</li> <li>Ruby 1.9.2 and higher now required</li> </ul>","title":"Notes"},{"location":"CHANGELOG.html#added_18","text":"<ul> <li>(MRI) Source code for libxml 2.8.0 and libxslt 1.2.26 is packaged with the gem. These libraries are compiled at gem install time unless the environment variable NOKOGIRI_USE_SYSTEM_LIBRARIES is set. VERSION_INFO (also <code>nokogiri -v</code>) exposes whether libxml was compiled from packaged source, or the system library was used.</li> <li>(Windows) libxml upgraded to 2.8.0</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#dependencies_14","text":"<ul> <li>Support for Ruby 1.8.7 and prior has been dropped</li> </ul>","title":"Dependencies"},{"location":"CHANGELOG.html#1511-2013-12-14","text":"","title":"1.5.11 / 2013-12-14"},{"location":"CHANGELOG.html#fixed_39","text":"<ul> <li>(JRuby) Fix out of memory bug when certain invalid documents are parsed.</li> <li>(JRuby) Fix regression of billion-laughs vulnerability. #586</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#1510-2013-06-07","text":"","title":"1.5.10 / 2013-06-07"},{"location":"CHANGELOG.html#fixed_40","text":"<ul> <li>(JRuby) Fix \"null document\" error when parsing an empty IO in jruby 1.7.3. #883</li> <li>(JRuby) Fix schema validation when XSD has DOCTYPE set to DTD. #912 (Thanks, Patrick Cheng!)</li> <li>(MRI) Fix segfault when there is no default subelement for an HTML node. #917</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#notes_3","text":"<ul> <li>Use rb_ary_entry instead of RARRAY_PTR (you know, for Rubinius). #877 (Thanks, Dirkjan Bussink!)</li> <li>Fix TypeError when running tests. #900 (Thanks, C\u00e9dric Boutillier!)</li> </ul>","title":"Notes"},{"location":"CHANGELOG.html#159-2013-03-21","text":"","title":"1.5.9 / 2013-03-21"},{"location":"CHANGELOG.html#fixed_41","text":"<ul> <li>Ensure that prefixed attributes are properly namespaced when reparented. #869</li> <li>Fix for inconsistent namespaced attribute access for SVG nested in HTML. #861</li> <li>(MRI) Fixed a memory leak in fragment parsing if nodes are not all subsequently reparented. #856</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#158-2013-03-19","text":"","title":"1.5.8 / 2013-03-19"},{"location":"CHANGELOG.html#fixed_42","text":"<ul> <li>(JRuby) Fix EmptyStackException thrown by elements with xlink:href attributes and no base_uri #534, #805. (Thanks, Patrick Quinn and Brian Hoffman!)</li> <li>Fixes duplicate attributes issue introduced in 1.5.7. #865</li> <li>Allow use of a prefixed namespace on a root node using <code>Nokogiri::XML::Builder</code> #868</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#157-2013-03-18","text":"","title":"1.5.7 / 2013-03-18"},{"location":"CHANGELOG.html#added_19","text":"<ul> <li>Windows support for Ruby 2.0.</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_43","text":"<ul> <li><code>SAX::Parser.parse_io</code> throw an error when used with lower case encoding. #828</li> <li>(JRuby) Java Nokogiri is finally green (passes all tests) under 1.8 and 1.9 mode. High five everyone. #798, #705</li> <li>(JRuby) <code>Nokogiri::XML::Reader</code> broken (as a pull parser) on jruby - reads the whole XML document. #831</li> <li>(JRuby) JRuby hangs parsing \"&amp;\". #837</li> <li>(JRuby) JRuby NPE parsing an invalid XML instruction. #838</li> <li>(JRuby) <code>Node#content=</code> incompatibility. #839</li> <li>(JRuby) to_xhtml doesn't print the last slash for self-closing tags in JRuby. #834</li> <li>(JRuby) Adding an <code>EntityReference</code> after a Text node mangles the entity in JRuby. #835</li> <li>(JRuby) JRuby version inconsistency: nil for empty attributes. #818</li> <li>CSS queries for classes (e.g., \".foo\") now treat all whitespace identically. #854</li> <li>Namespace behavior cleaned up and made consistent between JRuby and MRI. #846, #801 (Thanks, Michael Klein!)</li> <li>(MRI) SAX parser handles empty processing instructions. #845</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#156-2012-12-19","text":"","title":"1.5.6 / 2012-12-19"},{"location":"CHANGELOG.html#added_20","text":"<ul> <li>Improved performance of <code>XML::Document#collect_namespaces</code>. #761 (Thanks, Juergen Mangler!)</li> <li>New callback <code>SAX::Document#processing_instruction</code> (Thanks, Kitaiti Makoto!)</li> <li><code>Node#native_content=</code> allows setting unescaped node content. #768</li> <li>XPath lookup with namespaces supports symbol keys. #729 (Thanks, Ben Langfeld.)</li> <li><code>XML::Node#[]=</code> stringifies values. #729 (Thanks, Ben Langfeld.)</li> <li><code>bin/nokogiri</code> will process a document from $stdin</li> <li><code>bin/nokogiri -e</code> will execute a program from the command line</li> <li>(JRuby) <code>bin/nokogiri --version</code> will print the Xerces and NekoHTML versions.</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_44","text":"<ul> <li>Nokogiri now detects XSLT transform errors. #731 (Thanks, Justin Fitzsimmons!)</li> <li>Don't throw an Error when trying to replace top-level text node in DocumentFragment. #775</li> <li>Raise an ArgumentError if an invalid encoding is passed to the SAX parser. #756 (Thanks, Bradley Schaefer!)</li> <li>Prefixed element inconsistency between CRuby and JRuby. #712</li> <li>(JRuby) space prior to xml preamble causes nokogiri to fail parsing. (fixed along with #748) #790</li> <li>(JRuby) Fixed the bug <code>Nokogiri::XML::Node#content</code> inconsistency between Java and C. #794, #797</li> <li>(JRuby) raises INVALID_CHARACTER_ERR exception when EntityReference name starts with '#'. #719</li> <li>(JRuby) doesn't coerce namespaces out of strings on a direct subclass of Node. #715</li> <li>(JRuby) <code>Node#content</code> now renders newlines properly. #737 (Thanks, Piotr Szmielew!)</li> <li>(JRuby) Unknown namespace are ignore when the recover option is used. #748</li> <li>(JRuby) XPath queries for namespaces should not throw exceptions when called twice in a row. #764</li> <li>(JRuby) More consistent (with libxml2) whitespace formatting when emitting XML. #771</li> <li>(JRuby) namespaced attributes broken when appending raw xml to builder. #770</li> <li>(JRuby) <code>Nokogiri::XML::Document#wrap</code> raises undefined method `length' for nil:NilClass when trying to &lt;&lt; to a node. #781</li> <li>(JRuby) Fixed \"bad file descriptor\" bug when closing open file descriptors. #495</li> <li>(JRuby) JRuby/CRuby incompatibility for attribute decorators. #785</li> <li>(JRuby) Issues parsing valid XML with no internal subset in the DTD. #547, #811</li> <li>(JRuby) Issues parsing valid node content when it contains colons. #728</li> <li>(JRuby) Correctly parse the doc type of html documents. #733</li> <li>(JRuby) Include dtd in the xml output when a builder is used with create_internal_subset. #751</li> <li>(JRuby) builder requires textwrappers for valid utf8 in jruby, not in mri. #784</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#155-2012-06-24","text":"","title":"1.5.5 / 2012-06-24"},{"location":"CHANGELOG.html#added_21","text":"<ul> <li>Much-improved support for JRuby in 1.9 mode! Yay!</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_45","text":"<ul> <li>Regression in JRuby Nokogiri add_previous_sibling (1.5.0 -&gt; 1.5.1) #691 (Thanks, John Shahid!)</li> <li>JRuby unable to create HTML doc if URL arg provided #674 (Thanks, John Shahid!)</li> <li>JRuby raises NullPointerException when given HTML document is nil or empty string. #699</li> <li>JRuby 1.9 error, uncaught throw 'encoding_found', has been fixed. #673</li> <li>Invalid encoding returned in JRuby with US-ASCII. #583</li> <li>XmlSaxPushParser raises IndexOutOfBoundsException when over 512 characters are given. #567, #615</li> <li>When xpath evaluation returns empty <code>NodeSet</code>, decorating <code>NodeSet</code>'s base document raises exception. #514</li> <li>JRuby raises exception when xpath with namespace is specified. pull request #681 (Thanks, Piotr Szmielew)</li> <li>JRuby renders nodes without their namespace when subclassing Node. #695</li> <li>JRuby raises NAMESPACE_ERR (org.w3c.dom.DOMException) while instantiating <code>RDF::RDFXML::Writer</code>. #683</li> <li>JRuby is not able to use namespaces in xpath. #493</li> <li>JRuby's Entity resolving should be consistent with C-Nokogiri #704, #647, #703</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#154-2012-06-12","text":"","title":"1.5.4 / 2012-06-12"},{"location":"CHANGELOG.html#added_22","text":"<ul> <li>The \"nokogiri\" script now has more verbose output when passed the <code>--rng</code> option. #675 (Thanks, Dan Radez!)</li> <li>Build support on hardened Debian systems that use <code>-Werror=format-security</code>. #680.</li> <li>Better build support for systems with pkg-config. #584</li> <li>Better build support for systems with multiple iconv installations.</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_46","text":"<ul> <li>Segmentation fault when creating a comment node for a DocumentFragment. #677, #678.</li> <li>Treat '.' as xpath in <code>at()</code> and <code>search()</code>. #690</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#security_17","text":"<p>(MRI) Default parse options for XML documents were changed to not make network connections during document parsing, to avoid XXE vulnerability. #693</p> <p>To re-enable this behavior, the configuration method <code>nononet</code> may be called, like this:</p> <pre><code>Nokogiri::XML::Document.parse(xml) { |config| config.nononet }\n</code></pre> <p>Insert your own joke about double-negatives here.</p>","title":"Security"},{"location":"CHANGELOG.html#153-2012-06-01","text":"","title":"1.5.3 / 2012-06-01"},{"location":"CHANGELOG.html#added_23","text":"<ul> <li>Support for \"prefixless\" CSS selectors ~, &gt; and + like jQuery supports. #621, #623. (Thanks, David Lee!)</li> <li>Attempting to improve installation on homebrew 0.9 (with regards to iconv). Isn't package management convenient?</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_47","text":"<ul> <li>Custom xpath functions with empty nodeset arguments cause a segfault. #634.</li> <li><code>Nokogiri::XML::Node#css</code> now works for XML documents with default namespaces when the rule contains attribute selector without namespace.</li> <li>Fixed marshalling bugs around how arguments are passed to (and returned from) XSLT custom xpath functions. #640.</li> <li><code>Nokogiri::XML::Reader#outer_xml</code> is broken in JRuby #617</li> <li><code>Nokogiri::XML::Attribute</code> on JRuby returns a nil namespace #647</li> <li><code>Nokogiri::XML::Node#namespace=</code> cannot set a namespace without a prefix on JRuby #648</li> <li>(JRuby) 1.9 mode causes dead lock while running rake #571</li> <li><code>HTML::Document#meta_encoding</code> does not raise exception on docs with malformed content-type. #655</li> <li>Fixing segfault related to unsupported encodings in in-context parsing on 1.8.7. #643</li> <li>(JRuby) Concurrency issue in XPath parsing. #682</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#152-2012-03-09","text":"<p>Repackaging of 1.5.1 with a gemspec that is compatible with older Rubies. #631, #632.</p>","title":"1.5.2 / 2012-03-09"},{"location":"CHANGELOG.html#151-2012-03-09","text":"","title":"1.5.1 / 2012-03-09"},{"location":"CHANGELOG.html#added_24","text":"<ul> <li><code>XML::Builder#comment</code> allows creation of comment nodes.</li> <li>CSS searches now support namespaced attributes. #593</li> <li>Java integration feature is added. Now, <code>XML::Document.wrap</code> and <code>XML::Document#to_java</code> methods are available.</li> <li>RelaxNG validator support in the <code>nokogiri</code> cli utility. #591 (thanks, Dan Radez!)</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_48","text":"<ul> <li>Fix many memory leaks and segfault opportunities. Thanks, Tim Elliott!</li> <li>extconf searches homebrew paths if homebrew is installed.</li> <li>Inconsistent behavior of Nokogiri 1.5.0 Java #620</li> <li>Inheriting from <code>Nokogiri::XML::Node</code> on JRuby (1.6.4/5) fails #560</li> <li><code>XML::Attr</code> nodes are not allowed to be added as node children, so an exception is raised. #558</li> <li>No longer defensively \"pickle\" adjacent text nodes on <code>Node#add_next_sibling</code> and <code>Node#add_previous_sibling</code> calls. #595.</li> <li>Java version inconsistency: it returns nil for empty attributes #589</li> <li>to_xhtml incorrectly generates <code>&lt;p /&gt;&lt;/p&gt;</code> when tag is empty #557</li> <li><code>Document#add_child</code> now accepts a <code>Node</code>, <code>NodeSet</code>, <code>DocumentFragment</code>, or <code>String</code>. #546.</li> <li><code>Document#create_element</code> now recognizes namespaces containing non-word characters (like \"SOAP-ENV\"). This is mostly relevant to users of Builder, which calls <code>Document#create_element</code> for nearly everything. #531.</li> <li>File encoding broken in 1.5.0 / jruby / windows #529</li> <li>Java version does not return namespace defs as attrs for <code>::HTML</code> #542</li> <li>Bad file descriptor with Nokogiri 1.5.0 #495</li> <li>remove_namespace! doesn't work in pure java version #492</li> <li>The Nokogiri Java native build throws a null pointer exception when ActiveSupport's .blank? method is called directly on a parsed object. #489</li> <li>1.5.0 Not using correct character encoding #488</li> <li>Raw XML string in XML Builder broken on JRuby #486</li> <li>Nokogiri 1.5.0 XML generation broken on JRuby #484</li> <li>Do not allow multiple root nodes. #550</li> <li>Fixes for custom XPath functions. #605, #606 (thanks, Juan Wajnerman!)</li> <li><code>Node#to_xml</code> does not override <code>:save_with</code> if it is provided. #505</li> <li><code>Node#set</code> is a private method (JRuby). #564 (thanks, Nick Sieger!)</li> <li>C14n cleanup and <code>Node#canonicalize</code> (thanks, Ivan Pirlik!) #563</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#150-2011-07-01","text":"","title":"1.5.0 / 2011-07-01"},{"location":"CHANGELOG.html#notes_4","text":"<ul> <li>See changelog from 1.4.7</li> </ul>","title":"Notes"},{"location":"CHANGELOG.html#added_25","text":"<ul> <li>extracted sets of <code>Node::SaveOptions</code> into <code>Node::SaveOptions::DEFAULT_{X,H,XH}TML</code> (refactor)</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_49","text":"<ul> <li>default output of XML on JRuby is no longer formatted due to inconsistent whitespace handling. #415</li> <li>(JRuby) making empty <code>NodeSet</code>s with null <code>nodes</code> member safe to operate on. #443</li> <li>Fix a bug in advanced encoding detection that leads to partially duplicated document when parsing an HTML file with unknown encoding.</li> <li>Add support for <code>&lt;meta charset=\"...\"&gt;</code>.</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#150-beta3-2010-12-02","text":"","title":"1.5.0 beta3 / 2010-12-02"},{"location":"CHANGELOG.html#notes_5","text":"<ul> <li>JRuby performance tuning</li> <li>See changelog from 1.4.4</li> </ul>","title":"Notes"},{"location":"CHANGELOG.html#fixed_50","text":"<ul> <li><code>Node#inner_text</code> no longer returns nil. (JRuby) #264</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#150-beta2-2010-07-30","text":"","title":"1.5.0 beta2 / 2010-07-30"},{"location":"CHANGELOG.html#notes_6","text":"<ul> <li>See changelog from 1.4.3</li> </ul>","title":"Notes"},{"location":"CHANGELOG.html#150-beta1-2010-05-22","text":"","title":"1.5.0 beta1 / 2010-05-22"},{"location":"CHANGELOG.html#notes_7","text":"<ul> <li>JRuby support is provided by a new pure-java backend.</li> </ul>","title":"Notes"},{"location":"CHANGELOG.html#dependencies_15","text":"<ul> <li>Ruby 1.8.6 is deprecated. Nokogiri will install, but official support is ended.</li> <li>LibXML 2.6.16 and earlier are deprecated. Nokogiri will refuse to install.</li> </ul>","title":"Dependencies"},{"location":"CHANGELOG.html#removed_1","text":"<ul> <li>FFI support is removed.</li> </ul>","title":"Removed"},{"location":"CHANGELOG.html#147-2011-07-01","text":"","title":"1.4.7 / 2011-07-01"},{"location":"CHANGELOG.html#fixed_51","text":"<ul> <li>Fix a bug in advanced encoding detection that leads to partially duplicated document when parsing an HTML file with unknown encoding. Thanks, Timothy Elliott (@ender672)! #478</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#146-2011-06-19","text":"","title":"1.4.6 / 2011-06-19"},{"location":"CHANGELOG.html#notes_8","text":"<ul> <li>This version is functionally identical to 1.4.5.</li> <li>Ruby 1.8.6 support has been restored.</li> </ul>","title":"Notes"},{"location":"CHANGELOG.html#145-2011-05-19","text":"","title":"1.4.5 / 2011-05-19"},{"location":"CHANGELOG.html#added_26","text":"<ul> <li><code>Nokogiri::HTML::Document#title</code> accessor gets and sets the document title.</li> <li>extracted sets of <code>Node::SaveOptions</code> into <code>Node::SaveOptions::DEFAULT_{X,H,XH}TML</code> (refactor)</li> <li>Raise an exception if a string is passed to <code>Nokogiri::XML::Schema#validate</code>. #406</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_52","text":"<ul> <li><code>Node#serialize</code>-and-friends now accepts a <code>SaveOption</code> object as the, erm, save object.</li> <li><code>Nokogiri::CSS::Parser</code> has-a <code>Nokogiri::CSS::Tokenizer</code></li> <li>(JRUBY+FFI only) Weak references are now threadsafe. #355</li> <li>Make direct <code>start_element()</code> callback (currently used for <code>HTML::SAX::Parser</code>) pass attributes in assoc array, just as emulated <code>start_element()</code> callback does.  rel. #356</li> <li><code>HTML::SAX::Parser</code> should call back a block given to <code>parse*()</code> if any, just as <code>XML::SAX::Parser</code> does.</li> <li>Add further encoding detection to HTML parser that libxml2 does not do.</li> <li><code>Document#remove_namespaces!</code> now handles attributes with namespaces. #396</li> <li><code>XSLT::Stylesheet#transform</code> no longer segfaults when handed a non-<code>XML::Document</code>. #452</li> <li><code>XML::Reader</code> no longer segfaults when under GC pressure. #439</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#144-2010-11-15","text":"","title":"1.4.4 / 2010-11-15"},{"location":"CHANGELOG.html#added_27","text":"<ul> <li><code>XML::Node#children=</code> sets the node's inner html (much like #inner_html=), but returns the reparent node(s).</li> <li>XSLT supports function extensions. #336</li> <li>XPath bind parameter substitution. #329</li> <li><code>XML::Reader</code> node type constants. #369</li> <li>SAX Parser context provides line and column information</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_53","text":"<ul> <li><code>XML::DTD#attributes</code> returns an empty hash instead of nil when there are no attributes.</li> <li><code>XML::DTD#{keys,each}</code> now work as expected. #324</li> <li><code>{XML,HTML}::DocumentFragment.{new,parse}</code> no longer strip leading and trailing whitespace. #319</li> <li><code>XML::Node#{add_child,add_previous_sibling,add_next_sibling,replace}</code> return a <code>NodeSet</code> when passed a string.</li> <li>Unclosed tags parsed more robustly in fragments. #315</li> <li><code>XML::Node#{replace,add_previous_sibling,add_next_sibling}</code> edge cases fixed related to libxml's text node merging. #308</li> <li>Fixed a segfault when GC occurs during xpath handler argument marshalling. #345</li> <li>Added hack to <code>Slop</code> decorator to work with previously defined methods. #330</li> <li>Fix a memory leak when duplicating child nodes. #353</li> <li>Fixed off-by-one bug with <code>nth-last-{child,of-type}</code> CSS selectors when NOT using <code>an+b</code> notation. #354</li> <li>Fixed passing of non-namespace attributes to <code>SAX::Document#start_element</code>. #356</li> <li>Workaround for libxml2 in-context parsing bug. #362</li> <li>Fixed <code>NodeSet#wrap</code> on nodes within a fragment. #331</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#143-2010-07-28","text":"","title":"1.4.3 / 2010-07-28"},{"location":"CHANGELOG.html#added_28","text":"<ul> <li><code>XML::Reader#empty_element?</code> returns true for empty elements. #262</li> <li><code>Node#remove_namespaces!</code> now removes namespace declarations as well. #294</li> <li><code>NodeSet#at_xpath</code>, <code>NodeSet#at_css</code> and <code>NodeSet#&gt;</code> do what the corresponding methods of <code>Node</code> do.</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_54","text":"<ul> <li><code>XML::NodeSet#{include?,delete,push}</code> accept an <code>XML::Namespace</code></li> <li><code>XML::Document#parse</code> added for parsing in the context of a document</li> <li><code>XML::DocumentFragment#inner_html=</code> works with contextual parsing! #298, #281</li> <li><code>lib/nokogiri/css/parser.y</code> Combined CSS functions + pseudo selectors fixed</li> <li>Reparenting text nodes is safe, even when the operation frees adjacent merged nodes. #283</li> <li>Fixed libxml2 versionitis issue with <code>xmlFirstElementChild</code> et al. #303</li> <li><code>XML::Attr#add_namespace</code> now works as expected. #252</li> <li><code>HTML::DocumentFragment</code> uses the string's encoding. #305</li> <li>Fix the CSS3 selector translation rule for the general sibling combinator (a.k.a. preceding selector) that incorrectly converted \"E ~ F G\" to \"//F//G[preceding-sibling::E]\".</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#142-2010-05-22","text":"","title":"1.4.2 / 2010-05-22"},{"location":"CHANGELOG.html#added_29","text":"<ul> <li><code>XML::Node#parse</code> will parse XML or HTML fragments with respect to the context node.</li> <li><code>XML::Node#namespaces</code> returns all namespaces defined in the node and all ancestor nodes (previously did not return ancestors' namespace definitions).</li> <li>Added <code>Enumerable</code> to <code>XML::Node</code></li> <li><code>Nokogiri::XML::Schema#validate</code> now uses xmlSchemaValidateFile if a filename is passed, which is faster and more memory-efficient. GH #219</li> <li><code>XML::Document#create_entity</code> will create new <code>EntityDecl</code> objects. GH #174</li> <li>JRuby FFI implementation no longer uses <code>ObjectSpace._id2ref</code>, instead using Charles Nutter's rocking Weakling gem.</li> <li><code>Nokogiri::XML::Node#first_element_child</code> fetch the first child node that is an ELEMENT node.</li> <li><code>Nokogiri::XML::Node#last_element_child</code> fetch the last child node that is an ELEMENT node.</li> <li><code>Nokogiri::XML::Node#elements</code> fetch all children nodes that are ELEMENT nodes.</li> <li><code>Nokogiri::XML::Node#add_child</code>, <code>#add_previous_sibling</code>, <code>#before</code>, <code>#add_next_sibling</code>, <code>#after</code>, <code>#inner_html</code>, <code>#swap</code> and <code>#replace</code> all now accept a <code>Node</code>, <code>DocumentFragment</code>, <code>NodeSet</code>, or a string containing markup.</li> <li><code>Node#fragment?</code> indicates whether a node is a <code>DocumentFragment</code>.</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_55","text":"<ul> <li><code>XML::NodeSet</code> is now always decorated (if the document has decorators). GH #198</li> <li><code>XML::NodeSet#slice</code> gracefully handles offset+length larger than the set length. GH #200</li> <li><code>XML::Node#content=</code> safely unlinks previous content. GH #203</li> <li><code>XML::Node#namespace=</code> takes nil as a parameter</li> <li><code>XML::Node#xpath</code> returns things other than <code>NodeSet</code> objects. GH #208</li> <li><code>XSLT::StyleSheet#transform</code> accepts hashes for parameters. GH #223</li> <li>Psuedo selectors inside <code>not()</code> work. GH #205</li> <li><code>XML::Builder</code> doesn't break when nodes are unlinked. Thanks to vihai! GH #228</li> <li>Encoding can be forced on the SAX parser. Thanks Eugene Pimenov! GH #204</li> <li><code>XML::DocumentFragment</code> uses <code>XML::Node#parse</code> to determine children.</li> <li>Fixed a memory leak in xml reader. Thanks sdor! GH #244</li> <li><code>Node#replace</code> returns the new child node as claimed in the RDoc. Previously returned +self+.</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#notes_9","text":"<ul> <li>The Windows gems now bundle DLLs for libxml 2.7.6 and libxslt 1.1.26. Prior to this release, libxml 2.7.3 and libxslt 1.1.24 were bundled.</li> </ul>","title":"Notes"},{"location":"CHANGELOG.html#141-2009-12-10","text":"","title":"1.4.1 / 2009-12-10"},{"location":"CHANGELOG.html#added_30","text":"<ul> <li>Added <code>Nokogiri::LIBXML_ICONV_ENABLED</code></li> <li>Alias <code>Node#[]</code> to <code>Node#attr</code></li> <li><code>XML::Node#next_element</code> added</li> <li><code>XML::Node#&gt;</code> added for searching a nodes immediate children</li> <li><code>XML::NodeSet#reverse</code> added</li> <li>Added fragment support to <code>Node#add_child</code>, <code>Node#add_next_sibling</code>, <code>Node#add_previous_sibling</code>, and <code>Node#replace</code>.</li> <li><code>XML::Node#previous_element</code> implemented</li> <li>Rubinius support</li> <li>Ths CSS selector engine now supports <code>:has()</code></li> <li><code>XML::NodeSet#filter()</code> was added</li> <li><code>XML::Node.next=</code> and .previous= are aliases for add_next_sibling and add_previous_sibling. GH #183</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_56","text":"<ul> <li>XML fragments with namespaces do not raise an exception (regression in 1.4.0)</li> <li><code>Node#matches?</code> works in nodes contained by a <code>DocumentFragment</code>. GH #158</li> <li><code>Document</code> should not define <code>add_namespace()</code> method. GH #169</li> <li><code>XPath</code> queries returning namespace declarations do not segfault.</li> <li><code>Node#replace</code> works with nodes from different documents. GH #162</li> <li>Adding <code>XML::Document#collect_namespaces</code></li> <li>Fixed bugs in the SOAP4R adapter</li> <li>Fixed bug in <code>XML::Node#next_element</code> for certain edge cases</li> <li>Fixed load path issue with JRuby under Windows. GH #160.</li> <li><code>XSLT#apply_to</code> will honor the \"output method\". Thanks richardlehane!</li> <li>Fragments containing leading text nodes with newlines now parse properly. GH #178.</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#140-2009-10-30","text":"","title":"1.4.0 / 2009-10-30"},{"location":"CHANGELOG.html#added_31","text":"<ul> <li><code>Node#at_xpath</code> returns the first element of the <code>NodeSet</code> matching the XPath expression.</li> <li><code>Node#at_css</code> returns the first element of the <code>NodeSet</code> matching the CSS selector.</li> <li><code>NodeSet#|</code> for unions GH #119 (Thanks Serabe!)</li> <li><code>NodeSet#inspect</code> makes prettier output</li> <li><code>Node#inspect</code> implemented for more rubyish document inspecting</li> <li>Added <code>XML::DTD#external_id</code></li> <li>Added <code>XML::DTD#system_id</code></li> <li>Added <code>XML::ElementContent</code> for DTD Element content validity</li> <li>Better namespace declaration support in <code>Nokogiri::XML::Builder</code></li> <li>Added <code>XML::Node#external_subset</code></li> <li>Added <code>XML::Node#create_external_subset</code></li> <li>Added <code>XML::Node#create_internal_subset</code></li> <li>XML Builder can append raw strings (GH #141, patch from dudleyf)</li> <li><code>XML::SAX::ParserContext</code> added</li> <li><code>XML::Document#remove_namespaces!</code> for the namespace-impaired</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_57","text":"<ul> <li>returns nil when HTML documents do not declare a meta encoding tag. GH #115</li> <li>Uses <code>RbConfig::CONFIG['host_os']</code> to adjust <code>ENV['PATH']</code> GH #113</li> <li><code>NodeSet#search</code> is more efficient GH #119 (Thanks Serabe!)</li> <li><code>NodeSet#xpath</code> handles custom xpath functions</li> <li>Fixing a SEGV when <code>XML::Reader</code> gets attributes for current node</li> <li><code>Node#inner_html</code> takes the same arguments as <code>Node#to_html</code> GH #117</li> <li><code>DocumentFragment#css</code> delegates to it's child nodes GH #123</li> <li><code>NodeSet#[]</code> works with slices larger than <code>NodeSet#length</code> GH #131</li> <li>Reparented nodes maintain their namespace. GH #134</li> <li>Fixed SEGV when adding an <code>XML::Document</code> to <code>NodeSet</code></li> <li><code>XML::SyntaxError</code> can be duplicated. GH #148</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#removed_2","text":"<ul> <li>Hpricot compatibility layer removed</li> </ul>","title":"Removed"},{"location":"CHANGELOG.html#133-2009-07-26","text":"","title":"1.3.3 / 2009-07-26"},{"location":"CHANGELOG.html#added_32","text":"<ul> <li><code>NodeSet#children</code> returns all children of all nodes</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_58","text":"<ul> <li>Override libxml-ruby's global error handler</li> <li><code>ParseOption#strict</code> fixed</li> <li>Fixed a segfault when sending an empty string to <code>Node#inner_html=</code> GH #88</li> <li>String encoding is now set to UTF-8 in Ruby 1.9</li> <li>Fixed a segfault when moving root nodes between documents. GH #91</li> <li>Fixed an O(n) penalty on node creation. GH #101</li> <li>Allowing XML documents to be output as HTML documents</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#deprecations_1","text":"<ul> <li>Hpricot compatibility layer will be removed in 1.4.0</li> </ul>","title":"Deprecations"},{"location":"CHANGELOG.html#132-2009-06-22","text":"","title":"1.3.2 / 2009-06-22"},{"location":"CHANGELOG.html#added_33","text":"<ul> <li><code>Nokogiri::XML::DTD#validate</code> will validate your document</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_59","text":"<ul> <li><code>Nokogiri::XML::NodeSet#search</code> will search top level nodes. GH #73</li> <li>Removed namespace related methods from <code>Nokogiri::XML::Document</code></li> <li>Fixed a segfault when a namespace was added twice</li> <li>Made nokogiri work with Snow Leopard GH #79</li> <li>Mailing list has moved to: http://groups.google.com/group/nokogiri-talk</li> <li>HTML fragments now correctly handle comments and CDATA blocks. GH #78</li> <li><code>Nokogiri::XML::Document#clone</code> is now an alias of dup</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#deprecations_2","text":"<ul> <li><code>Nokogiri::XML::SAX::Document#start_element_ns</code> is deprecated, please switch to <code>Nokogiri::XML::SAX::Document#start_element_namespace</code></li> <li><code>Nokogiri::XML::SAX::Document#end_element_ns</code> is deprecated, please switch to <code>Nokogiri::XML::SAX::Document#end_element_namespace</code></li> </ul>","title":"Deprecations"},{"location":"CHANGELOG.html#131-2009-06-07","text":"","title":"1.3.1 / 2009-06-07"},{"location":"CHANGELOG.html#fixed_60","text":"<ul> <li><code>extconf.rb</code> checks for optional RelaxNG and Schema functions</li> <li>Namespace nodes are added to the Document node cache</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#130-2009-05-30","text":"","title":"1.3.0 / 2009-05-30"},{"location":"CHANGELOG.html#added_34","text":"<ul> <li>Builder changes scope based on block arity</li> <li>Builder supports methods ending in underscore similar to tagz</li> <li><code>Nokogiri::XML::Node#&lt;=&gt;</code> compares nodes based on Document position</li> <li><code>Nokogiri::XML::Node#matches?</code> returns true if Node can be found with given selector.</li> <li><code>Nokogiri::XML::Node#ancestors</code> now returns an <code>Nokogiri::XML::NodeSet</code></li> <li><code>Nokogiri::XML::Node#ancestors</code> will match parents against optional selector</li> <li><code>Nokogiri::HTML::Document#meta_encoding</code> for getting the meta encoding</li> <li><code>Nokogiri::HTML::Document#meta_encoding=</code> for setting the meta encoding</li> <li><code>Nokogiri::XML::Document#encoding=</code> to set the document encoding</li> <li><code>Nokogiri::XML::Schema</code> for validating documents against XSD schema</li> <li><code>Nokogiri::XML::RelaxNG</code> for validating documents against RelaxNG schema</li> <li><code>Nokogiri::HTML::ElementDescription</code> for fetching HTML element descriptions</li> <li><code>Nokogiri::XML::Node#description</code> to fetch the node description</li> <li><code>Nokogiri::XML::Node#accept</code> implements Visitor pattern</li> <li><code>bin/nokogiri</code> for easily examining documents (Thanks Yutaka HARA!)</li> <li><code>Nokogiri::XML::NodeSet</code> now supports more Array and Enumerable operators: index, delete, slice, - (difference), + (concatenation), &amp; (intersection), push, pop, shift, ==</li> <li><code>Nokogiri.XML</code>, <code>Nokogiri.HTML</code> take blocks that receive <code>Nokogiri::XML::ParseOptions</code> objects</li> <li><code>Nokogiri::XML::Node#namespace</code> returns a <code>Nokogiri::XML::Namespace</code></li> <li><code>Nokogiri::XML::Node#namespace=</code> for setting a node's namespace</li> <li><code>Nokogiri::XML::DocumentFragment</code> and <code>Nokogiri::HTML::DocumentFragment</code> have a sensible API and a more robust implementation.</li> <li>JRuby 1.3.0 support via FFI.</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_61","text":"<ul> <li>Fixed a problem with nil passed to CDATA constructor</li> <li>Fragment method deals with regular expression characters (Thanks Joel!) LH #73</li> <li>Fixing builder scope issues LH #61, LH #74, LH #70</li> <li>Fixed a problem when adding a child could remove the child namespace LH#78</li> <li>Fixed bug with unlinking a node then reparenting it. (GH#22)</li> <li>Fixed failure to catch errors during XSLT parsing (GH#32)</li> <li>Fixed a bug with attribute conditions in CSS selectors (GH#36)</li> <li>Fixed intolerance of HTML attributes without values in <code>Node#{before/after/inner_html=}</code>. (GH#35)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#123-2009-03-22","text":"","title":"1.2.3 / 2009-03-22"},{"location":"CHANGELOG.html#fixed_62","text":"<ul> <li>Fixing bug where a node is passed in to <code>Node#new</code></li> <li>Namespace should be assigned on DocumentFragment creation. LH #66</li> <li><code>Nokogiri::XML::NodeSet#dup</code> works GH #10</li> <li><code>Nokogiri::HTML</code> returns an empty Document when given a blank string GH#11</li> <li>Adding a child will remove duplicate namespace declarations LH #67</li> <li>Builder methods take a hash as a second argument</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#122-2009-03-14","text":"","title":"1.2.2 / 2009-03-14"},{"location":"CHANGELOG.html#added_35","text":"<ul> <li>Nokogiri may be used with soap4r. See <code>XSD::XMLParser::Nokogiri</code></li> <li><code>Nokogiri::XML::Node#inner_html=</code> to set the inner html for a node</li> <li>Nokogiri builder interface improvements</li> <li><code>Nokogiri::XML::Node#swap</code> swaps html for current node (LH #50)</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_63","text":"<ul> <li>Fixed a tag nesting problem in the Builder API (LH #41)</li> <li><code>Nokogiri::HTML.fragment</code> will properly handle text only nodes (LH #43)</li> <li><code>Nokogiri::XML::Node#before</code> will prepend text nodes (LH #44)</li> <li><code>Nokogiri::XML::Node#after</code> will append text nodes</li> <li><code>Nokogiri::XML::Node#search</code> automatically registers root namespaces (LH #42)</li> <li><code>Nokogiri::XML::NodeSet#search</code> automatically registers namespaces</li> <li><code>Nokogiri::HTML::NamedCharacters</code> delegates to libxml2</li> <li><code>Nokogiri::XML::Node#[]</code> can take a symbol (LH #48)</li> <li>vasprintf for windows updated.  Thanks Geoffroy Couprie!</li> <li><code>Nokogiri::XML::Node#[]=</code> should not encode entities (LH #55)</li> <li>Namespaces should be copied to reparented nodes (LH #56)</li> <li>Nokogiri uses encoding set on the string for default in Ruby 1.9</li> <li><code>Document#dup</code> should create a new document of the same type (LH #59)</li> <li><code>Document</code> should not have a parent method (LH #64)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#121-2009-02-23","text":"","title":"1.2.1 / 2009-02-23"},{"location":"CHANGELOG.html#fixed_64","text":"<ul> <li>Fixed a CSS selector space bug</li> <li>Fixed Ruby 1.9 String Encoding (Thanks \u89d2\u8c37\u3055\u3093\uff01)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#120-2009-02-22","text":"","title":"1.2.0 / 2009-02-22"},{"location":"CHANGELOG.html#added_36","text":"<ul> <li>CSS search now supports CSS3 namespace queries</li> <li>Namespaces on the root node are automatically registered</li> <li>CSS queries use the default namespace</li> <li><code>Nokogiri::XML::Document#encoding</code> get encoding used for this document</li> <li><code>Nokogiri::XML::Document#url</code> get the document url</li> <li><code>Nokogiri::XML::Node#add_namespace</code> add a namespace to the node LH#38</li> <li><code>Nokogiri::XML::Node#each</code> iterate over attribute name, value pairs</li> <li><code>Nokogiri::XML::Node#keys</code> get all attribute names</li> <li><code>Nokogiri::XML::Node#line</code> get the line number for a node (Thanks Dirkjan Bussink!)</li> <li><code>Nokogiri::XML::Node#serialize</code> now takes an optional encoding parameter</li> <li><code>Nokogiri::XML::Node#to_html</code>, to_xml, and to_xhtml take an optional encoding</li> <li><code>Nokogiri::XML::Node#to_str</code></li> <li><code>Nokogiri::XML::Node#to_xhtml</code> to produce XHTML documents</li> <li><code>Nokogiri::XML::Node#values</code> get all attribute values</li> <li><code>Nokogiri::XML::Node#write_to</code> writes the node to an IO object with optional encoding</li> <li><code>Nokogiri::XML::ProcessingInstruction.new</code></li> <li><code>Nokogiri::XML::SAX::PushParser</code> for all your push parsing needs.</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_65","text":"<ul> <li>Fixed <code>Nokogiri::XML::Document#dup</code></li> <li>Fixed header detection. Thanks rubikitch!</li> <li>Fixed a problem where invalid CSS would cause the parser to hang</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#deprecations_3","text":"<ul> <li><code>Nokogiri::XML::Node.new_from_str</code> will be deprecated in 1.3.0</li> </ul>","title":"Deprecations"},{"location":"CHANGELOG.html#changed_3","text":"<ul> <li><code>Nokogiri::HTML.fragment</code> now returns an XML::DocumentFragment (LH #32)</li> </ul>","title":"Changed"},{"location":"CHANGELOG.html#111","text":"","title":"1.1.1"},{"location":"CHANGELOG.html#added_37","text":"<ul> <li>Added <code>XML::Node#elem?</code></li> <li>Added <code>XML::Node#attribute_nodes</code></li> <li>Added <code>XML::Attr</code></li> <li><code>XML::Node#delete</code> added.</li> <li><code>XML::NodeSet#inner_html</code> added.</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_66","text":"<ul> <li>Not including an HTML entity for \\r for HTML nodes.</li> <li>Removed <code>CSS::SelectorHandler</code> and <code>XML::XPathHandler</code></li> <li><code>XML::Node#attributes</code> returns an <code>Attr</code> node for the value.</li> <li><code>XML::NodeSet</code> implements <code>to_xml</code></li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#110","text":"","title":"1.1.0"},{"location":"CHANGELOG.html#added_38","text":"<ul> <li>Custom XPath functions are now supported.  See <code>Nokogiri::XML::Node#xpath</code></li> <li>Custom CSS pseudo classes are now supported.  See <code>Nokogiri::XML::Node#css</code></li> <li><code>Nokogiri::XML::Node#&lt;&lt;</code> will add a child to the current node</li> </ul>","title":"Added"},{"location":"CHANGELOG.html#fixed_67","text":"<ul> <li>Mutex lock on CSS cache access</li> <li>Fixed build problems with GCC 3.3.5</li> <li><code>XML::Node#to_xml</code> now takes an indentation argument</li> <li><code>XML::Node#dup</code> takes an optional depth argument</li> <li><code>XML::Node#add_previous_sibling</code> returns new sibling node.</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#107","text":"","title":"1.0.7"},{"location":"CHANGELOG.html#fixed_68","text":"<ul> <li>Fixed memory leak when using Dike</li> <li>SAX parser now parses IO streams</li> <li>Comment nodes have their own class</li> <li><code>Nokogiri()</code> should delegate to <code>Nokogiri.parse()</code></li> <li>Prepending rather than appending to <code>ENV['PATH']</code> on windows</li> <li>Fixed a bug in complex CSS negation selectors</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#106","text":"","title":"1.0.6"},{"location":"CHANGELOG.html#fixed_69","text":"<ul> <li>XPath Parser raises a <code>SyntaxError</code> on parse failure</li> <li>CSS Parser raises a <code>SyntaxError</code> on parse failure</li> <li><code>filter()</code> and <code>not()</code> hpricot compatibility added</li> <li>CSS searches via <code>Node#search</code> are now always relative</li> <li>CSS to XPath conversion is now cached</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#105","text":"","title":"1.0.5"},{"location":"CHANGELOG.html#fixed_70","text":"<ul> <li>Added mailing list and ticket tracking information to the <code>README.txt</code></li> <li>Sets <code>ENV['PATH']</code> on windows if it doesn't exist</li> <li>Caching results of <code>NodeSet#[]</code> on <code>Document</code></li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#104","text":"","title":"1.0.4"},{"location":"CHANGELOG.html#fixed_71","text":"<ul> <li>Changed memory management from weak refs to document refs</li> <li>Plugged some memory leaks</li> <li>Builder blocks can call methods from surrounding contexts</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#103","text":"","title":"1.0.3"},{"location":"CHANGELOG.html#fixed_72","text":"<ul> <li><code>NodeSet</code> now implements <code>to_ary</code></li> <li><code>XML::Document</code> should not implement parent</li> <li>More GC Bugs fixed.  (Mike is AWESOME!)</li> <li>Removed RARRAY_LEN for 1.8.5 compatibility.  Thanks Shane Hanna.</li> <li><code>inner_html</code> fixed. (Thanks Yehuda!)</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#102","text":"","title":"1.0.2"},{"location":"CHANGELOG.html#fixed_73","text":"<ul> <li><code>extconf.rb</code> should not check for frex and racc</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#101","text":"","title":"1.0.1"},{"location":"CHANGELOG.html#fixed_74","text":"<ul> <li>Made sure <code>extconf.rb</code> searched libdir and prefix so that ports libxml/ruby will link properly.  Thanks lucsky!</li> </ul>","title":"Fixed"},{"location":"CHANGELOG.html#100-2008-07-13","text":"","title":"1.0.0 / 2008-07-13"},{"location":"CHANGELOG.html#added_39","text":"<ul> <li>Birthday!</li> </ul>","title":"Added"},{"location":"CODE_OF_CONDUCT.html","text":"","title":"Contributor Covenant Code of Conduct"},{"location":"CODE_OF_CONDUCT.html#our-pledge","text":"<p>In the interest of fostering an open and welcoming environment, we as contributors and maintainers pledge to making participation in our project and our community a harassment-free experience for everyone, regardless of age, body size, disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, religion, or sexual identity and orientation.</p>","title":"Our Pledge"},{"location":"CODE_OF_CONDUCT.html#our-standards","text":"<p>Examples of behavior that contributes to creating a positive environment include:</p> <ul> <li>Using welcoming and inclusive language</li> <li>Being respectful of differing viewpoints and experiences</li> <li>Gracefully accepting constructive criticism</li> <li>Focusing on what is best for the community</li> <li>Showing empathy towards other community members</li> </ul> <p>Examples of unacceptable behavior by participants include:</p> <ul> <li>The use of sexualized language or imagery and unwelcome sexual attention or  advances</li> <li>Trolling, insulting/derogatory comments, and personal or political attacks</li> <li>Public or private harassment</li> <li>Publishing others' private information, such as a physical or electronic  address, without explicit permission</li> <li>Other conduct which could reasonably be considered inappropriate in a  professional setting</li> </ul>","title":"Our Standards"},{"location":"CODE_OF_CONDUCT.html#our-responsibilities","text":"<p>Project maintainers are responsible for clarifying the standards of acceptable behavior and are expected to take appropriate and fair corrective action in response to any instances of unacceptable behavior.</p> <p>Project maintainers have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits, issues, and other contributions that are not aligned to this Code of Conduct, or to ban temporarily or permanently any contributor for other behaviors that they deem inappropriate, threatening, offensive, or harmful.</p>","title":"Our Responsibilities"},{"location":"CODE_OF_CONDUCT.html#scope","text":"<p>This Code of Conduct applies both within project spaces and in public spaces when an individual is representing the project or its community. Examples of representing a project or community include using an official project e-mail address, posting via an official social media account, or acting as an appointed representative at an online or offline event. Representation of a project may be further defined and clarified by project maintainers.</p>","title":"Scope"},{"location":"CODE_OF_CONDUCT.html#enforcement","text":"<p>Instances of abusive, harassing, or otherwise unacceptable behavior may be reported by contacting the project team at mike.dalessio@gmail.com. All complaints will be reviewed and investigated and will result in a response that is deemed necessary and appropriate to the circumstances. The project team is obligated to maintain confidentiality with regard to the reporter of an incident. Further details of specific enforcement policies may be posted separately.</p> <p>Project maintainers who do not follow or enforce the Code of Conduct in good faith may face temporary or permanent repercussions as determined by other members of the project's leadership.</p>","title":"Enforcement"},{"location":"CODE_OF_CONDUCT.html#attribution","text":"<p>This Code of Conduct is adapted from the Contributor Covenant, version 1.4, available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html</p> <p>For answers to common questions about this code of conduct, see https://www.contributor-covenant.org/faq</p>","title":"Attribution"},{"location":"CONTRIBUTING.html","text":"<p>This document is still a work-in-progress.</p> <p>This doc is intended to be a short introduction on how to modify and maintain Nokogiri.</p> <p>If you're looking for guidance on filing a bug report or getting support, please visit the \"Getting Help\" tutorial at the nokogiri.org site.</p>","title":"Contributing to Nokogiri"},{"location":"CONTRIBUTING.html#contents","text":"<ul> <li>Introduction</li> <li>Some guiding principles of the project</li> <li>Where to start getting involved</li> <li>Submitting Pull Requests</li> <li>How to set up your local development environment</li> <li>How to run the tests</li> <li>Style Guide</li> <li>How Continuous Integration (\"CI\") is configured</li> <li>Building gems</li> <li>Other utilities</li> <li>Rake tasks</li> <li>Making a release</li> <li>Code of Conduct</li> </ul>","title":"Contents"},{"location":"CONTRIBUTING.html#introduction","text":"<p>Hello there! I'm super excited that you're interested in contributing to Nokogiri. Welcome!</p> <p>This document is intended only to provide a brief introduction on how to contribute to Nokogiri. It's not a complete specification of everything you need to know, so if you want to know more, I encourage you to reach out to the maintainers in the Discord channel. We'd love to get to know you a bit better!</p>","title":"Introduction"},{"location":"CONTRIBUTING.html#some-guiding-principles-of-the-project","text":"<p>The top guiding principles, as noted in the README are:</p> <ul> <li>be secure-by-default by treating all documents as untrusted by default</li> <li>be a thin-as-reasonable layer on top of the underlying parsers, and don't attempt to fix behavioral differences between the parsers</li> </ul> <p>Nokogiri supports both CRuby and JRuby, and has native code specific to each (though much Ruby code is shared between them). Some related secondary principles are:</p> <ul> <li>Whenever possible, implement the same functionality for both CRuby and JRuby.</li> <li>Whenever possible, implement shared behavior as shared Ruby code (i.e., write as little native code as reasonable).</li> <li>Whenever possible, write tests that are not platform-specific (which includes skipping).</li> </ul> <p>Notably, despite all parsers being standards-compliant, there are behavioral inconsistencies between the parsers used in the CRuby and JRuby implementations, and Nokogiri does not and should not attempt to remove these inconsistencies. Instead, we surface these differences in the test suite when they are important/semantic; or we intentionally write tests to depend only on the important/semantic bits (omitting whitespace from regex matchers on results, for example).</p> <p>Nokogiri is widely used in the Ruby ecosystem, and so extra care should be taken to avoid introducing breaking changes. Please read our Semantic Versioning Policy to understand what we consider to be a breaking change.</p>","title":"Some guiding principles of the project"},{"location":"CONTRIBUTING.html#where-to-start-getting-involved","text":"<p>Please take a look at our Issues marked \"Help Wanted\".</p> <p>Also, pull requests for documentation improvements are always welcome!</p>","title":"Where to start getting involved"},{"location":"CONTRIBUTING.html#submitting-pull-requests","text":"<p>Pull requests that introduce behavior change must always contain a test demonstrating the behavior being introduced, fixed, or changed. These tests should ideally communicate to the maintainers the problem being solved. We will ask you for clarification if we don't understand the problem you're trying to solve.</p> <p>Please do not submit pull requests that make purely cosmetic changes to the code (style, naming, etc.). While we recognize that the code can always be improved, we would prefer you to focus on more impactful contributions.</p> <p>Feel free to push a \"work in progress\" to take advantage of the feedback loops from CI. But then please indicate that it's still in progress by marking it as a Draft Pull Request.</p>","title":"Submitting Pull Requests"},{"location":"CONTRIBUTING.html#how-to-set-up-your-local-development-environment","text":"","title":"How to set up your local development environment"},{"location":"CONTRIBUTING.html#basic","text":"<p>Clone https://github.com/sparklemotion/nokogiri and run <code>bundle install</code>.</p>","title":"Basic"},{"location":"CONTRIBUTING.html#advanced","text":"<p>Please install the latest or previous version of CRuby (e.g., 3.0 or 2.7 as of 2021-02), and a recent version of JRuby. We recommend using <code>rbenv</code>, which is used in test scripts when necessary to test gems against multiple rubies.</p> <p>Please install a system version of libxml2/libxslt (see Installing Nokogiri for details) so that you can test against both the packaged libraries and your system libraries.</p> <p>We recommend that you install <code>valgrind</code> if you can, but it's only necessary for debugging problems so feel free to wait until you need it. (I'm not sure valgrind is easily available on MacOS.)</p> <p>If you plan to package precompiled native gems, make sure <code>docker</code> is installed and is working properly.</p>","title":"Advanced"},{"location":"CONTRIBUTING.html#how-to-run-the-tests","text":"<p>Note that <code>rake test</code> does not compile the native extension, and this is intentional. If you're modifying the extension code, please make sure you re-compile each time you run the tests to ensure you're testing your changes.</p>","title":"How to run the tests"},{"location":"CONTRIBUTING.html#the-short-version","text":"<pre><code>bundle exec rake compile test\n</code></pre>","title":"The short version"},{"location":"CONTRIBUTING.html#cruby-advanced-usage","text":"<p>Test using your system's libraries:</p> <pre><code>bundle exec rake clean # blow away pre-existing libraries using packaged libs\nNOKOGIRI_USE_SYSTEM_LIBRARIES=t bundle exec rake compile test\n</code></pre> <p>Run tests using valgrind:</p> <pre><code>bundle exec rake compile test:valgrind\n</code></pre> <p>Run tests in the debugger:</p> <pre><code>bundle exec rake compile test:gdb\n</code></pre> <p>Note that by default the test suite will run a major GC after each test completes. This has shown to be useful for localizing entire classes of memory bugs, but does slow the suite down. Some variations of the test suite behavior are available (see <code>test/helper.rb</code> for more info):</p> <pre><code># see failure messages immediately\nNOKOGIRI_TEST_FAIL_FAST=t bundle exec rake compile test\n\n# ordinary GC behavior\nNOKOGIRI_TEST_GC_LEVEL=normal bundle exec rake compile test\n\n# minor GC after each test\nNOKOGIRI_TEST_GC_LEVEL=minor bundle exec rake compile test\n\n# major GC after each test\nNOKOGIRI_TEST_GC_LEVEL=major bundle exec rake compile test\n\n# major GC after each test and GC compaction after every 20 tests\nNOKOGIRI_TEST_GC_LEVEL=compact bundle exec rake compile test\n\n# verify references after compaction after every 20 tests\n# (see https://alanwu.space/post/check-compaction/)\nNOKOGIRI_TEST_GC_LEVEL=verify bundle exec rake compile test\n\n# run with GC \"stress mode\" on\nNOKOGIRI_TEST_GC_LEVEL=stress bundle exec rake compile test\n</code></pre>","title":"CRuby advanced usage"},{"location":"CONTRIBUTING.html#libxml2-advanced-usage","text":"<p>If you want to build Nokogiri against a modified version of libxml2, clone libxml2 to <code>../libxml2</code> and then run <code>scripts/compile-against-libxml2-source</code>.</p> <p>That script also takes an optional command to run with the proper environment variables set to use the local libxml2 library, which can be useful when trying to <code>git bisect</code> against libxml2.</p>","title":"libxml2 advanced usage"},{"location":"CONTRIBUTING.html#gumbo-html5-parser","text":"<p>To run the test suite for the gumbo parser:</p> <pre><code>bundle exec rake gumbo\n</code></pre> <p>To make sure to run additional html5lib tests for Nokogiri's HTML5 parser:</p> <pre><code>git submodule update --init # test/html5lib-tests\nbundle exec rake compile test\n</code></pre>","title":"gumbo HTML5 parser"},{"location":"CONTRIBUTING.html#style-guide","text":"<p>I don't feel very strongly about code style, but when possible I follow Shopify's Ruby Style Guide, and for C and Java code I use the <code>astyle</code> settings laid out in <code>/rakelib/format.rake</code>.</p> <p>You can format the C and Java code with <code>rake format</code>. Maybe someday I'll auto-format Ruby, but not today.</p> <p>No, I don't want to talk to you about this.</p>","title":"Style Guide"},{"location":"CONTRIBUTING.html#how-continuous-integration-ci-is-configured","text":"<p>The bulk of CI is running in Github Actions since May 2021: https://github.com/sparklemotion/nokogiri/actions</p> <p>However, we also run tests against 32-bit windows (which aren't supported by GA as of this writing) in Appveyor: https://ci.appveyor.com/project/flavorjones/nokogiri</p> <p>Please note that there are some known holes in CI coverage due to <code>actions/download-artifact</code> (as well as other actions) not supporting systems other than 64-bit glibc:</p> <ul> <li>installing ruby and native gems on Alpine/musl</li> <li>installing ruby and native gems on 32-bit Linux</li> </ul> <p>For more information, please check out #2244 and #2247 which document the migration from Concourse to Github Actions.</p>","title":"How Continuous Integration (\"CI\") is configured"},{"location":"CONTRIBUTING.html#coverage","text":"<p>The <code>ci.yml</code> pipeline includes jobs to:</p> <ul> <li>basic security sanity check: run rubocop</li> <li>fast feedback for obvious failures: run against system libraries on vanilla ubuntu</li> <li>run the gumbo parser tests on ubuntu, macos, and windows</li> <li>run on all supported versions of CRuby:<ul> <li>once with packaged libraries</li> <li>once with system libraries</li> <li>once on valgrind (to look for memory bugs)</li> </ul> </li> <li>run on JRuby</li> <li>run on a Musl (Alpine) system:<ul> <li>against system libraries</li> <li>with valgrind using packaged libraries</li> </ul> </li> <li>run with libxml-ruby loaded (because this interacts with libxml2 in conflicting ways)<ul> <li>against system libraries</li> <li>with valgrind using packaged libraries</li> </ul> </li> </ul> <p>The <code>upstream.yml</code> pipeline includes jobs to:</p> <ul> <li>run against CRuby head (linux, windows, macos) including valgrind</li> <li>run against JRuby head</li> <li>run against libxml2 and libxslt head (linux only today) including valgrind</li> </ul> <p>The <code>gem-install.yml</code> pipeline includes jobs to:</p> <ul> <li>build a \"ruby\" platform gem<ul> <li>install and test on linux, macos, and windows</li> </ul> </li> <li>build a native 64-bit gem (linux, macos, windows)<ul> <li>install and test against all supported versions of CRuby</li> <li>install and test on musl</li> </ul> </li> <li>build a jruby gem, install and test it</li> </ul> <p>The <code>truffle.yml</code> pipeline tests TruffleRuby nightlies with a few different compile-time flags. TruffleRuby support is still experimental due to Sulong limitations, and the test suite is exceedingly slow when run by TR, so this pipeline doesn't run on pushes and PRs. Instead, it runs periodically on a timer to give us some signal without slowing down developer feedback loops.</p>","title":"Coverage"},{"location":"CONTRIBUTING.html#valgrind","text":"<p>We rely heavily on Valgrind to catch memory bugs by running in combination with every version of CRuby. We use suppressions, too -- because some Rubies seem to have memory issues? See the files in the <code>/suppressions</code> directory and <code>/rakelib/test.rake</code> for more information.</p>","title":"Valgrind"},{"location":"CONTRIBUTING.html#conventions","text":"<ul> <li>Always checkout the source code including submodules (for the html5lib tests)</li> <li>When testing packaged libraries (not system libraries), cache either <code>ports/</code> (for compiled libraries) or <code>ports/archives/</code> (for just tarballs)</li> <li>note that <code>libgumbo</code> is built outside of <code>ports/</code> to allow us to do this caching safely</li> </ul>","title":"Conventions"},{"location":"CONTRIBUTING.html#building-gems","text":"<p>As a prerequisite please make sure you have <code>docker</code> correctly installed.</p> <p>Run <code>scripts/build-gems</code> which will package gems for all supported platforms, and run some basic sanity tests on those packages using <code>scripts/test-gem-set</code>, <code>scripts/test-gem-file-contents</code>, and <code>scripts/test-gem-installation</code>.</p>","title":"Building gems"},{"location":"CONTRIBUTING.html#other-utilities","text":"<p><code>scripts/test-exported-symbols</code> checks the compiled <code>nokogiri.so</code> library for surprising exported symbols. This script likely only works on Linux, sorry.</p> <p><code>scripts/test-nokogumbo-compatibility</code> is used by CI to ensure that Nokogumbo installs correctly against the currently-installed version of Nokogiri. Nokogumbo receives this extra care because it compiles against Nokogiri's and libxml2's header files, and makes assumptions about what symbols are exported by Nokogiri's extension library.</p> <p><code>scripts/files-modified-by-open-prs</code> is a hack to see what files are being proposed to change in the set of open pull requests. This might be useful if you're thinking about radically changing a file, to be aware of what merge conflicts might result. This could probably be a rake task.</p> <p>There's a <code>Vagrantfile</code> in the project root which I've used once or twice to try to reproduce problems non-Linux systems (like OpenBSD). It's not well-maintained so YMMV.</p>","title":"Other utilities"},{"location":"CONTRIBUTING.html#rake-tasks","text":"<p>The <code>Rakefile</code> used to be a big fat mess. It's now decomposed into a small set of files in <code>/rakelib</code>. If you've got a new rake task you'd like to introduce, please consider whether it belongs in one of the existing concerns, or needs a new file. Please don't add it to <code>Rakefile</code> without compelling reasons.</p>","title":"Rake tasks"},{"location":"CONTRIBUTING.html#making-a-release","text":"<p>A quick checklist:</p> <ul> <li>[ ] make sure CI is green!</li> <li>[ ] update <code>CHANGELOG.md</code> and <code>lib/nokogiri/version/constant.rb</code></li> <li>[ ] create a git tag</li> <li>[ ] run <code>scripts/build-gems</code> and make sure it completes and all the tests pass</li> <li>[ ] <code>for g in gems/*.gem ; do gem push $g ; done</code></li> <li>[ ] create a release at https://github.com/sparklemotion/nokogiri/releases and provide sha2 checksums</li> <li>[ ] if security-related, email ruby-security-ann@googlegroups.com and ruby-talk@ruby-lang.org</li> <li>[ ] update nokogiri.org</li> </ul>","title":"Making a release"},{"location":"CONTRIBUTING.html#code-of-conduct","text":"<p>Our full Code of Conduct is in <code>CODE_OF_CONDUCT.md</code>.</p> <p>For best results, be nice. Remember that Nokogiri maintainers are volunteers, and treat them with respect.</p> <p>Do not act entitled to service. Do not be rude. Do not use judgmental or foul language.</p> <p>The maintainers reserve the right to delete comments that are rude, or that contain foul language. The maintainers reserve the right to delete comments that they deem harassing or offensive.</p>","title":"Code of Conduct"},{"location":"LICENSE-DEPENDENCIES.html","text":"<p>Nokogiri ships with some third party dependencies, which are listed here along with their licenses.</p> <p>Note that this document is broken into multiple sections, each of which describes the dependencies of a different \"platform release\" of Nokogiri.</p>   <ul> <li>Platform Releases</li> <li>Default platform release (\"ruby\")</li> <li>Native Linux\u24c7 platform releases (\"x86_64-linux\" and \"arm64-linux\")</li> <li>Native Darwin (macOS\u24c7) platform releases (\"x86_64-darwin\" and \"arm64-darwin\")</li> <li>Native Windows\u24c7 platform releases (\"x86-mingw32\" and \"x64-mingw32\")</li> <li>Java\u24c7 (JRuby) platform release (\"java\")</li> <li>Appendix: Dependencies' License Texts</li> <li>libgumbo and nokogumbo</li> <li>libxml2</li> <li>libxslt</li> <li>zlib</li> <li>libiconv</li> <li>isorelax</li> <li>jing</li> <li>nekodtd</li> <li>nekohtml</li> <li>xalan</li> <li>xerces</li> <li>xml-apis</li> </ul>  <p>Anyone consuming this file via license-tracking software should endeavor to understand which gem file you're downloading and using, so as not to misinterpret the contents of this file and the licenses of the software being distributed.</p> <p>You can double-check the dependencies in your gem file by examining the output of <code>nokogiri -v</code> after installation, which will emit the complete set of libraries in use (for versions <code>&gt;= 1.11.0.rc4</code>).</p> <p>In particular, I'm sure somebody's lawyer, somewhere, is going to freak out that the LGPL appears in this file; and so I'd like to take special note that the dependency covered by LGPL, <code>libiconv</code>, is only being redistributed in the native Windows and native Darwin platform releases. It's not present in default, Java\u24c7, or native Linux\u24c7 releases.</p>","title":"Vendored Dependency Licenses"},{"location":"LICENSE-DEPENDENCIES.html#platform-releases","text":"","title":"Platform Releases"},{"location":"LICENSE-DEPENDENCIES.html#default-platform-release-ruby","text":"<p>The default platform release distributes the following dependencies in source form:</p> <ul> <li>libxml2</li> <li>libxslt</li> <li>libgumbo and nokogumbo</li> </ul> <p>This distribution can be identified by inspecting the included Gem::Specification, which will have the value \"ruby\" for its \"platform\" attribute.</p>","title":"Default platform release (\"ruby\")"},{"location":"LICENSE-DEPENDENCIES.html#native-linuxr-platform-releases-x86_64-linux-and-arm64-linux","text":"<p>The native Linux\u24c7 platform release distributes the following dependencies in source form:</p> <ul> <li>libxml2</li> <li>libxslt</li> <li>libgumbo and nokogumbo</li> <li>zlib</li> </ul> <p>This distribution can be identified by inspecting the included Gem::Specification, which will have a value similar to \"x86_64-linux\" or \"x86-linux\" for its \"platform.cpu\" attribute.</p>","title":"Native Linux\u24c7 platform releases (\"x86_64-linux\" and \"arm64-linux\")"},{"location":"LICENSE-DEPENDENCIES.html#native-darwin-macosr-platform-releases-x86_64-darwin-and-arm64-darwin","text":"<p>The native Darwin platform release distributes the following dependencies in source form:</p> <ul> <li>libxml2</li> <li>libxslt</li> <li>libgumbo and nokogumbo</li> <li>zlib</li> <li>libiconv</li> </ul> <p>This distribution can be identified by inspecting the included Gem::Specification, which will have a value similar to \"x86_64-darwin\" or \"arm64-darwin\" for its \"platform.cpu\" attribute. Darwin is also known more familiarly as \"OSX\" or \"macOS\u24c7\" and is the operating system for many Apple\u24c7 computers.</p>","title":"Native Darwin (macOS\u24c7) platform releases (\"x86_64-darwin\" and \"arm64-darwin\")"},{"location":"LICENSE-DEPENDENCIES.html#native-windowsr-platform-releases-x86-mingw32-and-x64-mingw32","text":"<p>The native Windows\u24c7 platform release distributes the following dependencies in source form:</p> <ul> <li>libxml2</li> <li>libxslt</li> <li>libgumbo and nokogumbo</li> <li>zlib</li> <li>libiconv</li> </ul> <p>This distribution can be identified by inspecting the included Gem::Specification, which will have a value similar to \"x64-mingw32\" or \"x86-mingw32\" for its \"platform.cpu\" attribute.</p>","title":"Native Windows\u24c7 platform releases (\"x86-mingw32\" and \"x64-mingw32\")"},{"location":"LICENSE-DEPENDENCIES.html#javar-jruby-platform-release-java","text":"<p>The Java platform release distributes the following dependencies as compiled jar files:</p> <ul> <li>isorelax</li> <li>jing</li> <li>nekodtd</li> <li>nekohtml</li> <li>xalan</li> <li>xerces</li> <li>xml-apis</li> </ul> <p>This distribution can be identified by inspecting the included Gem::Specification, which will have the value \"java\" for its \"platform.os\" attribute.</p>","title":"Java\u24c7 (JRuby) platform release (\"java\")"},{"location":"LICENSE-DEPENDENCIES.html#appendix-dependencies-license-texts","text":"<p>This section contains a subsection for each potentially-distributed dependency, which includes the name of the license and the license text.</p> <p>Please see previous sections to understand which of these potential dependencies is actually distributed in the gem file you're downloading and using.</p>","title":"Appendix: Dependencies' License Texts"},{"location":"LICENSE-DEPENDENCIES.html#libgumbo-and-nokogumbo","text":"<p>Apache 2.0</p> <p>https://github.com/rubys/nokogumbo/blob/f6a7412/LICENSE.txt</p> <pre><code>                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</code></pre>","title":"libgumbo and nokogumbo"},{"location":"LICENSE-DEPENDENCIES.html#libxml2","text":"<p>MIT</p> <p>http://xmlsoft.org/</p> <pre><code>Except where otherwise noted in the source code (e.g. the files hash.c,\nlist.c and the trio files, which are covered by a similar licence but\nwith different Copyright notices) all the files are:\n\n Copyright (C) 1998-2012 Daniel Veillard.  All Rights Reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is fur-\nnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT-\nNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n</code></pre>","title":"libxml2"},{"location":"LICENSE-DEPENDENCIES.html#libxslt","text":"<p>MIT</p> <p>http://xmlsoft.org/libxslt/</p> <pre><code>Licence for libxslt except libexslt\n----------------------------------------------------------------------\n Copyright (C) 2001-2002 Daniel Veillard.  All Rights Reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is fur-\nnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT-\nNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nDANIEL VEILLARD BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CON-\nNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nExcept as contained in this notice, the name of Daniel Veillard shall not\nbe used in advertising or otherwise to promote the sale, use or other deal-\nings in this Software without prior written authorization from him.\n\n----------------------------------------------------------------------\n\nLicence for libexslt\n----------------------------------------------------------------------\n Copyright (C) 2001-2002 Thomas Broyer, Charlie Bozeman and Daniel Veillard.\n All Rights Reserved.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is fur-\nnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT-\nNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CON-\nNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nExcept as contained in this notice, the name of the authors shall not\nbe used in advertising or otherwise to promote the sale, use or other deal-\nings in this Software without prior written authorization from him.\n----------------------------------------------------------------------\n</code></pre>","title":"libxslt"},{"location":"LICENSE-DEPENDENCIES.html#zlib","text":"<p>zlib license</p> <p>http://www.zlib.net/zlib_license.html</p> <pre><code>  Copyright (C) 1995-2017 Jean-loup Gailly and Mark Adler\n\n  This software is provided 'as-is', without any express or implied\n  warranty.  In no event will the authors be held liable for any damages\n  arising from the use of this software.\n\n  Permission is granted to anyone to use this software for any purpose,\n  including commercial applications, and to alter it and redistribute it\n  freely, subject to the following restrictions:\n\n  1. The origin of this software must not be misrepresented; you must not\n     claim that you wrote the original software. If you use this software\n     in a product, an acknowledgment in the product documentation would be\n     appreciated but is not required.\n  2. Altered source versions must be plainly marked as such, and must not be\n     misrepresented as being the original software.\n  3. This notice may not be removed or altered from any source distribution.\n\n  Jean-loup Gailly        Mark Adler\n  jloup@gzip.org          madler@alumni.caltech.edu\n</code></pre>","title":"zlib"},{"location":"LICENSE-DEPENDENCIES.html#libiconv","text":"<p>LGPL</p> <p>https://www.gnu.org/software/libiconv/</p> <pre><code>          GNU LIBRARY GENERAL PUBLIC LICENSE\n               Version 2, June 1991\n\n Copyright (C) 1991 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the library GPL.  It is\n numbered 2 because it goes with version 2 of the ordinary GPL.]\n\n                Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Library General Public License, applies to some\nspecially designated Free Software Foundation software, and to any\nother libraries whose authors decide to use it.  You can use it for\nyour libraries, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if\nyou distribute copies of the library, or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link a program with the library, you must provide\ncomplete object files to the recipients so that they can relink them\nwith the library, after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  Our method of protecting your rights has two steps: (1) copyright\nthe library, and (2) offer you this license which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  Also, for each distributor's protection, we want to make certain\nthat everyone understands that there is no warranty for this free\nlibrary.  If the library is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original\nversion, so that any problems introduced by others will not reflect on\nthe original authors' reputations.\n\f\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that companies distributing free\nsoftware will individually obtain patent licenses, thus in effect\ntransforming the program into proprietary software.  To prevent this,\nwe have made it clear that any patent must be licensed for everyone's\nfree use or not licensed at all.\n\n  Most GNU software, including some libraries, is covered by the ordinary\nGNU General Public License, which was designed for utility programs.  This\nlicense, the GNU Library General Public License, applies to certain\ndesignated libraries.  This license is quite different from the ordinary\none; be sure to read it in full, and don't assume that anything in it is\nthe same as in the ordinary license.\n\n  The reason we have a separate public license for some libraries is that\nthey blur the distinction we usually make between modifying or adding to a\nprogram and simply using it.  Linking a program with a library, without\nchanging the library, is in some sense simply using the library, and is\nanalogous to running a utility program or application program.  However, in\na textual and legal sense, the linked executable is a combined work, a\nderivative of the original library, and the ordinary General Public License\ntreats it as such.\n\n  Because of this blurred distinction, using the ordinary General\nPublic License for libraries did not effectively promote software\nsharing, because most developers did not use the libraries.  We\nconcluded that weaker conditions might promote sharing better.\n\n  However, unrestricted linking of non-free programs would deprive the\nusers of those programs of all benefit from the free status of the\nlibraries themselves.  This Library General Public License is intended to\npermit developers of non-free programs to use free libraries, while\npreserving your freedom as a user of such programs to change the free\nlibraries that are incorporated in them.  (We have not seen how to achieve\nthis as regards changes in header files, but we have achieved it as regards\nchanges in the actual functions of the Library.)  The hope is that this\nwill lead to faster development of free libraries.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, while the latter only\nworks together with the library.\n\n  Note that it is possible for a library to be covered by the ordinary\nGeneral Public License rather than by this special one.\n\f\n          GNU LIBRARY GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library which\ncontains a notice placed by the copyright holder or other authorized\nparty saying it may be distributed under the terms of this Library\nGeneral Public License (also called \"this License\").  Each licensee is\naddressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also compile or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    c) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    d) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe source code distributed need not include anything that is normally\ndistributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Library General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n             END OF TERMS AND CONDITIONS\n\f\n     Appendix: How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    &lt;one line to give the library's name and a brief idea of what it does.&gt;\n    Copyright (C) &lt;year&gt;  &lt;name of author&gt;\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Library General Public\n    License as published by the Free Software Foundation; either\n    version 2 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Library General Public License for more details.\n\n    You should have received a copy of the GNU Library General Public\n    License along with this library; if not, write to the Free\n    Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,\n    MA 02110-1301, USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  &lt;signature of Ty Coon&gt;, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n</code></pre>","title":"libiconv"},{"location":"LICENSE-DEPENDENCIES.html#isorelax","text":"<p>MIT</p> <p>http://iso-relax.sourceforge.net/</p> <pre><code>Copyright (c) 2001-2002, SourceForge ISO-RELAX Project (ASAMI\nTomoharu, Daisuke Okajima, Kohsuke Kawaguchi, and MURATA Makoto)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n</code></pre>","title":"isorelax"},{"location":"LICENSE-DEPENDENCIES.html#jing","text":"<p>BSD-3-Clause</p> <p>http://www.thaiopensource.com/relaxng/jing.html</p> <pre><code>Copyright (c) 2001-2003 Thai Open Source Software Center Ltd\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above\n  copyright notice, this list of conditions and the following\n  disclaimer in the documentation and/or other materials provided\n  with the distribution.\n\n* Neither the name of the Thai Open Source Software Center Ltd nor\n  the names of its contributors may be used to endorse or promote\n  products derived from this software without specific prior\n  written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND\nCONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,\nOR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR\nTORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF\nTHE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGE.\n</code></pre>","title":"jing"},{"location":"LICENSE-DEPENDENCIES.html#nekodtd","text":"<p>Apache 1.0-derived</p> <p>https://people.apache.org/~andyc/neko/doc/dtd/</p> <pre><code>The CyberNeko Software License, Version 1.0\n\n(C) Copyright 2002-2005, Andy Clark.  All rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n1. Redistributions of source code must retain the above copyright\n   notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright\n   notice, this list of conditions and the following disclaimer in\n   the documentation and/or other materials provided with the\n   distribution.\n\n3. The end-user documentation included with the redistribution,\n   if any, must include the following acknowledgment:  \n     \"This product includes software developed by Andy Clark.\"\n   Alternately, this acknowledgment may appear in the software itself,\n   if and wherever such third-party acknowledgments normally appear.\n\n4. The names \"CyberNeko\" and \"NekoHTML\" must not be used to endorse\n   or promote products derived from this software without prior \n   written permission. For written permission, please contact \n   andyc@cyberneko.net.\n\n5. Products derived from this software may not be called \"CyberNeko\",\n   nor may \"CyberNeko\" appear in their name, without prior written\n   permission of the author.\n\nTHIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\nWARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR OTHER CONTRIBUTORS\nBE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, \nOR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT \nOF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR \nBUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, \nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE \nOR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, \nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n====================================================================\n\nThis license is based on the Apache Software License, version 1.1.\n</code></pre>","title":"nekodtd"},{"location":"LICENSE-DEPENDENCIES.html#nekohtml","text":"<p>Apache 2.0</p> <p>http://nekohtml.sourceforge.net/</p> <pre><code>                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</code></pre>","title":"nekohtml"},{"location":"LICENSE-DEPENDENCIES.html#xalan","text":"<p>Apache 2.0</p> <p>https://xml.apache.org/xalan-j/</p> <p>covers xalan.jar and serializer.jar</p> <pre><code>                                Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</code></pre>","title":"xalan"},{"location":"LICENSE-DEPENDENCIES.html#xerces","text":"<p>Apache 2.0</p> <p>https://xerces.apache.org/xerces2-j/</p> <pre><code>                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</code></pre>","title":"xerces"},{"location":"LICENSE-DEPENDENCIES.html#xml-apis","text":"<p>Apache 2.0</p> <p>https://xerces.apache.org/xml-commons/</p> <pre><code>Unless otherwise noted all files in XML Commons are covered under the\nApache License Version 2.0. Please read the LICENSE and NOTICE files.\n\nXML Commons contains some software and documentation that is covered\nunder a number of different licenses. This applies particularly to the\nxml-commons/java/external/ directory. Most files under\nxml-commons/java/external/ are covered under their respective\nLICENSE.*.txt files; see the matching README.*.txt files for\ndescriptions.\n\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n</code></pre>","title":"xml-apis"},{"location":"LICENSE.html","text":"<p>The MIT License</p> <p>Copyright 2008 -- 2021 by Mike Dalessio, Aaron Patterson, Yoko Harada, Akinori MUSHA, John Shahid, Karol Bucek, Sam Ruby, Craig Barnes, Stephen Checkoway, Lars Kanis, Sergio Arbeo, Timothy Elliott, Nobuyoshi Nakada, Charles Nutter, Patrick Mahoney.</p> <p>Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:</p> <p>The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.</p> <p>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>","title":"License"},{"location":"ROADMAP.html","text":"","title":"Roadmap for API Changes"},{"location":"ROADMAP.html#overhaul-serializepretty-printing-api","text":"<ul> <li> <p>#530   XHTML formatting can't be turned off</p> </li> <li> <p>#415   XML formatting should be no formatting</p> </li> </ul>","title":"overhaul serialize/pretty printing API"},{"location":"ROADMAP.html#overhaul-and-optimize-the-sax-parsing","text":"<ul> <li>see fairy wing throwdown - SAX parsing is wicked slow.</li> </ul>","title":"overhaul and optimize the SAX parsing"},{"location":"ROADMAP.html#node-should-not-be-enumerable-and-should-have-a-better-attributes-api","text":"<ul> <li> <p>#679   Mixing in Enumerable has some unintended consequences; plus we want to improve the attributes API</p> </li> <li> <p>Some ideas for a better attributes API?</p> <ul> <li>(closed) #666</li> <li>#765</li> </ul> </li> </ul>","title":"Node should not be Enumerable; and should have a better attributes API"},{"location":"ROADMAP.html#improve-css-query-parsing","text":"<ul> <li> <p>#528   support <code>:not()</code> with a nontrivial argument, like <code>:not(div p.c)</code></p> </li> <li> <p>#451   chained :not pseudoselectors</p> </li> <li> <p>better jQuery selector and CSS pseudo-selector support:</p> <ul> <li>#621</li> <li>#342</li> <li>#628</li> <li>#652</li> <li>#688</li> </ul> </li> <li> <p>#394   nth-of-type is wrong, and possibly other selectors as well</p> </li> <li> <p>#309   incorrect query being executed</p> </li> <li> <p>#350   :has is wrong?</p> </li> </ul>","title":"improve CSS query parsing"},{"location":"ROADMAP.html#documentfragment","text":"<ul> <li>there are a few tickets about searches not working properly if you   use or do not use the context node as part of the search.<ul> <li>#213</li> <li>#370</li> <li>#454</li> <li>#572   could we fix this by making DocumentFragment be a subclass of NodeSet?</li> </ul> </li> </ul>","title":"DocumentFragment"},{"location":"ROADMAP.html#better-syntax-for-custom-xpath-function-handler","text":"<ul> <li>PR#464</li> </ul>","title":"Better Syntax for custom XPath function handler"},{"location":"ROADMAP.html#better-syntax-around-nodexpath-and-nodesetxpath","text":"<ul> <li>look at those methods, and use of Node#extract_params in Node#{css,search}<ul> <li>we should standardize on a hash of options for these and other calls</li> </ul> </li> <li>what should NodeSet#xpath return?<ul> <li>#656</li> </ul> </li> </ul>","title":"Better Syntax around Node#xpath and NodeSet#xpath"},{"location":"ROADMAP.html#encoding","text":"<p>We have a lot of issues open around encoding. How bad are things? Somebody who knows encoding well should head this up.</p> <ul> <li>Extract EncodingReader as a real object that can be injected   https://groups.google.com/forum/#!msg/nokogiri-talk/arJeAtMqvkg/tGihB-iBRSAJ</li> </ul>","title":"Encoding"},{"location":"ROADMAP.html#reader","text":"<p>It's fundamentally broken, in that we can't stop people from crashing their application if they want to use object reference unsafely.</p>","title":"Reader"},{"location":"ROADMAP.html#class-methods-that-require-document","text":"<p>There are a few methods, like <code>Nokogiri::XML::Comment.new</code> that require a Document object.</p> <p>We should probably make Document instance methods to wrap this, since it's a non-obvious expectation and thus fails as a convention.</p> <p>So, instead, let's make alternative methods like <code>Nokogiri::XML::Document#new_comment</code>, and recommend those as the proper convention.</p>","title":"Class methods that require Document"},{"location":"ROADMAP.html#collect_namespaces-is-just-broken","text":"<p><code>collect_namespaces</code> is returning a hash, which means it can't return namespaces with the same prefix. See this issue for background:</p>  <p>#885</p>  <p>Do we care? This seems like a useless method, but then again I hate XML, so what do I know?</p>","title":"<code>collect_namespaces</code> is just broken"},{"location":"ROADMAP.html#overhaul-parseoptions","text":"<p>Currently we mirror libxml2's parse options, and then retrofit those options on top of Xerces-J for JRuby.</p> <ul> <li>I'd like to identify which options work across both parsers,</li> <li>And overhaul the parse methods so that these options are easier to use.</li> </ul> <p>By \"easier to use\" I mean:</p> <ul> <li>it's unwieldy to create a block to set/unset parse options</li> <li>it's unwieldy to create a constant like <code>MY_PARSE_OPTIONS = Nokogiri::XML::ParseOptions::STRICT | Nokogiri::XML::ParseOptions::RECOVER ...</code></li> <li>some options are named dangerously poorly, like <code>NOENT</code> which does the opposite of what it says</li> <li>semantically some options should be set/unset together, specifically \"this is a trusted document\" or \"this is an untrusted document\" should flip the senses of <code>NONET</code> and <code>NOENT</code> and <code>DTDLOAD</code> together.</li> <li>we need the ability to invent new parse options, like the one suggested in #1582 that would allow local entities but not external entities.</li> </ul>","title":"Overhaul <code>ParseOptions</code>"},{"location":"SECURITY.html","text":"<p>The Nokogiri Core Contributors take security very seriously and investigate all reported vulnerabilities.</p> <p>If you would like to report a vulnerablity or have a security concern regarding Nokogiri or how Nokogiri is using any of its underlying platform-specific libraries (such as libxml2 or xerces), please report it via HackerOne.</p> <p>Your report will be acknowledged within 24 hours, and you'll receive a more detailed response within 72 hours indicating next steps in handling your report.</p> <p>If you have not received a reply to your submission within 48 hours, there are a few steps you can take:</p> <ul> <li>Contact the current security coordinator (Mike Dalessio mike.dalessio@gmail.com)</li> <li>Contact the core contributor mailing list (nokogiri-core@googlegroups.com)</li> <li>Join the nokogiri-talk group</li> </ul> <p>Please note, the nokogiri-talk list is a public area. When escalating in that venue, please do not discuss your issue. Simply say that you're trying to get a hold of someone from the core team.</p> <p>The information you share with the Nokogiri Core Contributors as part of this process will be kept confidential within the team, unless or until we need to share information upstream with our dependent libraries' core teams, at which point we will notify you.</p> <p>If a vulnerability is first reported by you, we will credit you with the discovery in the public disclosure.</p>","title":"Security and Vulnerability Reporting"},{"location":"privacy-policy.html","text":"<p>This site uses cookies to measure the effectiveness of our documentation and whether users find what they're searching for. With your consent, you're helping us to make our documentation better.</p> <p>Click here to modify your cookie settings.</p>","title":"Privacy Policy"},{"location":"tidelift-landing.html","text":"","title":"Nokogiri for Enterprise"},{"location":"tidelift-landing.html#available-as-part-of-the-tidelift-subscription","text":"<p>Tidelift is working with the maintainers of Nokogiri and thousands of other open source projects to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use.</p>  Learn More Request a Demo","title":"Available as part of the Tidelift Subscription"},{"location":"tidelift-landing.html#enterprise-ready-open-source-software-managed-for-you","text":"<p>The Tidelift Subscription is a managed open source subscription for application dependencies covering millions of open source projects across JavaScript, Python, Java, PHP, Ruby, .NET, and more.</p> <p>Your subscription includes:</p>","title":"Enterprise-ready open source software \u2014 managed for you"},{"location":"tidelift-landing.html#security-updates","text":"<p>Tidelift\u2019s security response team coordinates patches for new breaking security vulnerabilities and alerts immediately through a private channel, so your software supply chain is always secure.</p>","title":"Security updates"},{"location":"tidelift-landing.html#licensing-verification-and-indemnification","text":"<p>Tidelift verifies license information to enable easy policy enforcement and adds intellectual property indemnification to cover creators and users in case something goes wrong. You always have a 100% up-to-date bill of materials for your dependencies to share with your legal team, customers, or partners.</p>","title":"Licensing verification and indemnification"},{"location":"tidelift-landing.html#maintenance-and-code-improvement","text":"<p>Tidelift ensures the software you rely on keeps working as long as you need it to work. Your managed dependencies are actively maintained and we recruit additional maintainers where required.</p>","title":"Maintenance and code improvement"},{"location":"tidelift-landing.html#package-selection-and-version-guidance","text":"<p>We help you choose the best open source packages from the start\u2014and then guide you through updates to stay on the best releases as new issues arise.</p>","title":"Package selection and version guidance"},{"location":"tidelift-landing.html#roadmap-input","text":"<p>Take a seat at the table with the creators behind the software you use. Tidelift\u2019s participating maintainers earn more income as their software is used by more subscribers, so they\u2019re interested in knowing what you need.</p>","title":"Roadmap input"},{"location":"tidelift-landing.html#tooling-and-cloud-integration","text":"<p>Tidelift works with GitHub, GitLab, BitBucket, and more. We support every cloud platform (and other deployment targets, too).</p>","title":"Tooling and cloud integration"},{"location":"tidelift-landing.html#the-end-result","text":"<p>All of the capabilities you expect from commercial-grade software, for the full breadth of open source you use. That means less time grappling with esoteric open source trivia, and more time building your own applications\u2014and your business.</p>  Learn More Request a Demo  <p> </p>","title":"The end result?"},{"location":"tutorials/ensuring_well_formed_markup.html","text":"","title":"Ensuring Well-Formed Markup"},{"location":"tutorials/ensuring_well_formed_markup.html#gentle-well-formedness","text":"<p>We've all seen bad markup in our day. I'm talking about markup that doesn't bother to close tags. I'm talking about putting <code>&lt;p&gt;</code> tags inside <code>&lt;p&gt;</code> tags, and putting content into an <code>&lt;img&gt;</code> tag.</p> <p>Nokogiri corrects bad markup like a boss, similarly to how a browser would before rendering.</p> <pre><code>badly_formed = &lt;&lt;-EOXML\n&lt;root&gt;\n  &lt;open&gt;foo\n    &lt;closed&gt;bar&lt;/closed&gt;\n&lt;/root&gt;\nEOXML\n\nbad_doc  = Nokogiri::XML badly_formed\n\nputs bad_doc         # =&gt; &lt;?xml version=\"1.0\"?&gt;\n                     #    &lt;root&gt;\n                     #      &lt;open&gt;foo\n                     #        &lt;closed&gt;bar&lt;/closed&gt;\n                     #    &lt;/open&gt;  \n                     #    &lt;/root&gt;\n</code></pre> <p>And Nokogiri will even keep track of what the errors were, if the parse option NOERRORS and NOWARNINGS are turned off (the default for XML documents).</p> <pre><code>puts bad_doc.errors  # =&gt; Opening and ending tag mismatch: open line 2 and root\n                     #    Premature end of data in tag root line 1\n</code></pre> <p>Thus, you could use <code>errors.empty?</code> to determine whether the document was well-formed.</p>","title":"Gentle Well-Formedness"},{"location":"tutorials/ensuring_well_formed_markup.html#strict-well-formedness","text":"<p>Being friendly and fixing markup is all well and good, but sometimes you need to be a Markup Nazi.</p> <p>If you demand compliance from your XML, then you can configure Nokogiri into \"strict\" parsing mode, in which it will raise an exception at the first sign of malformedness:</p> <pre><code>begin\n  bad_doc = Nokogiri::XML(badly_formed) { |config| config.strict }\nrescue Nokogiri::XML::SyntaxError =&gt; e\n  puts \"caught exception: #{e}\"\nend\n# =&gt; caught exception: Premature end of data in tag root line 1\n</code></pre>","title":"Strict Well-Formedness"},{"location":"tutorials/getting_help.html","text":"","title":"Getting Help"},{"location":"tutorials/getting_help.html#support-getting-help-and-reporting-issues","text":"<p>All official documentation is posted at https://nokogiri.org (the source for which is at https://github.com/sparklemotion/nokogiri.org/, and we welcome contributions).</p> <p>Consider subscribing to Tidelift which provides license assurances and timely security notifications for your open source dependencies, including Nokogiri. Tidelift subscriptions also help the Nokogiri maintainers fund our automated testing which in turn allows us to ship releases, bugfixes, and security updates more often.</p>","title":"Support, Getting Help, and Reporting Issues"},{"location":"tutorials/getting_help.html#reading","text":"<p>Your first stops for learning more about Nokogiri should be:</p> <ul> <li>API Documentation</li> <li>Tutorials</li> <li>An excellent community-maintained Cheat Sheet</li> </ul>","title":"Reading"},{"location":"tutorials/getting_help.html#ask-for-help","text":"<p>There are a few ways to ask exploratory questions:</p> <ul> <li>The Ruby Discord chat server is active at https://discord.gg/UyQnKrT</li> <li>The Nokogiri mailing list is active at https://groups.google.com/group/nokogiri-talk</li> <li>Open an issue using the \"Help Request\" template at https://github.com/sparklemotion/nokogiri/issues</li> </ul> <p>Please do not mail the maintainers at their personal addresses.</p>","title":"Ask For Help"},{"location":"tutorials/getting_help.html#report-a-bug","text":"<p>The Nokogiri bug tracker is at https://github.com/sparklemotion/nokogiri/issues</p> <p>Please use the \"Bug Report\" or \"Installation Difficulties\" templates.</p>","title":"Report A Bug"},{"location":"tutorials/getting_help.html#security-and-vulnerability-reporting","text":"<p>Please report vulnerabilities at https://hackerone.com/nokogiri</p> <p>Full information and description of our security policy is in <code>SECURITY.md</code></p>","title":"Security and Vulnerability Reporting"},{"location":"tutorials/installing_nokogiri.html","text":"<p>Welcome! We've spent quite a bit of time over the past year trying to make Nokogiri v1.11 easy and reliable to install. This page should hopefully get you on your way quickly.</p>","title":"Installing Nokogiri"},{"location":"tutorials/installing_nokogiri.html#meta","text":"<p>The current version of this page focuses on the installation experience for Nokogiri v1.11.x. If you're trying to install an earlier version, please visit:</p> <ul> <li>Nokogiri v1.10.x installation instructions</li> </ul> <p>If this document doesn't address your problem, please jump over to Getting Help.</p> <p>If you'd like to contribute improvements to this document, please open a GitHub issue or pull-request on nokogiri.org/installing_nokogiri.md.</p>","title":"Meta"},{"location":"tutorials/installing_nokogiri.html#installing-native-gems","text":"","title":"Installing Native Gems"},{"location":"tutorials/installing_nokogiri.html#faster-more-reliable-installation","text":"<p>\"Native gems\" contain pre-compiled libraries for a specific machine architecture. On supported platforms, this removes the need for compiling the C extension and the packaged libraries, or for system dependencies to exist. This results in much faster installation and more reliable installation, which as you probably know are the biggest headaches for Nokogiri users.</p>","title":"Faster, more reliable installation"},{"location":"tutorials/installing_nokogiri.html#supported-platforms","text":"<p>As of v1.11.0, Nokogiri ships pre-compiled, \"native\" gems for the following platforms:</p> <ul> <li>Linux: <code>x86-linux</code> and <code>x86_64-linux</code> (req: <code>glibc &gt;= 2.17</code>), including musl platforms like Alpine</li> <li>Darwin/MacOS: <code>x86_64-darwin</code> and <code>arm64-darwin</code></li> <li>Windows: <code>x86-mingw32</code> and <code>x64-mingw32</code></li> <li>Java: any platform running JRuby 9.2 or higher</li> </ul> <p>To determine whether your system supports one of these gems, look at the output of <code>bundle platform</code> or <code>ruby -e 'puts Gem::Platform.local.to_s'</code>.</p> <p>If you're on a supported platform, either <code>gem install</code> or <code>bundle install</code> should install a native gem without any additional action on your part. This installation should only take a few seconds, and your output should look something like:</p> <pre><code>$ gem install nokogiri\nFetching nokogiri-1.11.0-x86_64-linux.gem\nSuccessfully installed nokogiri-1.11.0-x86_64-linux\n1 gem installed\n</code></pre>","title":"Supported Platforms"},{"location":"tutorials/installing_nokogiri.html#why-would-i-not-want-to-use-a-native-gem","text":"<p>I can imagine some folks might have trust issues; if this is you, please let us know in a comment at RFC: Increase the level of trust in released gem files \u00b7 Issue #2013 \u00b7 sparklemotion/nokogiri. What can we do to increase that trust? (I can imagine providing a chain of custody including public build logs with cryptographic hashes of artifacts, but I'd like to hear from real users.)</p> <p>Anybody on a linux system old enough to not have <code>glibc &gt;= 2.17</code> will need to install from the <code>ruby</code> platform gem.</p> <p>If you have other reasons for not wanting to use a precompiled native gem, let us know! (See Getting Help.)</p>","title":"Why would I not want to use a native gem?"},{"location":"tutorials/installing_nokogiri.html#how-can-i-avoid-using-a-precompiled-native-gem","text":"<p>The Nokogiri maintainers strongly urge you to use a native gem if at all possible. We expect it will be a much better experience for you and allow us to focus our efforts on improving functionality rather than diagnosing installation issues.</p> <p>If you're on a platform that supports a native gem but you want to avoid using it in your project, do one of the following:</p> <ul> <li>If you're not using Bundler, then run <code>gem install nokogiri --platform=ruby</code></li> <li>If you are using Bundler</li> <li>version 2.1 or later, then you'll need to run <code>bundle config set force_ruby_platform true</code>,</li> <li>version 2.0 or earlier, then you'll need to run <code>bundle config force_ruby_platform true</code></li> </ul>","title":"How can I avoid using a precompiled native gem?"},{"location":"tutorials/installing_nokogiri.html#installing-the-ruby-platform-gem","text":"<p>Again, we recommend that you upgrade to v1.11.x and use a native gem whenever possible. If you're here, it should be because you're on an older version, or you're on an unsupported platform.</p> <p>Before you begin, make sure you have the full compiler toolchain for compiling Ruby C Extensions. See Appendix A: The Compiler Toolchain.</p>","title":"Installing the <code>ruby</code> platform gem"},{"location":"tutorials/installing_nokogiri.html#installing-using-the-packaged-libraries","text":"<p>Nokogiri packages its own updated and patched copies of libxml2 and libxslt source code. By default, installation of Nokogiri will compile and use these packaged libraries.</p> <p>If you don't see your operating system / distro in this section, then no additional setup is required beyond Appendix A: The Compiler Toolchain. Just run <code>gem install nokogiri --platform=ruby</code>.</p>","title":"Installing Using The Packaged Libraries"},{"location":"tutorials/installing_nokogiri.html#ubuntu-or-debian-based-distros","text":"<pre><code>sudo apt-get install zlib1g-dev liblzma-dev patch\ngem install nokogiri --platform=ruby\n</code></pre> <p>You may substitute <code>git</code> for <code>patch</code> (<code>mini_portile2</code> can use either for applying patches).</p>","title":"Ubuntu or Debian-based Distros"},{"location":"tutorials/installing_nokogiri.html#fedora-red-hat-and-centos","text":"<pre><code>dnf install -y zlib-devel\ngem install nokogiri --platform=ruby\n</code></pre>","title":"Fedora, Red Hat, and CentOS"},{"location":"tutorials/installing_nokogiri.html#openbsd-62","text":"<p>Use <code>gcc</code> from ports in order to compile the packaged libraries:</p> <pre><code>pkg_add -v gcc\ngem install nokogiri --platform=ruby\n</code></pre>","title":"OpenBSD &lt; 6.2"},{"location":"tutorials/installing_nokogiri.html#installing-using-standard-system-libraries","text":"<p>Rather than use Nokogiri's packaged versions, you may prefer to use your system's or distro's standard libxml2/libxslt libraries. This section will try to help you do that.</p> <p>Nokogiri will refuse to build against older, unsupported versions of <code>libxml2</code> and <code>libxslt</code>, and there may be some behavioral changes when using older versions. If you have installed libxml2 or libxslt to a custom location, please jump to the next section, Installing With Custom / Non-Standard Libraries.</p> <p>If you don't see your operating system or distro listed below, then no additional setup is required beyond Appendix A: The Compiler Toolchain. Just run <code>gem install nokogiri --platform=ruby -- --use-system-libraries</code>. Or, if you're using bundler, <code>bundle config build.nokogiri --use-system-libraries</code>.</p>","title":"Installing Using Standard System Libraries"},{"location":"tutorials/installing_nokogiri.html#debianubuntu","text":"<pre><code>sudo apt-get install pkg-config libxml2-dev libxslt-dev\ngem install nokogiri --platform=ruby -- --use-system-libraries\n</code></pre>","title":"Debian/Ubuntu"},{"location":"tutorials/installing_nokogiri.html#macos","text":"<p>If you're using homebrew:</p> <pre><code>brew install libxml2 libxslt\ngem install nokogiri --platform=ruby -- --use-system-libraries\n</code></pre> <p>If you're using macports and would like to contribute documentation, please open a GitHub issue or pull-request on nokogiri.org/installing_nokogiri.md.</p>","title":"MacOS"},{"location":"tutorials/installing_nokogiri.html#freebsd","text":"<pre><code>sudo pkg install pkgconf\ngem install nokogiri --platform=ruby -- --use-system-libraries\n</code></pre>","title":"FreeBSD"},{"location":"tutorials/installing_nokogiri.html#windows","text":"<p>We recommend installing Nokogiri against the MSYS2 system libraries:</p> <pre><code>ridk exec pacman -S mingw-w64-x86_64-libxslt\ngem install nokogiri --platform=ruby -- --use-system-libraries\n</code></pre>","title":"Windows"},{"location":"tutorials/installing_nokogiri.html#installing-with-custom-non-standard-libraries","text":"<p>You may have your own custom version of libxml2/libxslt that you'd like to use. OK! Here we go.</p> <p>Ideally you can install <code>pkg-config</code> and the installed libraries should self-describe how to compile and build against themselves.</p> <p>But if:</p> <ul> <li>you've got <code>libxml2</code> and/or <code>libxslt</code> installed in a nonstandard place,</li> <li>and you don't have <code>pkg-config</code> installed</li> </ul> <p>... then you can use command-line parameters to the <code>gem install</code> command to specify build parameters.</p> <p>You can specify the installation root directory:</p> <pre><code>gem install nokogiri -- \\\n    --use-system-libraries \\\n    --with-xml2-dir=/path/to/dir \\\n    --with-xslt-dir=/path/to/dir\n</code></pre> <p>or, you can specify include and library directories separately:</p> <pre><code>gem install nokogiri -- \\\n    --use-system-libraries \\\n    --with-xml2-lib=/path/to/builds/lib \\\n    --with-xml2-include=/path/to/builds/include/libxml2 \\\n    --with-xslt-lib=/path/to/builds/lib \\\n    --with-xslt-include=/path/to/builds/include\n</code></pre> <p>Note: By default, libxslt header files are installed into the root include directory, but libxml2 header files are installed into a subdirectory thereof named <code>libxml2</code>.</p> <p>It's likely that you'll also need to specify the location of your <code>zlib</code> and <code>iconv</code> (and possibly <code>exslt</code>) install directories as well. In that case, you can add the options:</p> <pre><code>gem install nokogiri -- \\\n    --use-system-libraries \\\n    # ...\n    --with-iconv-dir=/path/to/dir \\\n    --with-zlib-dir=/path/to/dir \\\n    [--with-exslt-dir=/path/to/dir]\n    [--with-exslt-config=/path/to/exslt-config]\n</code></pre> <p>You can also tell bundler to remember these configuration parameters:</p> <pre><code>bundle config build.nokogiri \\\n       --use-system-libraries \\\n       --with-xml2-lib=/usr/local/lib \\\n       --with-xml2-include=/usr/local/include/libxml2/libxml \\\n       --with-xslt-lib=/usr/local/lib \\\n       --with-xslt-include=/usr/local/include/libxslt \\\n       --with-iconv-lib=/usr/local/lib \\\n       --with-iconv-include=/usr/local/include\n</code></pre> <p>Do not attempt Bundler installation using Bundler versions before v1.8.3 (see bundler/bundler#3053 for details). If you really must, see earlier git history of this file, which includes a workaround.</p>","title":"Installing With Custom / Non-Standard Libraries"},{"location":"tutorials/installing_nokogiri.html#installing-third-party-distributions-of-nokogiri","text":"","title":"Installing Third-Party Distributions of Nokogiri"},{"location":"tutorials/installing_nokogiri.html#debian","text":"<p>See https://packages.debian.org/sid/ruby-nokogiri</p> <pre><code>sudo apt-get install ruby-nokogiri\n</code></pre>","title":"Debian"},{"location":"tutorials/installing_nokogiri.html#opensusesle","text":"<p>See https://download.opensuse.org/repositories/devel:/languages:/ruby:/extensions/</p>","title":"openSUSE/SLE"},{"location":"tutorials/installing_nokogiri.html#fedora-red-hat-and-centos_1","text":"<p>You may install the appropriate epel-release and get the Nokogiri package from EPEL using:</p> <pre><code>sudo dnf install -y rubygem-nokogiri\n</code></pre>","title":"Fedora, Red Hat, and CentOS"},{"location":"tutorials/installing_nokogiri.html#gnu-guix","text":"<p>Install on any Linux distribution using GNU Guix, a reproducible binary software package management and distribution system.</p> <p>Use this command:</p> <pre><code>guix package -i ruby-nokogiri\n</code></pre> <p>Note: source code is available here. A short description of how Nokogiri was packaged can be found here.</p>","title":"GNU Guix"},{"location":"tutorials/installing_nokogiri.html#other-installation-scenarios","text":"","title":"Other Installation Scenarios"},{"location":"tutorials/installing_nokogiri.html#alpine-docker-images","text":"<p>To just install the native gem:</p> <pre><code>FROM ruby:3.0-alpine\n\nRUN gem install nokogiri\n</code></pre> <p>To compile with the packaged libraries:</p> <pre><code>FROM ruby:3.0-alpine\n\nRUN apk add --no-cache build-base\nRUN gem install nokogiri --platform=ruby\n</code></pre> <p>To compile against Alpine's own XML libraries, add the necessary development tools and libraries to the image.</p> <pre><code>FROM ruby:3.0-alpine\n\nRUN apk add --no-cache build-base libxml2-dev libxslt-dev\nRUN gem install nokogiri --platform=ruby -- --use-system-libraries\n</code></pre> <p>When optimizing the size of an Alpine image, the runtime libraries must be permanently added. Additionally, adding and removing development tooling can be chained with gem installation to ensure a small layer.</p> <pre><code>FROM ruby:3.0-alpine\n\nRUN apk add --no-cache libxml2 libxslt &amp;&amp; \\\n        apk add --no-cache --virtual .gem-installdeps build-base libxml2-dev libxslt-dev &amp;&amp; \\\n        gem install nokogiri --platform=ruby -- --use-system-libraries &amp;&amp; \\\n        rm -rf $GEM_HOME/cache &amp;&amp; \\\n        apk del .gem-installdeps\n</code></pre> <p>This approach nets an 12.1 MB layer (versus 18.1 MB without <code>--use-system-libraries</code>) and saves over 170 MB in build tools.</p>","title":"Alpine Docker Images"},{"location":"tutorials/installing_nokogiri.html#termux","text":"<p>Although TermUX isn't fully supported right now, some people have reported success getting Nokogiri installed on it by running these commands:</p> <pre><code>pkg install ruby clang make pkg-config libxslt\ngem install nokogiri --platform=ruby -- --use-system-libraries\n</code></pre>","title":"TermUX"},{"location":"tutorials/installing_nokogiri.html#smartos-nonstandard","text":"<p>SmartOS installation requires building and using libxml2/libxslt/libiconv in a nonstandard location. Building on the previous section, here's how to do it:</p> <p>(Note: <code>pkgsrc</code> is included in JPC SmartOS instances)</p> <pre><code>pkgin install ruby gcc49 libxml2 libxslt zlib libiconv ruby22-rake gmake\nln -s /opt/local/gcc49/bin/gcc /opt/local/bin/gcc\n\ngem install nokogiri -- \\\n    --use-system-libraries \\\n    --with-xml2-lib=/opt/local/lib \\\n    --with-xml2-include=/opt/local/include/libxml2 \\\n    --with-xslt-lib=/opt/local/lib \\\n    --with-xslt-include=/opt/local/include/libxslt \\\n    --with-iconv-lib=/opt/local/lib \\\n    --with-iconv-include=/opt/local/include \\\n    --with-zlib-dir=/opt/local/lib\n</code></pre> <p>See the previous section for guidance on how to instruct Bundler to use these options.</p>","title":"SmartOS (Nonstandard)"},{"location":"tutorials/installing_nokogiri.html#troubleshooting","text":"","title":"Troubleshooting"},{"location":"tutorials/installing_nokogiri.html#using-vendorcache-to-deploy-to-another-architecture","text":"<p>A common workflow is for a team to develop on a Mac but deploy to production on Linux. This workflow depends on Bundler caching an appropriate gem file in <code>vendor/cache</code>. Unfortunately, in this situation Bundler's default behavior is to cache only gems for the development system and not the production system, leading to an error at deploy time.</p>","title":"Using <code>vendor/cache</code> to deploy to another architecture"},{"location":"tutorials/installing_nokogiri.html#symptoms","text":"<p>During deployment, the buildpack may fail to find a relevant gem in <code>vendor/cache</code> and emit an error like this (from Heroku):</p> <pre><code>-----&gt; Ruby app detected\n-----&gt; Installing bundler 2.1.4\n-----&gt; Removing BUNDLED WITH version in the Gemfile.lock\n-----&gt; Compiling Ruby/Rails\n-----&gt; Using Ruby version: ruby-2.7.2\n-----&gt; Installing dependencies using bundler 2.1.4\n       Running: BUNDLE_WITHOUT='development:test' BUNDLE_PATH=vendor/bundle BUNDLE_BIN=vendor/bundle/bin BUNDLE_DEPLOYMENT=1 bundle install -j4\n       Some gems seem to be missing from your vendor/cache directory.\n       Could not find nokogiri-1.11.0 in any of the sources\n       Bundler Output: Some gems seem to be missing from your vendor/cache directory.\n       Could not find nokogiri-1.11.0 in any of the sources\n !\n !     Failed to install gems via Bundler.\n !\n !     Push rejected, failed to compile Ruby app.\n !     Push failed\n</code></pre>","title":"Symptoms"},{"location":"tutorials/installing_nokogiri.html#solution","text":"<p>Bundler 2.2 and later has great multiplatform support and allows you to cache gems for multiple platforms. You can run commands like these to cause Bundler to fetch and cache gems for all the named platforms:</p> <pre><code>bundle lock --add-platform x86_64-darwin\nbundle lock --add-platform x86_64-linux\nbundle package --all-platforms\n</code></pre> <p>For more information, please read this wonderful blog post written by Kevin Murphy explaining this approach.</p>","title":"Solution"},{"location":"tutorials/installing_nokogiri.html#fallback-solution","text":"<p>If you can't upgrade to Bundler 2.2 (or later), you can force older versions to always use the <code>ruby</code> platform, which supports all platforms, but applies to all gems and comes with the installation challenges mentioned earlier in this guide.</p> <p>Here's how to do this with Bundler 2.1 or later:</p> <pre><code>rm -rf vendor/cache\nbundle config set force_ruby_platform true\nbundle install\n</code></pre> <p>Or if you're on version 2.0 or earlier:</p> <pre><code>rm -rf vendor/cache\nbundle config force_ruby_platform true\nbundle install\n</code></pre>","title":"Fallback Solution"},{"location":"tutorials/installing_nokogiri.html#cannot-install-racc","text":"<p>As of v1.11.0, Nokogiri is declaring an explicit dependency on <code>racc ~&gt; 1.4</code>, which itself is a C extension that users may have trouble installing.</p>","title":"Cannot install <code>racc</code>"},{"location":"tutorials/installing_nokogiri.html#symptoms_1","text":"<p>You may see an error message like this:</p> <pre><code>Fetching racc 1.5.2\nInstalling racc 1.5.2 with native extensions\nGem::Ext::BuildError: ERROR: Failed to build gem native extension.\n\ncurrent directory:\n/Users/myuser2/.gem/ruby/2.7.0/gems/racc-1.5.2/ext/racc/cparse\n/opt/local/bin/ruby2.7 -I /opt/local/lib/ruby2.7/2.7.0 -r\n./siteconf20210104-30183-axgzet.rb extconf.rb\nchecking for rb_ary_subseq()... *** extconf.rb failed ***\nCould not create Makefile due to some reason, probably lack of necessary\nlibraries and/or headers.  Check the mkmf.log file for more details.  You may\nneed configuration options.\n\nProvided configuration options:\n       --with-opt-dir\n       --with-opt-include\n       --without-opt-include=${opt-dir}/include\n       --with-opt-lib\n       --without-opt-lib=${opt-dir}/lib\n       --with-make-prog\n       --without-make-prog\n       --srcdir=.\n       --curdir\n       --ruby=/opt/local/bin/$(RUBY_BASE_NAME)2.7\n/opt/local/lib/ruby2.7/2.7.0/mkmf.rb:471:in `try_do': The compiler failed to generate an executable file. (RuntimeError)\nYou have to install development tools first.\n       from /opt/local/lib/ruby2.7/2.7.0/mkmf.rb:564:in `try_link0'\n       from /opt/local/lib/ruby2.7/2.7.0/mkmf.rb:582:in `try_link'\n       from /opt/local/lib/ruby2.7/2.7.0/mkmf.rb:794:in `try_func'\n       from /opt/local/lib/ruby2.7/2.7.0/mkmf.rb:1083:in `block in have_func'\n       from /opt/local/lib/ruby2.7/2.7.0/mkmf.rb:971:in `block in checking_for'\n       from /opt/local/lib/ruby2.7/2.7.0/mkmf.rb:361:in `block (2 levels) in postpone'\n       from /opt/local/lib/ruby2.7/2.7.0/mkmf.rb:331:in `open'\n       from /opt/local/lib/ruby2.7/2.7.0/mkmf.rb:361:in `block in postpone'\n       from /opt/local/lib/ruby2.7/2.7.0/mkmf.rb:331:in `open'\n       from /opt/local/lib/ruby2.7/2.7.0/mkmf.rb:357:in `postpone'\n       from /opt/local/lib/ruby2.7/2.7.0/mkmf.rb:970:in `checking_for'\n       from /opt/local/lib/ruby2.7/2.7.0/mkmf.rb:1082:in `have_func'\n       from extconf.rb:6:in `&lt;main&gt;'\n\nTo see why this extension failed to compile, please check the mkmf.log which can\nbe found here:\n\n/Users/myuser2/.gem/ruby/2.7.0/extensions/arm64-darwin-20/2.7.0/racc-1.5.2/mkmf.log\n\nextconf failed, exit code 1\n</code></pre>","title":"Symptoms"},{"location":"tutorials/installing_nokogiri.html#solution-1-compiler-toolchain","text":"<p>Racc needs the same compiler toolchain to be present as any Gem with a C extension. See Appendix A: The Compiler Toolchain.</p>","title":"Solution 1 - Compiler toolchain"},{"location":"tutorials/installing_nokogiri.html#solution-2-avoid-installing-racc","text":"<p>Ruby 3.0 comes with Racc 1.5.x as a \"builtin gem\", so you could update to Ruby 3!</p> <p>Ruby 2.7 comes with Racc 1.4.x as a \"builtin gem\", so you could use that version instead of trying to upgrade. Update to Ruby 2.7 and add a line like <code>gem \"racc\", \"~&gt; 1.4.0\"</code> to prevent bundler from trying to upgrade.</p>","title":"Solution 2 - Avoid installing Racc"},{"location":"tutorials/installing_nokogiri.html#linux-usrbinld-cannot-find-lgmp","text":"<p>If you're compiling the <code>ruby</code> platform gem, and if you've installed Ruby using RVM, you may require libgmp.</p>","title":"[Linux] <code>/usr/bin/ld: cannot find -lgmp</code>"},{"location":"tutorials/installing_nokogiri.html#symptoms_2","text":"<p>Gem installation fails with an error message like:</p> <pre><code>/home/user/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/mkmf.rb:456:in `try_do': The compiler failed to generate an executable file. (RuntimeError)\nYou have to install development tools first.\n</code></pre> <p>And examination of your <code>mkmf.log</code> file shows:</p> <pre><code>/usr/bin/ld: cannot find -lgmp\n</code></pre>","title":"Symptoms"},{"location":"tutorials/installing_nokogiri.html#solution_1","text":"<p>Run <code>sudo apt-get install libgmp-dev</code>.</p>","title":"Solution"},{"location":"tutorials/installing_nokogiri.html#macos-xcode-select-errors-with-a-network-problem","text":"<p>If you're compiling the <code>ruby</code> platform gem ...</p>","title":"[MacOS] <code>xcode-select</code> errors with a 'network problem'"},{"location":"tutorials/installing_nokogiri.html#symptoms_3","text":"<p>You see this dialog when you run the commands to update xcode commandline tools:</p> <p></p>","title":"Symptoms"},{"location":"tutorials/installing_nokogiri.html#solution_2","text":"<p>Run this command to turn off forced-authentication with Apple Software Update:</p> <pre><code>sudo defaults delete /Library/Preferences/com.apple.SoftwareUpdate CatalogURL\n</code></pre>","title":"Solution"},{"location":"tutorials/installing_nokogiri.html#macos-error-use-of-undeclared-identifier-lzma_ok","text":"<p>If you're compiling the <code>ruby</code> platform gem ...</p>","title":"[MacOS] <code>error: use of undeclared identifier 'LZMA_OK'</code>"},{"location":"tutorials/installing_nokogiri.html#symptoms_4","text":"<p>An error during Nokogiri installation mentions an undeclared identifier <code>LZMA_OK</code>:</p> <pre><code>xmlIO.c:1450:52: error: use of undeclared identifier 'LZMA_OK'\n    ret =  (__libxml2_xzclose((xzFile) context) == LZMA_OK ) ? 0 : -1;\n                                                   ^\n1 error generated.\n</code></pre>","title":"Symptoms"},{"location":"tutorials/installing_nokogiri.html#diagnosis","text":"<p>When using Homebrew, there are several libraries that use a formula called <code>xz</code> (including <code>the_silver_searcher</code> and <code>imagemagick</code>), which by default install a version of <code>liblzma</code> that is incompatible with most Ruby builds.  (Homebrew installs only the 64-bit version of the library, but most Ruby builds are universal.) This can be fixed in a couple of ways:</p>","title":"Diagnosis"},{"location":"tutorials/installing_nokogiri.html#solution-1","text":"<p>The most reliable solution appears to be temporarily unlinking <code>xz</code> and relinking it during an install of <code>nokogiri</code>:</p> <pre><code>brew unlink xz\ngem install nokogiri # or bundle install\nbrew link xz\n</code></pre>","title":"Solution 1"},{"location":"tutorials/installing_nokogiri.html#solution-2","text":"<p>The other solution is to use a Homebrew-installed <code>libxml2</code>, as suggested in Installing Using Standard System Libraries.</p> <pre><code>brew install libxml2\ngem install nokogiri -- --use-system-libraries \\\n    --with-xml2-include=$(brew --prefix libxml2)/include/libxml2\n</code></pre> <p>or if you're using bundler:</p> <pre><code>bundle config build.nokogiri --use-system-libraries \\\n    --with-xml2-include=$(brew --prefix libxml2)/include/libxml2\nbundle install\n</code></pre> <p>When working with this, be certain to use <code>$(brew --prefix libxml2)</code> because it will use the correct location for your Homebrew install.</p>","title":"Solution 2"},{"location":"tutorials/installing_nokogiri.html#macos-libiconv-is-missing","text":"<p>Xcode 10 on macOS Mojave moves the system headers out of <code>/usr/include</code> and so Nokogiri will fail to build when you're compiling the <code>ruby</code> platform gem.</p>","title":"[MacOS] <code>libiconv is missing</code>"},{"location":"tutorials/installing_nokogiri.html#symptoms_5","text":"<p>You'll see an error similar to this:</p> <pre><code>Building nokogiri using packaged libraries.\n\nlibiconv is missing.  please visit http://nokogiri.org/tutorials/installing_nokogiri.html for help with installing dependencies.\n\n*** extconf.rb failed ***\nCould not create Makefile due to some reason, probably lack of necessary libraries and/or headers.\n</code></pre>","title":"Symptoms"},{"location":"tutorials/installing_nokogiri.html#solution_3","text":"<p>A temporary workaround to allow previous releases of Nokogiri to build is to install the extra headers package mentioned in the Xcode 10 release notes:</p> <pre><code>open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg\n</code></pre> <p>You can also install the headers package from the command line (e.g. for a build script or a CI server):</p> <pre><code>sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg -target /\n</code></pre>","title":"Solution"},{"location":"tutorials/installing_nokogiri.html#macos-general-macos-tips","text":"<p>If you're seeing other problems:</p> <ul> <li>Make sure ruby is compiled with the latest clang compiler.</li> <li>Binary gems and ruby should be compiled with the same compiler/environment.</li> <li>If you have multiple versions of Xcode installed, make sure you use the right <code>xcode-select</code>.</li> <li>Try Installing Using Standard System Libraries.</li> </ul>","title":"[MacOS] General MacOS Tips"},{"location":"tutorials/installing_nokogiri.html#appendix-a-the-compiler-toolchain","text":"<p>A good way to tell if you've got your basic Ruby C extension compiler toolchain installed correctly is to try installing the <code>bcrypt</code> gem which has a smaller, self-contained C extension. If you can <code>gem install bcrypt</code>, you're all set!</p> <p>Reminder: if you're installing a native gem, you don't need to do this.</p>","title":"Appendix A: The Compiler Toolchain"},{"location":"tutorials/installing_nokogiri.html#ubuntu-or-debian-based-distros_1","text":"<pre><code>sudo apt-get install build-essential ruby-dev\n</code></pre>","title":"Ubuntu or Debian-based Distros"},{"location":"tutorials/installing_nokogiri.html#fedora-red-hat-and-centos_2","text":"<pre><code>dnf install -y make gcc rpm-build ruby-devel\n</code></pre>","title":"Fedora, Red Hat, and CentOS"},{"location":"tutorials/installing_nokogiri.html#alpine","text":"<pre><code>apk add build-base\n</code></pre>","title":"Alpine"},{"location":"tutorials/installing_nokogiri.html#windows_1","text":"<p>Please visit RubyInstaller and make sure you install a version \"With Devkit\".</p>","title":"Windows"},{"location":"tutorials/installing_nokogiri.html#macos_1","text":"<p>First, make sure you have the latest version of RubyGems and xcode commandline tools:</p> <pre><code>gem update --system\nxcode-select --install # Then agree to the terms, even if you have done this before!\n</code></pre> <p>Agree to the Xcode license:</p> <pre><code>sudo xcodebuild -license\n</code></pre>","title":"MacOS"},{"location":"tutorials/modifying_an_html_xml_document.html","text":"","title":"Modifying an HTML / XML Document"},{"location":"tutorials/modifying_an_html_xml_document.html#changing-text-contents","text":"<p>Assuming we have the following HTML document:</p> <pre><code>@doc = Nokogiri::HTML::DocumentFragment.parse &lt;&lt;-EOHTML\n&lt;body&gt;\n  &lt;h1&gt;Three's Company&lt;/h1&gt;\n  &lt;div&gt;A love triangle.&lt;/div&gt;\n&lt;/body&gt;\nEOHTML\n</code></pre> <p>Let's change the header's text contents:</p> <pre><code>h1 = @doc.at_css \"h1\"\nh1.content = \"Snap, Crackle &amp; Pop\"\n\n@doc.to_html\n# =&gt; \"&lt;body&gt;\n# \" +\n#    \"  &lt;h1&gt;Snap, Crackle &amp;amp; Pop&lt;/h1&gt;\n# \" +\n#    \"  &lt;div&gt;A love triangle.&lt;/div&gt;\n# \" +\n#    \"\n# \" +\n#    \"&lt;/body&gt;\"\n</code></pre> <p>You'll notice that, when you use <code>#content=</code>, entities are properly escaped. Pow!</p>","title":"Changing text contents"},{"location":"tutorials/modifying_an_html_xml_document.html#moving-nodes","text":"<p>The simplest method of moving a node is assign its parent:</p> <pre><code>h1  = @doc.at_css \"h1\"\ndiv = @doc.at_css \"div\"\nh1.parent = div\n\n@doc.to_html\n# =&gt; \"&lt;body&gt;\n# \" +\n#    \"  \n# \" +\n#    \"  &lt;div&gt;A love triangle.&lt;h1&gt;Three's Company&lt;/h1&gt;\n# \" +\n#    \"&lt;/div&gt;\n# \" +\n#    \"\n# \" +\n#    \"&lt;/body&gt;\"\n</code></pre> <p>But you could also arrange it next to other nodes:</p> <pre><code>div.add_next_sibling(h1)\n\n@doc.to_html\n# =&gt; \"&lt;body&gt;\n# \" +\n#    \"  \n# \" +\n#    \"  &lt;div&gt;A love triangle.&lt;/div&gt;\n# \" +\n#    \"&lt;h1&gt;Three's Company&lt;/h1&gt;\n# \" +\n#    \"\n# \" +\n#    \"&lt;/body&gt;\"\n</code></pre>","title":"Moving nodes"},{"location":"tutorials/modifying_an_html_xml_document.html#modifying-nodes-and-attributes","text":"<pre><code>h1.name = 'h2'\nh1['class'] = 'show-title'\n\n@doc.to_html\n# =&gt; \"&lt;body&gt;\n# \" +\n#    \"  &lt;h2 class=\\\"show-title\\\"&gt;Three's Company&lt;/h2&gt;\n# \" +\n#    \"  &lt;div&gt;A love triangle.&lt;/div&gt;\n# \" +\n#    \"\n# \" +\n#    \"&lt;/body&gt;\"\n</code></pre>","title":"Modifying Nodes and Attributes"},{"location":"tutorials/modifying_an_html_xml_document.html#creating-new-nodes","text":"<p>Often the easiest thing to do is pass markup to one of the <code>Node</code> methods to create siblings:</p> <pre><code>h1.add_next_sibling \"&lt;h3&gt;1977 - 1984&lt;/h3&gt;\"\n\n@doc.to_html\n# =&gt; \"&lt;body&gt;\n# \" +\n#    \"  &lt;h1&gt;Three's Company&lt;/h1&gt;\n# \" +\n#    \"&lt;h3&gt;1977 - 1984&lt;/h3&gt;\n# \" +\n#    \"  &lt;div&gt;A love triangle.&lt;/div&gt;\n# \" +\n#    \"\n# \" +\n#    \"&lt;/body&gt;\"\n</code></pre> <p>or you can manually create a node object, if you're a detail-oriented person:</p> <pre><code>h3 = Nokogiri::XML::Node.new \"h3\", @doc\nh3.content = \"1977 - 1984\"\nh1.add_next_sibling(h3)\n\n@doc.to_html\n# =&gt; \"&lt;body&gt;\n# \" +\n#    \"  &lt;h1&gt;Three's Company&lt;/h1&gt;\n# \" +\n#    \"&lt;h3&gt;1977 - 1984&lt;/h3&gt;\n# \" +\n#    \"  &lt;div&gt;A love triangle.&lt;/div&gt;\n# \" +\n#    \"\n# \" +\n#    \"&lt;/body&gt;\"\n</code></pre>","title":"Creating new nodes"},{"location":"tutorials/modifying_an_html_xml_document.html#wrapping-a-nodeset","text":"<p>If you wanted to wrap new HTML around each node in a Nodeset, here's an example of how to do it:</p> <pre><code>nodes = @doc.css \"h1,div\"\nnodes.wrap(\"&lt;div class='container'&gt;&lt;/div&gt;\")\n\n@doc.to_html\n# =&gt; \"&lt;body&gt;\n# \" +\n#    \"  &lt;div class=\\\"container\\\"&gt;&lt;h1&gt;Three's Company&lt;/h1&gt;&lt;/div&gt;\n# \" +\n#    \"  &lt;div class=\\\"container\\\"&gt;&lt;div&gt;A love triangle.&lt;/div&gt;&lt;/div&gt;\n# \" +\n#    \"\n# \" +\n#    \"&lt;/body&gt;\"\n</code></pre>","title":"Wrapping a NodeSet"},{"location":"tutorials/modifying_an_html_xml_document.html#adding-a-processing-instruction","text":"","title":"Adding a Processing Instruction"},{"location":"tutorials/modifying_an_html_xml_document.html#like-xml-stylesheet","text":"<p>If you want to add a processing instruction (a.k.a. \"PI node\"), like an xml-stylesheet declaration, you should first create the node using <code>Nokogiri::XML::ProcessingInstruction.new</code> and then add it to the document as a previous-sibling of the root node:</p> <pre><code>doc = Nokogiri::XML \"&lt;root&gt;foo&lt;/root&gt;\"\ndoc.to_xml\n# =&gt; \"&lt;?xml version=\\\"1.0\\\"?&gt;\n# \" + \"&lt;root&gt;foo&lt;/root&gt;\n# \"\n\npi = Nokogiri::XML::ProcessingInstruction.new(doc, \"xml-stylesheet\",\n                                              'type=\"text/xsl\" href=\"foo.xsl\"')\ndoc.root.add_previous_sibling pi\ndoc.to_xml\n# =&gt; \"&lt;?xml version=\\\"1.0\\\"?&gt;\n# \" +\n#    \"&lt;?xml-stylesheet type=\\\"text/xsl\\\" href=\\\"foo.xsl\\\"?&gt;\n# \" +\n#    \"&lt;root&gt;foo&lt;/root&gt;\n# \"\n</code></pre>","title":"(like &lt;?xml-stylesheet?&gt;)"},{"location":"tutorials/more_resources.html","text":"<ul> <li>sax-machine</li> <li>feedzirra</li> <li>elementor</li> <li>mechanize</li> <li>markup_validity</li> </ul>","title":"More Resources"},{"location":"tutorials/parsing_an_html5_document.html","text":"<p>Nokogiri provides the ability for a Ruby program to invoke our version of the Gumbo HTML5 parser and to access the result as a Nokogiri::HTML::Document.</p>  <p>Why is HTML5 parsing covered as a separate tutorial from HTML parsing?</p> <p>Eventually, we'll integrate HTML5 docs into the other of tutorials, and this page will go away. We shipped HTML5 support as quickly as possible by copying (and only lightly editing) the Nokogumbo documentation to this page.</p>   <p>HTML5 support is only in v1.12.0 and later.</p> <p>This tutorial describes functionality that is only available in Nokogiri v1.12.0 and later. Please visit the HTML5 API documentation for more information.</p>   <p>HTML5 functionality is not available when running JRuby.</p> <p>The JRuby implementation of Nokogiri does not support HTML5 as of v1.12.0. If you'd like to help implement this support, or would like to know more, please see #2227.</p>","title":"Parsing an HTML5 Document"},{"location":"tutorials/parsing_an_html5_document.html#usage","text":"<p>Parse an HTML5 document:</p> <pre><code>doc = Nokogiri.HTML5(string)\n</code></pre> <p>Parse an HTML5 fragment:</p> <pre><code>fragment = Nokogiri::HTML5.fragment(string)\n</code></pre>","title":"Usage"},{"location":"tutorials/parsing_an_html5_document.html#parsing-options","text":"<p>The document and fragment parsing methods support options that are different from Nokogiri's.</p> <ul> <li><code>Nokogiri.HTML5(html, url = nil, encoding = nil, options = {})</code></li> <li><code>Nokogiri::HTML5.parse(html, url = nil, encoding = nil, options = {})</code></li> <li><code>Nokogiri::HTML5::Document.parse(html, url = nil, encoding = nil, options = {})</code></li> <li><code>Nokogiri::HTML5.fragment(html, encoding = nil, options = {})</code></li> <li><code>Nokogiri::HTML5::DocumentFragment.parse(html, encoding = nil, options = {})</code></li> </ul> <p>The three currently supported options are <code>:max_errors</code>, <code>:max_tree_depth</code> and <code>:max_attributes</code>, described below.</p>","title":"Parsing options"},{"location":"tutorials/parsing_an_html5_document.html#error-reporting","text":"<p>Nokogiri contains an experimental HTML5 parse error reporting facility. By default, no parse errors are reported but this can be configured by passing the <code>:max_errors</code> option to HTML5.parse or HTML5.fragment.</p> <p>For example, this script:</p> <pre><code>doc = Nokogiri::HTML5.parse('&lt;span/&gt;Hi there!&lt;/span foo=bar /&gt;', max_errors: 10)\ndoc.errors.each do |err|\n  puts(err)\nend\n</code></pre> <p>Emits:</p> <pre><code>1:1: ERROR: Expected a doctype token\n&lt;span/&gt;Hi there!&lt;/span foo=bar /&gt;\n^\n1:1: ERROR: Start tag of nonvoid HTML element ends with '/&gt;', use '&gt;'.\n&lt;span/&gt;Hi there!&lt;/span foo=bar /&gt;\n^\n1:17: ERROR: End tag ends with '/&gt;', use '&gt;'.\n&lt;span/&gt;Hi there!&lt;/span foo=bar /&gt;\n                ^\n1:17: ERROR: End tag contains attributes.\n&lt;span/&gt;Hi there!&lt;/span foo=bar /&gt;\n                ^\n</code></pre> <p>Using <code>max_errors: -1</code> results in an unlimited number of errors being returned.</p> <p>The HTML standard defines a number of standard parse error codes. These error codes only cover the \"tokenization\" stage of parsing HTML. The parse errors in the \"tree construction\" stage do not have standardized error codes (yet).</p> <p>As a convenience to Nokogiri users, the defined error codes are available via <code>Nokogiri::XML::SyntaxError#str1</code> method:</p> <pre><code>doc = Nokogiri::HTML5.parse('&lt;span/&gt;Hi there!&lt;/span foo=bar /&gt;', max_errors: 10)\ndoc.errors.each do |err|\n  puts(\"#{err.line}:#{err.column}: #{err.str1}\")\nend\n# =&gt; 1:1: generic-parser\n#    1:1: non-void-html-element-start-tag-with-trailing-solidus\n#    1:17: end-tag-with-trailing-solidus\n#    1:17: end-tag-with-attributes\n</code></pre> <p>Note that the first error is <code>generic-parser</code> because it's an error from the tree construction stage and doesn't have a standardized error code.</p> <p>For the purposes of semantic versioning, the error messages, error locations, and error codes are not part of Nokogiri's public API. That is, these are subject to change without Nokogiri's major version number changing. These may be stabilized in the future.</p>","title":"Error reporting"},{"location":"tutorials/parsing_an_html5_document.html#maximum-tree-depth","text":"<p>The maximum depth of the DOM tree parsed by the various parsing methods is configurable by the <code>:max_tree_depth</code> option. If the depth of the tree would exceed this limit, then an <code>::ArgumentError</code> is thrown.</p> <p>This limit (which defaults to <code>Nokogiri::Gumbo::DEFAULT_MAX_TREE_DEPTH = 400</code>) can be removed by giving the option <code>max_tree_depth: -1</code>.</p> <pre><code>html = '&lt;!DOCTYPE html&gt;' + '&lt;div&gt;' * 1000\ndoc = Nokogiri.HTML5(html)\n# raises ArgumentError: Document tree depth limit exceeded\ndoc = Nokogiri.HTML5(html, max_tree_depth: -1)\n</code></pre>","title":"Maximum tree depth"},{"location":"tutorials/parsing_an_html5_document.html#attribute-limit-per-element","text":"<p>The maximum number of attributes per DOM element is configurable by the <code>:max_attributes</code> option. If a given element would exceed this limit, then an <code>::ArgumentError</code> is thrown.</p> <p>This limit (which defaults to <code>Nokogiri::Gumbo::DEFAULT_MAX_ATTRIBUTES = 400</code>) can be removed by giving the option <code>max_attributes: -1</code>.</p> <pre><code>html = '&lt;!DOCTYPE html&gt;&lt;div ' + (1..1000).map { |x| \"attr-#{x}\" }.join(' ') + '&gt;'\n# \"&lt;!DOCTYPE html&gt;&lt;div attr-1 attr-2 attr-3 ... attr-1000&gt;\"\ndoc = Nokogiri.HTML5(html)\n# raises ArgumentError: Attributes per element limit exceeded\ndoc = Nokogiri.HTML5(html, max_attributes: -1)\n</code></pre>","title":"Attribute limit per element"},{"location":"tutorials/parsing_an_html5_document.html#html-serialization","text":"<p>After parsing HTML, it may be serialized using any of the <code>Nokogiri::XML::Node</code> serialization methods. In particular, <code>XML::Node#serialize</code>, <code>#to_html</code>, and <code>#to_s</code> will serialize a given node and its children. (This is the equivalent of JavaScript's <code>Element.outerHTML</code>.) Similarly, <code>XML::Node#inner_html</code> will serialize the children of a given node. (This is the equivalent of JavaScript's <code>Element.innerHTML</code>.)</p> <pre><code>doc = Nokogiri::HTML5(\"&lt;!DOCTYPE html&gt;&lt;span&gt;Hello world!&lt;/span&gt;\")\nputs doc.serialize\n# =&gt; &lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;/head&gt;&lt;body&gt;&lt;span&gt;Hello world!&lt;/span&gt;&lt;/body&gt;&lt;/html&gt;\n</code></pre>","title":"HTML Serialization"},{"location":"tutorials/parsing_an_html5_document.html#notes","text":"<ul> <li> <p>The <code>Nokogiri::HTML5.fragment</code> function takes a string and parses it   as a HTML5 document.  The <code>&lt;html&gt;</code>, <code>&lt;head&gt;</code>, and <code>&lt;body&gt;</code> elements are   removed from this document, and any children of these elements that remain   are returned as a <code>Nokogiri::HTML5::DocumentFragment</code>.</p> </li> <li> <p>The <code>Nokogiri::HTML5.parse</code> function takes a string and passes it to the   <code>gumbo_parse_with_options</code> method, using the default options.   The resulting Gumbo parse tree is then walked.</p> </li> <li> <p>Instead of uppercase element names, lowercase element names are produced.</p> </li> <li> <p>Instead of returning <code>unknown</code> as the element name for unknown tags, the   original tag name is returned verbatim.</p> </li> </ul>","title":"Notes"},{"location":"tutorials/parsing_an_html_xml_document.html","text":"","title":"Parsing an HTML / XML Document"},{"location":"tutorials/parsing_an_html_xml_document.html#from-a-string","text":"<p>We've tried to make this easy on you. Really! We're here to make your life easier.</p> <pre><code>html_doc = Nokogiri::HTML(\"&lt;html&gt;&lt;body&gt;&lt;h1&gt;Mr. Belvedere Fan Club&lt;/h1&gt;&lt;/body&gt;&lt;/html&gt;\")\nxml_doc  = Nokogiri::XML(\"&lt;root&gt;&lt;aliens&gt;&lt;alien&gt;&lt;name&gt;Alf&lt;/name&gt;&lt;/alien&gt;&lt;/aliens&gt;&lt;/root&gt;\")\n</code></pre> <p>The variables <code>html_doc</code> and <code>xml_doc</code> are Nokogiri documents, which have all kinds of interesting properties and methods that you can read about here. We'll cover the interesting bits in other chapters.</p>","title":"From a String"},{"location":"tutorials/parsing_an_html_xml_document.html#from-a-file","text":"<p>Note that you don't need to read the file into a string variable. Nokogiri will do this for you.</p> <pre><code>doc = File.open(\"blossom.xml\") { |f| Nokogiri::XML(f) }\n</code></pre> <p>Clever Nokogiri! With the time you just saved, approach enlightenment by meditating on this koan.</p>","title":"From a File"},{"location":"tutorials/parsing_an_html_xml_document.html#from-the-internets","text":"<p>I understand that there may be some HTML documents available on the World Wide Web.</p> <pre><code>require 'open-uri'\ndoc = Nokogiri::HTML(URI.open(\"http://www.threescompany.com/\"))\n</code></pre>","title":"From the Internets"},{"location":"tutorials/parsing_an_html_xml_document.html#parse-options","text":"<p>Nokogiri offers quite a few options that affect how a document is parsed; you can read about them in the XML::ParseOptions docs.</p> <p>Notably, Nokogiri will treat input as untrusted documents by default, thereby avoiding a class of vulnerabilities known as XXE or \"XML eXternal Entity\" processing. What this means is that Nokogiri won't attempt to load external DTDs or access the network for any external resources.</p> <p>Some commonly-used parse options are:</p> <ul> <li><code>NONET</code> - Prevent any network connections during parsing. Recommended for parsing untrusted documents. This is set by default!</li> <li><code>RECOVER</code> - Attempt to recover from errors. Recommended for parsing malformed or invalid documents. This is set by default!</li> <li><code>NOBLANKS</code> - Remove blank nodes</li> <li><code>NOENT</code> - Substitute entities</li> <li><code>NOERROR</code> - Suppress error reports</li> <li><code>STRICT</code> - Strict parsing; raise an error when parsing malformed documents</li> <li><code>DTDLOAD</code> and <code>DTDVALID</code> - If you want DTD validation</li> <li><code>HUGE</code> - use to skip hardcoded limits around document size or DOM depth; comes with a performance penalty</li> </ul> <p>You could use them by handcrafting an artisanal bitmap (not recommended):</p> <pre><code>doc = Nokogiri::XML(File.open(\"blossom.xml\")) do |config|\n  config.options = Nokogiri::XML::ParseOptions::STRICT | Nokogiri::XML::ParseOptions::NOBLANKS\nend\n</code></pre> <p>But it's more idiomatic to use the chainable shortcuts on the config object instead:</p> <pre><code>doc = Nokogiri::XML(File.open(\"blossom.xml\")) do |config|\n  config.strict.noblanks\nend\n</code></pre> <p>Notably, if you want to turn off an option that's set by default, you can prefix a \"no\" to the config shortcut:</p> <pre><code>doc = Nokogiri::XML(File.open(\"blossom.xml\")) do |config|\n  config.norecover\nend\n</code></pre> <p>Leading to the perhaps-surprising (but logical!) <code>nononet</code> to turn networking back on:</p> <pre><code>doc = Nokogiri::XML(File.open(\"blossom.xml\")) do |config|\n  config.nononet\nend\n</code></pre>","title":"Parse Options"},{"location":"tutorials/parsing_an_html_xml_document.html#encoding","text":"<p>Strings are always stored as UTF-8 internally.  Methods that return text values will always return UTF-8 encoded strings.  Methods that return XML (like to_xml, to_html and inner_html) will return a string encoded like the source document.</p> <p>WARNING</p> <p>Some documents declare one particular encoding, but use a different one. So, which encoding should the parser choose?</p> <p>Remember that data is just a stream of bytes. Only us humans add meaning to that stream. Any particular set of bytes could be valid characters in multiple encodings, so detecting encoding with 100% accuracy is not possible. libxml2 does its best, but it can't be right 100% of the time.</p> <p>If you want Nokogiri to handle the document encoding properly, your best bet is to explicitly set the encoding.  Here is an example of explicitly setting the encoding to EUC-JP on the parser:</p> <pre><code>doc = Nokogiri.XML('&lt;foo&gt;&lt;bar /&gt;&lt;foo&gt;', nil, 'EUC-JP')\n</code></pre>","title":"Encoding"},{"location":"tutorials/searching_a_xml_html_document.html","text":"","title":"Searching an HTML / XML Document"},{"location":"tutorials/searching_a_xml_html_document.html#basic-searching","text":"<p>Let's suppose you have the following document:</p> <pre><code>[shows.xml]\n&lt;root&gt;\n  &lt;sitcoms&gt;\n    &lt;sitcom&gt;\n      &lt;name&gt;Married with Children&lt;/name&gt;\n      &lt;characters&gt;\n        &lt;character&gt;Al Bundy&lt;/character&gt;\n        &lt;character&gt;Bud Bundy&lt;/character&gt;\n        &lt;character&gt;Marcy Darcy&lt;/character&gt;\n      &lt;/characters&gt;\n    &lt;/sitcom&gt;\n    &lt;sitcom&gt;\n      &lt;name&gt;Perfect Strangers&lt;/name&gt;\n      &lt;characters&gt;\n        &lt;character&gt;Larry Appleton&lt;/character&gt;\n        &lt;character&gt;Balki Bartokomous&lt;/character&gt;\n      &lt;/characters&gt;\n    &lt;/sitcom&gt;\n  &lt;/sitcoms&gt;\n  &lt;dramas&gt;\n    &lt;drama&gt;\n      &lt;name&gt;The A-Team&lt;/name&gt;\n      &lt;characters&gt;\n        &lt;character&gt;John \"Hannibal\" Smith&lt;/character&gt;\n        &lt;character&gt;Templeton \"Face\" Peck&lt;/character&gt;\n        &lt;character&gt;\"B.A.\" Baracus&lt;/character&gt;\n        &lt;character&gt;\"Howling Mad\" Murdock&lt;/character&gt;\n      &lt;/characters&gt;\n    &lt;/drama&gt;\n  &lt;/dramas&gt;\n&lt;/root&gt;\n</code></pre> <p>Let's further suppose that you want a list of all the characters in all the shows in this document.</p> <pre><code>@doc = Nokogiri::XML(File.open(\"shows.xml\"))\n@doc.xpath(\"//character\")\n# =&gt; [\"&lt;character&gt;Al Bundy&lt;/character&gt;\",\n#    \"&lt;character&gt;Bud Bundy&lt;/character&gt;\",\n#    \"&lt;character&gt;Marcy Darcy&lt;/character&gt;\",\n#    \"&lt;character&gt;Larry Appleton&lt;/character&gt;\",\n#    \"&lt;character&gt;Balki Bartokomous&lt;/character&gt;\",\n#    \"&lt;character&gt;John \\\"Hannibal\\\" Smith&lt;/character&gt;\",\n#    \"&lt;character&gt;Templeton \\\"Face\\\" Peck&lt;/character&gt;\",\n#    \"&lt;character&gt;\\\"B.A.\\\" Baracus&lt;/character&gt;\",\n#    \"&lt;character&gt;\\\"Howling Mad\\\" Murdock&lt;/character&gt;\"]\n</code></pre> <p>The <code>Node</code> methods <code>xpath</code> and <code>css</code> actually return a NodeSet, which acts very much like an array, and contains matching nodes from the document.</p> <pre><code>characters = @doc.xpath(\"//character\")\ncharacters[0].to_s # =&gt; \"&lt;character&gt;Al Bundy&lt;/character&gt;\"\n</code></pre> <p>You can use any XPath or CSS query you like (see the chapter on XPath and CSS syntax for more information).</p> <pre><code>@doc.xpath(\"//dramas//character\")\n# =&gt; [\"&lt;character&gt;John \\\"Hannibal\\\" Smith&lt;/character&gt;\",\n#    \"&lt;character&gt;Templeton \\\"Face\\\" Peck&lt;/character&gt;\",\n#    \"&lt;character&gt;\\\"B.A.\\\" Baracus&lt;/character&gt;\",\n#    \"&lt;character&gt;\\\"Howling Mad\\\" Murdock&lt;/character&gt;\"]\n</code></pre> <p>Notably, you can even use CSS queries in an XML document!</p> <pre><code>characters = @doc.css(\"sitcoms name\") # =&gt; [\"&lt;name&gt;Married with Children&lt;/name&gt;\", \"&lt;name&gt;Perfect Strangers&lt;/name&gt;\"]\n</code></pre> <p>CSS queries are often the easiest and most succinct way to express what you're looking for, so don't be afraid to use them!</p>","title":"Basic Searching"},{"location":"tutorials/searching_a_xml_html_document.html#single-results","text":"<p>If you know you're going to get only a single result back, you can use the shortcuts <code>at_css</code> and <code>at_xpath</code> instead of having to access the first element of a NodeSet.</p> <pre><code>@doc.css(\"dramas name\").first # =&gt; \"&lt;name&gt;The A-Team&lt;/name&gt;\"\n@doc.at_css(\"dramas name\")    # =&gt; \"&lt;name&gt;The A-Team&lt;/name&gt;\"\n</code></pre>","title":"Single Results"},{"location":"tutorials/searching_a_xml_html_document.html#namespaces","text":"<p>Just like our Ruby code, XML can suffer from name collisions.  For example, an autoparts dealer can sell tires and so can a bike dealer.  Both of them may use a \"tire\" tag to describe the tires they sell.  However, we need to be able to tell the difference between a car tire and a bike tire.  This is where namespaces come to the rescue.</p> <p>Namespaces associate tags with a unique URL.  Let's take a look at the autoparts store's XML versus the bike stores:</p> <pre><code>[parts.xml]\n&lt;parts&gt;\n  &lt;!-- Alice's Auto Parts Store --&gt;\n  &lt;inventory xmlns=\"http://alicesautoparts.com/\"&gt;\n    &lt;tire&gt;all weather&lt;/tire&gt;\n    &lt;tire&gt;studded&lt;/tire&gt;\n    &lt;tire&gt;extra wide&lt;/tire&gt;\n  &lt;/inventory&gt;\n\n  &lt;!-- Bob's Bike Shop --&gt;\n  &lt;inventory xmlns=\"http://bobsbikes.com/\"&gt;\n    &lt;tire&gt;street&lt;/tire&gt;\n    &lt;tire&gt;mountain&lt;/tire&gt;\n  &lt;/inventory&gt;\n&lt;/parts&gt;\n</code></pre> <p>Since the URLs are unique, we can associate our query with a URL and get only the tires belonging to that url:</p> <pre><code>@doc = Nokogiri::XML(File.read(\"parts.xml\"))\n\ncar_tires = @doc.xpath('//car:tire', 'car' =&gt; 'http://alicesautoparts.com/')\n# =&gt; [\"&lt;tire&gt;all weather&lt;/tire&gt;\",\n#    \"&lt;tire&gt;studded&lt;/tire&gt;\",\n#    \"&lt;tire&gt;extra wide&lt;/tire&gt;\"]\n\nbike_tires = @doc.xpath('//bike:tire', 'bike' =&gt; 'http://bobsbikes.com/')\n# =&gt; [\"&lt;tire&gt;street&lt;/tire&gt;\", \"&lt;tire&gt;mountain&lt;/tire&gt;\"]\n</code></pre> <p>To make this namespace registration a bit easier, nokogiri will automatically register any namespaces it finds on the root node for you.  Nokogiri will associate the name in the declaration with the supplied URL.  If we stick to this naming convention, we can shorten up our code.</p> <p>Let's take this atom feed for example:</p> <pre><code>[atom.xml]\n&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;\n&lt;feed xmlns=\"http://www.w3.org/2005/Atom\"&gt;\n\n  &lt;title&gt;Example Feed&lt;/title&gt;\n  &lt;link href=\"http://example.org/\"/&gt;\n  &lt;updated&gt;2003-12-13T18:30:02Z&lt;/updated&gt;\n  &lt;author&gt;\n    &lt;name&gt;John Doe&lt;/name&gt;\n  &lt;/author&gt;\n  &lt;id&gt;urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6&lt;/id&gt;\n\n  &lt;entry&gt;\n    &lt;title&gt;Atom-Powered Robots Run Amok&lt;/title&gt;\n    &lt;link href=\"http://example.org/2003/12/13/atom03\"/&gt;\n    &lt;id&gt;urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a&lt;/id&gt;\n    &lt;updated&gt;2003-12-13T18:30:02Z&lt;/updated&gt;\n    &lt;summary&gt;Some text.&lt;/summary&gt;\n  &lt;/entry&gt;\n\n&lt;/feed&gt;\n</code></pre> <p>If we stick to the convention, we can grab all title tags like this</p> <pre><code>@doc.xpath('//xmlns:title') # =&gt; [\"&lt;title&gt;Example Feed&lt;/title&gt;\", \"&lt;title&gt;Atom-Powered Robots Run Amok&lt;/title&gt;\"]\n</code></pre> <p>Don't be fooled though.  You do not have to use XPath to get the benefits of namespaces.  CSS selectors can be used as well.  CSS just uses the pipe symbol to indicate a namespace search.</p> <p>Let's see the previous search rewritten to use CSS:</p> <pre><code>@doc.css('xmlns|title') # =&gt; [\"&lt;title&gt;Example Feed&lt;/title&gt;\", \"&lt;title&gt;Atom-Powered Robots Run Amok&lt;/title&gt;\"]\n</code></pre> <p>When using CSS, if the namespace is called \"xmlns\", you can even omit the namespace name.  That means your CSS will reduce to:</p> <pre><code>@doc.css('title') # =&gt; [\"&lt;title&gt;Example Feed&lt;/title&gt;\", \"&lt;title&gt;Atom-Powered Robots Run Amok&lt;/title&gt;\"]\n</code></pre> <p>Dealing with namespaces is a broad topic.  If you need more examples, be sure to check out this blog post or send an email to the mailing list, and we can help out.</p>","title":"Namespaces"},{"location":"tutorials/searching_a_xml_html_document.html#but-im-lazy-and-dont-want-to-deal-with-namespaces","text":"<p>Lazy == Efficient, so no judgements. :)</p> <p>If you have an XML document with namespaces, but would prefer to ignore them entirely (and query as if Tim Bray had never invented them), then you can call remove_namespaces! on an XML::Document to remove all namespaces. Of course, if the document had nodes with the same names but different namespaces, they will now be ambiguous. But you're lazy! You don't care!</p>","title":"But I'm Lazy and Don't Want to Deal With Namespaces!"},{"location":"tutorials/searching_a_xml_html_document.html#slop-1","text":"<p>Maybe you want a more interactive (read: sloppy) way to access nodes and attributes. If you like what XmlSimple does, then you'll probably like Nokogiri's Slop mode.2</p> <p>Slop mode allows you to violate the Law of Demeter with extreme prejudice, by using <code>#method_missing</code> to introspect on a node's child tags.3</p> <pre><code>doc = Nokogiri::Slop &lt;&lt;-EOXML\n&lt;employees&gt;\n  &lt;employee status=\"active\"&gt;\n    &lt;fullname&gt;Dean Martin&lt;/fullname&gt;\n  &lt;/employee&gt;\n  &lt;employee status=\"inactive\"&gt;\n    &lt;fullname&gt;Jerry Lewis&lt;/fullname&gt;\n  &lt;/employee&gt;\n&lt;/employees&gt;\nEOXML\n\n# navigate!\ndoc.employees.employee.last.fullname.content # =&gt; \"Jerry Lewis\"\n\n# access node attributes!\ndoc.employees.employee.first[\"status\"] # =&gt; \"active\"\n\n# use some xpath!\ndoc.employees.employee(\"[@status='active']\").fullname.content # =&gt; \"Dean Martin\"\ndoc.employees.employee(:xpath =&gt; \"@status='active'\").fullname.content # =&gt; \"Dean Martin\"\n\n# use some css!\ndoc.employees.employee(\"[status='active']\").fullname.content # =&gt; \"Dean Martin\"\ndoc.employees.employee(:css =&gt; \"[status='active']\").fullname.content # =&gt; \"Dean Martin\"\n</code></pre> <p>Aww yeah. Can you feel the spirit of @jbarnette and @nakajima flowing through you? That's the power of the slop.4</p>   <ol> <li> <p>Don't use this.\u00a0\u21a9</p> </li> <li> <p>This may or may not be a backhanded compliment.\u00a0\u21a9</p> </li> <li> <p>No, really, don't use this. If you use it, don't report bugs.\u00a0\u21a9</p> </li> <li> <p>You've been warned!\u00a0\u21a9</p> </li> </ol>","title":"Slop 1"},{"location":"tutorials/security.html","text":"<p>The Nokogiri Core Contributors take security very seriously and investigate all reported vulnerabilities.</p> <p>If you would like to report a vulnerablity or have a security concern regarding Nokogiri or how Nokogiri is using any of its underlying platform-specific libraries (such as libxml2 or xerces), please report it via HackerOne.</p> <p>Your report will be acknowledged within 24 hours, and you'll receive a more detailed response within 72 hours indicating next steps in handling your report.</p> <p>If you have not received a reply to your submission within 48 hours, there are a few steps you can take:</p> <ul> <li>Contact the current security coordinator (Mike Dalessio mike.dalessio@gmail.com)</li> <li>Contact the core contributor mailing list (nokogiri-core@googlegroups.com)</li> <li>Join the nokogiri-talk group</li> </ul> <p>Please note, the nokogiri-talk list is a public area. When escalating in that venue, please do not discuss your issue. Simply say that you're trying to get a hold of someone from the core team.</p> <p>The information you share with the Nokogiri Core Contributors as part of this process will be kept confidential within the team, unless or until we need to share information upstream with our dependent libraries' core teams, at which point we will notify you.</p> <p>If a vulnerability is first reported by you, we will credit you with the discovery in the public disclosure.</p>","title":"Security and Vulnerability Reporting"},{"location":"tutorials/toc.html","text":"<ul> <li>Parsing an HTML/XML document</li> <li>Parsing an HTML5 document</li> <li>Searching a XML/HTML document</li> <li>Modifying an HTML/XML document</li> <li>Ensuring well-formed markup</li> </ul>","title":"Nokogiri Tutorials"}]}